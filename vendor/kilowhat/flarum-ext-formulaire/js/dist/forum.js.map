{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,mGCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KCA7B,SAASE,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACR,EACMgB,EAAgBhB,EAAGiB,EAC3B,CCLc,SAASI,EAAeC,EAAUC,GAC/CD,EAASf,UAAYN,OAAOuB,OAAOD,EAAWhB,WAC9Ce,EAASf,UAAUkB,YAAcH,EACjCJ,EAAeI,EAAUC,EAC1B,CCLD,MAAM,EAA+BV,OAAOC,KAAKC,OAAO,gB,aCEnCW,EAAAA,SAAAA,G,wIACjBC,SAAWC,IAAAA,UAAwB,Y,EACnCC,UAAYD,IAAAA,UAAwB,a,EACpCE,IAAMF,IAAAA,UAAwB,O,kBAHbF,CAAaE,KCFlC,MAAM,EAA+Bf,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCQnCgB,EAAAA,SAAAA,G,wIACjBC,MAAQJ,IAAAA,UAAwB,S,EAChCK,UAAYL,IAAAA,UAA8B,a,EAC1CM,QAAUN,IAAAA,UAAwB,W,EAClCO,KAAOP,IAAAA,UAAwB,Q,EAC/BQ,MAAQR,IAAAA,UAAwB,S,EAChCS,cAAgBT,IAAAA,UAAwB,iB,EACxCU,SAAWV,IAAAA,UAAqC,Y,EAChDW,mBAAqBX,IAAAA,UAAyB,sB,EAC9CY,mBAAqBZ,IAAAA,UAAyB,sB,EAC9Ca,gBAAkBb,IAAAA,UAAwB,mB,EAC1Cc,iBAAmBd,IAAAA,UAAwB,oB,EAC3Ce,kCAAoCf,IAAAA,UAAyB,qC,EAC7DgB,cAAgBhB,IAAAA,UAAwB,iB,EACxCiB,yBAA2BjB,IAAAA,UAAwB,4B,EACnDkB,wBAA0BlB,IAAAA,UAAwB,2B,EAClDmB,2BAA6BnB,IAAAA,UAAwB,8B,EACrDoB,2BAA6BpB,IAAAA,UAAwB,8B,EACrDqB,yBAA2BrB,IAAAA,UAAwB,4B,EACnDsB,yBAA2BtB,IAAAA,UAAwB,4B,EACnDuB,6BAA+BvB,IAAAA,UAAmD,gC,EAClFwB,mBAAqBxB,IAAAA,UAAwB,sB,EAC7CyB,mBAAqBzB,IAAAA,UAAwB,sB,EAC7C0B,oBAAsB1B,IAAAA,UAAwB,uB,EAC9C2B,oBAAsB3B,IAAAA,UAAwB,uB,EAC9C4B,iBAAmB5B,IAAAA,UAAyB,oB,EAC5C6B,SAAW7B,IAAAA,UAAyB,Y,EAEpC8B,KAAO9B,IAAAA,OAAmB,Q,EAG1B+B,KAAOC,IAAmB,aAAc,SAAC3B,GACrC,MAAkB,WAAdA,EACO,OAGO,SAAdA,EACO,aAGJ,YACV,I,EAED4B,WAAaD,IAAkB,OAAQ,gCAAiC,SAACD,EAAgBG,GACrF,MAAgB,eAATH,GACHG,GACAA,EAAQC,OACf,I,oCAEDC,OAAA,WACI,IAAMC,EAAQ,IAAIC,KAUlB,OARIC,KAAKV,YACLQ,EAAMG,IAAI,SAAUC,IAAAA,UAAgB,CAChCV,KAAM,SACNW,KAAM,eACNC,MAAOC,IAAAA,WAAAA,MAAqB,6CAI7BP,CACV,E,EAEDQ,YAAA,WACI,MAAO,qBAAuBN,KAAKO,OAAS,IAAOP,KAAKQ,KAAaC,GAAK,GAC7E,E,EAjEgB7C,CAAaH,KCAbiD,EAAAA,SAAAA,G,wIACjBC,SAAWlD,IAAAA,UAA0C,Q,EACrDmD,SAAWnD,IAAAA,UAAyB,Y,EACpC6B,SAAW7B,IAAAA,UAAyB,Y,EACpCoD,UAAYpD,IAAAA,UAAwB,a,EAEpC8B,KAAO9B,IAAAA,OAAmB,Q,EAC1BqD,KAAOrD,IAAAA,OAAmB,Q,oCAE1BoC,OAAA,WACI,IAAMC,EAAQ,IAAIC,KAkBlB,OAhBIC,KAAKY,YACLd,EAAMG,IAAI,OAAQC,IAAAA,UAAgB,CAC9BV,KAAM,OACNW,KAAM,cACNC,MAAOC,IAAAA,WAAAA,MAAqB,6CAIhCL,KAAKV,YACLQ,EAAMG,IAAI,SAAUC,IAAAA,UAAgB,CAChCV,KAAM,SACNW,KAAM,eACNC,MAAOC,IAAAA,WAAAA,MAAqB,6CAI7BP,CACV,E,EAEDQ,YAAA,WACI,MAAO,2BAA6BN,KAAKO,OAAS,IAAOP,KAAKQ,KAAaC,GAAK,GACnF,E,EAjCgBC,CAAmBjD,KCRxC,MAAM,EAA+Bf,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCOjD,SAASmE,EAAmBD,GAC/B,OAAOT,IAAAA,MAAU,qBAAsB,CACnCI,GAAIK,EAAKjD,SAEhB,CAEM,SAASmD,EAAmBF,GAC/B,OAAOT,IAAAA,MAAU,qBAAsB,CACnCI,GAAIK,EAAKL,MAEhB,CAEM,SAASQ,EAA0BH,GACtC,OAAOT,IAAAA,MAAU,4BAA6B,CAC1CI,GAAIK,EAAKL,MAEhB,CAEM,SAASS,EAAqBC,GAEjC,OAAOd,IAAAA,MAAU,uBAAwB,CACrCI,GAAIU,EAAWV,MAEtB,CAEM,SAASW,EAAkB7B,EAAYuB,GAC1C,OAAOT,IAAAA,MAAU,oBAAqB,CAClCgB,SAAU9B,EAAK8B,WACfP,KAAMA,EAAKjD,SAElB,CC7BD,IAAMyD,EAAoB,yCAMLC,EAAAA,SAAAA,G,wIACjBC,UAAoB,G,EACpBC,OAAiB,E,oCAEjBC,UAAA,WACI,MAAO,8CACV,E,EAEDzD,MAAA,WACI,OAAOoC,IAAAA,WAAAA,MAAqBiB,EAAoB,QACnD,E,EAEDK,QAAA,WAAU,WACN,OAAOC,EAAE,cAAe,CACpBA,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,EAAoB,gBACpDM,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOuD,KAAKwB,UACZK,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAK+E,UAAY/E,EACjB,EAAKgF,OAAQ,CAChB,QAGTG,EAAE,eAAgB,CACdG,IAAAA,UAAiB,CACbvC,KAAM,SACNkC,UAAW,yBACXM,QAAShC,KAAKgC,QACdC,UAAWjC,KAAKyB,OACjBpB,IAAAA,WAAAA,MAAqBiB,EAAoB,qBAGvD,E,EAEDY,SAAA,SAASC,GACLA,EAAMC,iBAENpC,KAAKgC,SAAU,EAEf3B,IAAAA,MAAAA,aAA6B,oBAAoBgC,KAAK,CAClDpE,MAAO+B,KAAKwB,UACZtD,cAAe8B,KAAKwB,UACpB1D,UAAWkC,KAAKsC,MAAMC,SAGtBnE,mBAA4C,OAAxB4B,KAAKsC,MAAMC,UAChC,CACCC,aAAcxC,KAAKyC,QAAQzF,KAAKgD,QACjC0C,MAAK,SAAA5B,GACJT,IAAAA,MAAAA,QAEAuB,EAAEe,MAAMC,IAAI5B,EAAmBF,GAClC,GACJ,E,EAvDgBS,CAAqBsB,KCd1C,MAAM,EAA+BnG,OAAOC,KAAKC,OAAO,8B,aCUnCkG,EAAAA,W,iCACjBC,KAAA,SAAKC,GACD,IAAMC,EAAY,mBAAqBD,EAAMV,MAAMY,QAAU,GAAK,oBAElE,EAGIF,EAAMV,MAHV,IACIa,YAAAA,OADJ,aAEIC,OAAAA,OAFJ,SAKA,OAAID,EACOvB,EAAE,2BAA4BA,EAAE,aAAcA,EAAE,oBAAqB,CACxEA,EAAE,4BAA6BA,EAAE,KAAMyB,IAAUC,IAAAA,UAAAA,eAAmCC,aACpF3B,EAAE,iBAAkBA,EAAEqB,EAAWD,EAAMQ,eAIxC5B,EAAE,8DAA+D,CACpEF,UAAW0B,EAAS,kCAAoC,IACzDxB,EAAE,aAAcA,EAAEqB,EAAWD,EAAMQ,WACzC,E,EAnBgBV,GCPAW,EAAAA,WAMjB,WAAYC,QAAkB,IAAlBA,IAAAA,EAAc,CAAC,GAAG,KAL9BA,YAK8B,OAJ9BC,MAAgB,GAIc,KAH9BC,aAAuB,EAGO,KAF9B5B,SAAmB,EAGfhC,KAAK0D,OAASA,CACjB,C,2BAEDG,cAAA,WACI,IAAMH,EAAc,CAACI,OAAQ,CAAC,GAQ9B,OANAJ,EAAOK,KAAO/D,KAAKgE,UAAUhE,KAAK0D,OAAOK,MAErC/D,KAAK0D,OAAOO,IACZP,EAAOI,OAAOG,EAAIjE,KAAK0D,OAAOO,GAG3BP,CACV,E,EAEDM,QAAA,WAMI,MALiB,CAEjBE,OAAa,aACbA,OAAa,YAGhB,E,EAEDC,MAAA,WACInE,KAAK2D,MAAQ,GACb/B,EAAEwC,QACL,E,EAEDC,QAAA,YAAmC,yBAAJ,CAAC,EAAG,GAA1BC,WAAAA,OAA0B,SAO/B,OANAtE,KAAKgC,SAAU,EAEVsC,GACDtE,KAAKmE,QAGFnE,KAAKuE,cAAc7B,MACtB,SAAA8B,GACI,EAAKb,MAAQ,GACb,EAAKc,aAAaD,EACrB,IACD,WACI,EAAKxC,SAAU,EACfJ,EAAEwC,QACL,GAER,E,EAEDG,YAAA,SAAYG,QAAoB,IAApBA,IAAAA,EAAiB,GACzB,IAAMC,EAAuBtE,IAAAA,uBAE7B,GAAIsE,EACA,OAAOC,QAAQC,QAAQF,GAG3B,IAAMjB,EAAS1D,KAAK6D,gBAGpB,OAFAH,EAAOoB,KAAO,CAACJ,OAAAA,GAERrE,IAAAA,MAAAA,KAAe,mBAAoBqD,EAC7C,E,EAEDqB,SAAA,WACI/E,KAAKgC,SAAU,EAEfhC,KAAKuE,YAAYvE,KAAK2D,MAAMqB,QACvBtC,KAAK1C,KAAKyE,aAAazH,KAAKgD,MACpC,E,EAEDyE,aAAA,SAAaD,GAAc,MAQvB,OAPA,EAAAxE,KAAK2D,OAAMsB,KAAX,QAAmBT,GAEnBxE,KAAKgC,SAAU,EACfhC,KAAK4D,cAAgBY,EAAQU,QAAQC,SAAWX,EAAQU,QAAQC,MAAMC,KAEtExD,EAAEwC,SAEKI,CACV,E,EApFgBf,GCHrB,MAAM,EAA+B/G,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCWnCyI,EAAAA,W,iCACjBtC,KAAA,SAAKC,GACD,IAAMsC,EAAyC,CAAC,EAEhD,CAAC,SAAU,UAAUC,SAAQ,SAAA3J,GACzB0J,EAAY1J,GAAO4J,IAAYnF,IAAAA,WAAAA,MAAqB,uCAAyCzE,GAChG,IAED,IAAM6J,EAAezC,EAAMV,MAAMyB,MAAQjI,OAAO4J,KAAKJ,GAAa,GAElE,OAAO1D,EAAE+D,IAAU,CACfC,gBAAiB,SACjBxF,MAAOkF,EAAYtC,EAAMV,MAAMyB,OAASjI,OAAO4J,KAAKJ,GAAapB,KAAI,SAAAtI,GAAG,OAAI0J,EAAY1J,EAAhB,IAAsB,GAC9FuE,KAAM,uBAAyC,WAAhBsF,EAA2B,KAAO,SAClE3J,OAAO4J,KAAKJ,GAAapB,KAAI,SAAAzH,GAC5B,IAAM2D,EAAQkF,EAAY7I,GACpBoJ,EAASJ,IAAgBhJ,EAE/B,OAAOmF,EAAEG,IAAQ,CACb5B,MAAM0F,GAAS,eACfC,QAAS,WACL9C,EAAMV,MAAMyD,SAAStJ,EACxB,EACDoJ,OAAAA,GACDzF,EACN,IACJ,E,EA1BgBiF,GCTN,SAAS,EAACvE,GACrB,OAAQA,EAAKvC,oBAAsB,MAAQuC,EAAKxC,kBAAoB,IAAMwC,EAAKxC,kBAAoB,GACtG,CCJc,SAAS0H,KActB,OAbAA,GAAWlK,OAAOmK,OAASnK,OAAOmK,OAAOjJ,OAAS,SAAUkJ,GAC1D,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUpB,OAAQmB,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIvK,KAAOyK,EACVvK,OAAOM,UAAUC,eAAeC,KAAK+J,EAAQzK,KAC/CsK,EAAOtK,GAAOyK,EAAOzK,GAG1B,CAED,OAAOsK,CACR,EACMF,GAASM,MAAMtG,KAAMoG,UAC7B,CCfD,MAAM,GAA+B1J,OAAOC,KAAKC,OAAO,+B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,uB,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,gC,eCSlD0E,GAAoB,iDAE1B,SAASiF,GAAW9F,GAChB,IAAM+F,EAAQnG,IAAAA,MAAAA,QAAkB,SAAUI,GAE1C,OAAO+F,EAAQC,KAAAA,UAAqB,CAACD,MAAAA,EAAOpG,MAAO,OAAS,EAC/D,C,IAaoBsG,GAAAA,SAAAA,G,wIACjBpE,WAAAA,E,WAEOqE,UAAP,SAAiBrE,GACb,EAAMqE,UAAN,UAAgBrE,GAEhBA,EAAMZ,UAAY,qBAClBY,EAAMsD,gBAAkB,qBAC3B,E,2BAED7C,KAAA,SAAKC,GAA6C,WACxCQ,EAAqB,GAEvBoD,EAAW5G,KAAKsC,MAAMsE,SAEpBC,EAAuB,OAAbD,EACVE,EAAWF,IAAkD,IAAtCA,EAASG,QAAQC,KAAAA,UACxCC,EAAUL,IAAmD,IAAvCA,EAASG,QAAQC,KAAAA,WACvCE,EAAa7G,IAAAA,MAAAA,QAAyB,SAAU2G,KAAAA,kBAqFtD,OAlFIhH,KAAKsC,MAAMlC,MADXyG,EACmB3G,IAAAA,UAAgB,CAACC,KAAM,6BACnC2G,EACY5G,IAAAA,UAAgB,CAACC,KAAM,iBACnC8G,EACY/G,IAAAA,UAAgB,CAACC,KAAM,gBAEvB,CAACoG,GAAWS,KAAAA,kBAAyBJ,EAAS1C,IAAIqC,KAGrEvG,KAAKmH,UACAnH,KAAKsC,MAAM8E,iBACZ5D,EAASyB,KACLrD,EAAEG,IAAQ,CACN5B,MAAM0G,GAAU,eAChBf,QAAS,kBAAM,EAAKzD,KAAK,KAAhB,GACV,CACCnC,IAAAA,UAAgB,CAACC,KAAM,6BACvB,IACAE,IAAAA,WAAAA,MAAqBiB,GAAoB,cAKjDtB,KAAKsC,MAAM+E,YACX7D,EAASyB,KACLrD,EAAEG,IAAQ,CACN5B,MAAM2G,GAAW,eACjBhB,QAAS,kBAAM,EAAKzD,KAAK,CAAC2E,KAAAA,UAAjB,EACT/E,SAAUjC,KAAKsH,gBAAgBN,KAAAA,WAChC,CACC9G,IAAAA,UAAgB,CAACC,KAAM,iBACvB,IACAE,IAAAA,WAAAA,MAAqBiB,IAAqBtB,KAAKsC,MAAMiF,mBAAqB,0BAA4B,uBAKlH/D,EAASyB,KACLrD,EAAEG,IAAQ,CACN5B,MAAM8G,GAAU,eAChBnB,QAAS,kBAAM,EAAKzD,KAAK,CAAC2E,KAAAA,WAAjB,EACT/E,SAAUjC,KAAKsH,gBAAgBN,KAAAA,YAChC,CACC9G,IAAAA,UAAgB,CAACC,KAAM,gBACvB,IACAE,IAAAA,WAAAA,MAAqBiB,GAAoB,oBAG7CkG,KAAAA,YAEA5F,EAAEG,IAAQ,CACN5B,QAAO0G,GAAYC,GAAaG,IAAU,eAC1ChF,UAAW4E,IAAYC,IAAaG,EACpCnB,QAAS,SAAC2B,GACFA,EAAEC,UAAUD,EAAEE,kBAClB,EAAKtF,KAAK,GACb,GACF,CACCkE,GAAWW,EAAWzG,MACtB,IACAyG,EAAWU,gBAIlB,GAAkB3C,KAAKqB,MACpB9C,EACCnD,IAAAA,MAAAA,IAAc,UACVyD,QAAO,SAAC0C,GAAD,OAA+F,IAApF,CAACQ,KAAAA,iBAAwBA,KAAAA,SAAgBA,KAAAA,WAAiBD,QAAQP,EAAM/F,KAAnF,IACPyD,KAAI,SAACsC,GAAD,OACD5E,EAAEG,IAAQ,CACN5B,MAAMyG,IAA+C,IAAnCA,EAASG,QAAQP,EAAM/F,OAAgB,eACzDqF,QAAS,SAAC2B,GACFA,EAAEC,UAAUD,EAAEE,kBAClB,EAAKE,OAAOrB,EAAM/F,KACrB,EACDwB,SAAU,EAAKqF,gBAAgBd,EAAM/F,OAAU,EAAK6G,gBAAgBN,KAAAA,YAAoB,EAAKM,gBAAgBN,KAAAA,WAC9G,CAACT,GAAWC,EAAM/F,MAAQ,IAAK+F,EAAMoB,cARvC,MAcV,EAAP,UAAa7E,KAAb,gBAAsBC,EAAtB,CAA6BQ,SAAAA,IAChC,E,EAEDnB,KAAA,SAAKuE,GACD5G,KAAKsC,MAAMyD,SAASa,EACvB,E,EAEDiB,OAAA,SAAOC,GACH,IAAIlB,EAAW5G,KAAKsC,MAAMsE,UAAY,GAEhCmB,EAAQnB,EAASG,QAAQe,IAEhB,IAAXC,EACAnB,EAASoB,OAAOD,EAAO,IAEvBnB,EAAS3B,KAAK6C,GACdlB,EAAWA,EAAS9C,QAAO,SAACrD,GAAD,OAA2D,IAAnD,CAACuG,KAAAA,SAAgBA,KAAAA,WAAiBD,QAAQtG,EAAlD,KAG/BT,KAAKqC,KAAKuE,EACb,E,EAEDU,gBAAA,SAAgB7G,GAEZ,OAAO,CACV,E,EAhIgBiG,CAA2Bf,KCvB1CrE,GAAoB,6CAML2G,GAAAA,W,iCACjBlF,KAAA,SAAKC,GAID,IAAIkF,EAAiD,CACjD,CAAC,kBAAmB,QAAQ,IAGhC,OAAQlF,EAAMV,MAAM9C,MAChB,IAAK,aACD0I,EAAoB,CAChB,CAAC,8BAA+B,oBAAoB,GACpD,CAAC,8BAA+B,oBAAoB,GACpD,CAAC,+BAAgC,qBAAqB,GACtD,CAAC,+BAAgC,qBAAqB,IAE1D,MACJ,IAAK,OACDA,EAAoB,CAChB,CAAC,wBAAyB,cAAc,GACxC,CAAC,wBAAyB,cAAc,GACxC,CAAC,yBAA0B,eAAe,GAC1C,CAAC,yBAA0B,eAAe,IAKtD,IAAMC,EAAkE,SAAzDC,aAAaC,QAAQ,gCAE9BC,IAAYjI,IAAAA,MAAAA,UAAoB,YAEtC,OAAOuB,EAAE,4BAA6B,CAClCA,EAAE,KAAM,CACJkE,QADI,WAEIqC,EACAC,aAAaG,WAAW,gCAExBH,aAAaI,QAAQ,+BAAgC,OAE5D,GACF,CACCnI,IAAAA,WAAAA,MAAqBiB,GAAoB,SACzC,IACAnB,IAAK,mBAAqBgI,EAAS,OAAS,OAC5CG,EAAU,KAAO,CACb,IACA1G,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,kBAGzD6G,EAAS,KAAOD,EAAkBhE,KAAI,SAAAuE,GAAU,OAAI7G,EAAE,4CAA6C,CAC/FA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,eAAiBmH,EAAW,KAChF/B,GAAmBgC,UAAU,CACzB9B,SAAUvG,IAAAA,MAAAA,UAAyB,+BAA+BoI,EAAW,IAC7E1C,SAAU,SAACa,GACPvG,IAAAA,MAAAA,UAAyB,+BAA+BoI,EAAW,IAAM7B,EAEzEvG,IAAAA,QAAY,CACRsI,OAAQ,OACRhL,IAAK0C,IAAAA,MAAAA,UAAoB,UAAY,cACrCuI,KAAM,CACFH,WAAYA,EAAW,GACvB7B,SAAAA,IAGX,EACD3E,UAAWqG,EACXjB,WAAYoB,EAAW,GACvBlB,mBAAoBkB,EAAW,KAAwC,IAAlCA,EAAW,GAAG1B,QAAQ,OAC3DK,iBAAiB,KAnBuB,KAuBvD,E,EAzEgBa,GCFAY,GAAAA,W,kBACjBpM,MAAgB,G,KAChBgJ,YAAsB,G,KACtBqD,SAAmB,C,4BAEnBC,OAAA,SAAO/F,GACHhD,KAAKvD,MAAQuG,EAAMV,MAAM0G,aACzBhJ,KAAKyF,YAAczF,KAAKvD,KAC3B,E,EAEDsG,KAAA,SAAKC,GAAsC,WACvC,OAAOpB,EAAE,UAAWA,EAAE,gBAAiB,CACnCA,EAAE,oBAAqB,CACnBpC,KAAM,SACN/C,MAAOuD,KAAKvD,MACZoF,QAAS,SAACM,GACN,EAAK1F,MAAS0F,EAAM+D,OAA4BzJ,MAChDwM,aAAa,EAAKH,UAElB,EAAKA,SAAWI,YAAW,WACvB,EAAKzD,YAAc,EAAKhJ,MACxBuG,EAAMV,MAAMyD,SAAS,EAAKtJ,OAC1BmF,EAAEwC,QACL,GAAE,IACN,EACD+E,YAAanG,EAAMV,MAAM6G,cAE7BnJ,KAAKyF,YAAc7D,EAAE,uDAAwD,CACzEpC,KAAM,SACNsG,QAAS,WACL,EAAKrJ,MAAQ,GACb,EAAKgJ,YAAc,GACnBzC,EAAMV,MAAMyD,SAAS,GACxB,GACF5F,IAAK,wBAA0B,OAEzC,E,EApCgB0I,GCSfvH,GAAoB,wCAEpB8H,GAAO,CACT,CACIxN,IAAK,aACLuE,KAAM,gBACNwC,MAAO,uBAEX,CACI/G,IAAK,aACLuE,KAAM,qBACNwC,MAAO,iCAEX,CACI/G,IAAK,OACLuE,KAAM,kBACNwC,MAAO,4BAQM0G,GAAAA,SAAAA,G,wIACjBC,cAAAA,E,EACAC,cAAAA,E,EACAjH,WAAAA,E,oCAEAyG,OAAA,SAAO/F,GAGH,OAFA,YAAM+F,OAAN,UAAa/F,GAELhD,KAAKsC,MAAMkH,WACf,IAAK,gCACDxJ,KAAKsJ,SAAW,aAChB,MACJ,IAAK,0BACDtJ,KAAKsJ,SAAW,OAChB,MACJ,QACItJ,KAAKsJ,SAAW,aAGxBtJ,KAAKuJ,SAAW,IAAI9F,EAAc,CAC9BQ,EAAG,QAAUjE,KAAKsJ,WAEtBtJ,KAAKuJ,SAASlF,SACjB,E,EAEDtB,KAAA,WAAiB,WACb,OAAOnB,EAAEkB,EAAe,CACpBlB,EAAE,6CAA8C,CAC5CzB,IAAK,gBAAiB,CAClBuB,UAAW,qBAEfE,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,oBAC7BM,EAAE,2BAA4B,CAC1BA,EAAE,KAAMA,EAAE,IAAK,CACXsE,OAAQ,SACRuD,KAAM,qDACP,CACCpJ,IAAAA,WAAAA,MAAqBiB,2BACrB,IACAnB,IAAK,+BAETyB,EAAE,KAAMA,EAAE,IAAK,CACXsE,OAAQ,SACRuD,KAAM,sCACP,CACCpJ,IAAAA,WAAAA,MAAqBiB,qBACrB,IACAnB,IAAK,iCAGbyB,EAAE,kBAAmBwH,GAAKlF,KAAI,SAAAwF,GAAG,OAAIC,IAAAA,UAAqB,CACtDjI,UAAW,EAAK4H,WAAaI,EAAI9N,IAAM,SAAW,GAClDuE,KAAMuJ,EAAIvJ,KACVsJ,KAAMpJ,IAAAA,MAAUqJ,EAAI/G,QACrBtC,IAAAA,WAAAA,MAAqBiB,GAAoB,QAAUoI,EAAI9N,KAJzB,OAMrCgG,EAAEqG,GAAgB,CACdzI,KAAMQ,KAAKsJ,WAEf1H,EAAE,qBAAsB,CACpBA,EAAEyD,EAAkB,CAChBtB,KAAM/D,KAAKuJ,SAAS7F,OAAOK,KAC3BgC,SAAU,SAACtJ,GACP,EAAK8M,SAAS7F,OAAOK,KAAOtH,EAC5B,EAAK8M,SAASlF,SACjB,IAELzC,EAAEiH,GAAa,CACXG,aAAc,GACdjD,SAAU,SAACtJ,GACP,EAAK8M,SAAS7F,OAAOO,EAAI,QAAU,EAAKqF,SAAW,IAAM7M,EACzD,EAAK8M,SAASlF,SACjB,EACD8E,YAAa9I,IAAAA,WAAAA,MAAqBiB,GAAoB,YAE1DS,IAAAA,UAAiB,CACbL,UAAW,kDACXvB,KAAM,cACN2F,QAAS,WACLzF,IAAAA,MAAAA,KAAekB,EAAc,CACzBgB,SAA4B,eAAlB,EAAK+G,SAA4B,OAA4B,SAAlB,EAAKA,SAAsB,SAAW,MAElG,GACFjJ,IAAAA,WAAAA,MAAqBiB,GAAoB,UAEhDtB,KAAK4J,KAAK5J,KAAKuJ,WAEtB,E,EAEDK,KAAA,SAAKC,GAAsB,IACnB7H,EADmB,OAYvB,OATI6H,EAAM7H,QACNA,EAAU8H,IAAAA,YACHD,EAAMjG,cACb5B,EAAUD,IAAAA,UAAiB,CACvBL,UAAW,SACXoE,QAAS+D,EAAM9E,SAAS/H,KAAK6M,IAC9BxJ,IAAAA,WAAAA,MAAqBiB,GAAoB,eAGrB,IAAvBuI,EAAMlG,MAAMqB,QAAiB6E,EAAM7H,QAMhCJ,EAAE,MAAO,CACZA,EAAE,4BAA6B,CAC3BA,EAAE,QAASA,EAAE,KAAM,CACfA,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,kBAC/B,eAAlBtB,KAAKsJ,SAA4B,CAC7B1H,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,+BACjDM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,gCACjD,CACAM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,qBAErDM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,wBACjDM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,uBAErDM,EAAE,QAASiI,EAAMlG,MAAMO,KAAI,SAAApD,GACvB,IAAMjB,EAASiB,EAAKjB,SAAS0D,UAE7B,OAAO3B,EAAE,KAAM,CACXA,EAAE,KAAM,CACJd,EAAK5C,gBACL2B,EAAOmF,OAASpD,EAAE,uCAAwCyB,IAAUxD,IAAW,OAEnF+B,EAAE,KAAMd,EAAK1C,qBAAuB+B,IAAK,gBAAkB,MACzC,eAAlB,EAAKmJ,SAA4B1H,EAAE,KAAMd,EAAKzC,qBAAuB8B,IAAK,gBAAkB,MAAQ,KACpGyB,EAAE,KAAMmI,EAAgBjJ,IACxBc,EAAE,KAAM,CACJ+H,IAAAA,UAAqB,CACjBjI,UAAW,SACX+H,KAAMzI,EAAmBF,IAC1BT,IAAAA,WAAAA,MAAqBiB,GAAoB,SAC5C,IACAqI,IAAAA,UAAqB,CACjBjI,UAAW,SACX+H,KAAM1I,EAAmBD,IAC1BT,IAAAA,WAAAA,MAAqBiB,GAAoB,SAC5C,IACAqI,IAAAA,UAAqB,CACjBjI,UAAW,SACX+H,KAAMxI,EAA0BH,IACjCT,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAGvD,OAELU,IAhDOgI,IAAAA,UAAsB,CACzBC,KAAM5J,IAAAA,WAAAA,MAAqBiB,GAAoB,UAiD1D,E,EAxJgB+H,CAAsBa,KC1BtBC,GAAAA,W,kBACjBC,aAA8B,K,KAC9BC,wBAAkC,E,KAElCC,0BAAAA,E,KACAC,iBAAAA,C,4BAEAC,SAAA,SAASxH,GAAgC,WAGrChD,KAAKsK,qBAAuB,SAAAnI,GACxB,GAA0B,OAAtB,EAAKiI,aAAuB,CAC5BjI,EAAMC,iBACND,EAAMwF,kBAENxF,EAAMsI,aAAaC,WAAa,OAEhC,IAAIC,EAAc,EAGjB3H,EAAM4H,IAAIC,WAAoCtF,SAAQ,SAAAuF,GACnD,IAAM/C,EAAQgD,SAASD,EAAQE,QAAQjD,OAAS,IAGhD,IAAIkD,MAAMlD,GAAV,CAIA,IAAMmD,EAAWJ,EAAQK,wBAEzB,GAA8B,eAA1BnI,EAAMV,MAAM8I,UAA4B,CAExC,IAAKF,EAASG,MACV,OAGJ,IAAMC,EAAUJ,EAASK,KAAQL,EAASG,MAAQ,EAE9ClJ,EAAMqJ,MAAQF,EAAUG,OAAOC,UAC/Bf,EAAc5C,EAAQ,EAE7B,KAAM,CAEH,IAAKmD,EAASS,OACV,OAGJ,IAAMC,EAAUV,EAASW,IAAOX,EAASS,OAAS,EAE9CxJ,EAAM2J,MAAQF,EAAUH,OAAOM,UAC/BpB,EAAc5C,EAAQ,EAE7B,CA1BA,CA2BJ,IAEG4C,IAAgB,EAAKN,0BACrB,EAAKA,wBAA0BM,EAC/B/I,EAAEwC,SAET,CACJ,EAED4H,SAASC,iBAAiB,WAAYjM,KAAKsK,sBAC3C0B,SAASC,iBAAiB,YAAajM,KAAKsK,sBAI5CtK,KAAKuK,YAAc,SAAApI,GACf,GAA0B,OAAtB,EAAKiI,aAAuB,CAC5BjI,EAAMC,iBACND,EAAMwF,kBAEN,IAAMuE,EAAS,EAAK9B,aAGd+B,EAAc,EAAK9B,yBAA2B,EAAKA,wBAA0B,EAAKD,aAAe,EAAI,GAE3G,EAAKA,aAAe,KACpBxI,EAAEwC,SAEE+H,IAAgBD,GAChBlJ,EAAMV,MAAM8J,OAAOF,EAAQC,EAElC,CACJ,EAEDH,SAASC,iBAAiB,OAAQjM,KAAKuK,YAC1C,E,EAED8B,SAAA,WACIL,SAASM,oBAAoB,WAAYtM,KAAKsK,sBAC9C0B,SAASM,oBAAoB,YAAatM,KAAKsK,sBAC/C0B,SAASM,oBAAoB,OAAQtM,KAAKuK,YAC7C,E,EAEDxH,KAAA,SAAKC,GAAmC,WAC9BQ,EAAoB,GAEzBR,EAAMQ,SAA0B+B,SAAQ,SAAC5D,EAASoG,GACrB,OAAtB,EAAKqC,cAAyB,EAAKC,0BAA4BtC,GAC/DvE,EAASyB,KAAK,EAAKkE,YAAYnG,IAG/B+E,IAAU,EAAKqC,eACVzI,EAAQW,MAAMiK,QACf5K,EAAQW,MAAMiK,MAAQ,CAAC,GAG3B5K,EAAQW,MAAMiK,MAAMC,QAAU,QAGlC7K,EAAQW,MAAM,cAAgByF,EAC9BpG,EAAQW,MAAMmK,YAAc,SAAUtK,GAClC,GAAKA,EAAM+D,QAAW/D,EAAMsI,aAA5B,CASA,IAFA,IAAIiC,EAAUvK,EAAM+D,OAAuByG,WAEpCD,GACCA,IAAW1M,MADJ,CAOX,GAAI0M,aAAkBE,aAAeF,EAAOG,UAAUC,SAAS,yBAI3D,YAFA3K,EAAMiC,QAAS,GAKnBsI,EAASA,EAAOC,UACnB,CAED,IAAKI,EAAmB/J,EAAMV,MAAzByK,gBAQL,QAJ+B,IAApBA,IACPA,EAAkB,aAGhBA,IAAoB5K,EAAM+D,OAAuB2G,UAAUC,SAASC,IAAsB/J,EAAMV,MAAML,SAmBxGE,EAAMiC,QAAS,MAnBmG,CAClH,IAAM0G,EAAUkC,MAAMC,KAAMjK,EAA0B4H,IAAIC,YAAoCqC,MAAK,SAAAC,GAAI,OAAIA,EAAKnC,QAAQjD,QAAUA,EAAQ,EAAnC,IAIvG,IAAK+C,EACD,OAGJ,IAAMI,EAAWJ,EAAQK,wBAEzBhJ,EAAMsI,aAAa2C,cAAgB,OACnCjL,EAAMsI,aAAa4C,QAAQ,aAActF,EAAQ,IACjD5F,EAAMsI,aAAa6C,aAAaxC,EAAS3I,EAAMqJ,MAAQN,EAASK,KAAOE,OAAOC,QAASvJ,EAAM2J,MAAQZ,EAASW,IAAMJ,OAAOM,SAE3H/I,EAAM6G,MAAMO,aAAerC,EAC3B/E,EAAM6G,MAAMQ,wBAA0BtC,CACzC,CA9CA,MAHG5F,EAAMiC,QAAS,CAqDtB,EAEDZ,EAASyB,KAAKtD,EACjB,IAEyB,OAAtB3B,KAAKoK,cAAyBpK,KAAKqK,0BAA6BrH,EAAMQ,SAAqBwB,QAC3FxB,EAASyB,KAAKjF,KAAKmJ,YAAYnG,IAGnC,IAAMV,EAAa,CACfZ,UAAW,yBAOf,OAJIsB,EAAMV,MAAMZ,YACZY,EAAMZ,WAAa,IAAMsB,EAAMV,MAAMZ,WAGlCE,EAAEoB,EAAMV,MAAMiL,cAAgB,MAAOjL,EAAOkB,EACtD,E,EAED2F,YAAA,SAAYnG,GACR,OAAOpB,EAAEoB,EAAMV,MAAMkL,gBAAkB,MAAO,CAC1C9L,UAAW,gCACX9F,IAAK,eACyB,OAA/BoH,EAAMV,MAAMkL,eAA0B5L,EAAE,KAAM,CAC7C6L,QAAS,MACR,KACR,E,EAnMgBtD,GChBrB,MAAM,GAA+BzN,OAAOC,KAAKC,OAAO,4B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,eCOnC8Q,GAAAA,W,iCACjB3K,KAAA,SAAKC,GACD,IAAI2K,EAAS3K,EAAMV,MAAMqL,QAAU,GAQnC,MAJsB,iBAAXA,GAAwBX,MAAMY,QAAQD,KAC7CA,EAASA,EAAOA,QAAU,IAGvBA,GAAUA,EAAO3I,OAASpD,EAAE,gCAAiC+L,EAAOzJ,KAAI,SAAA2J,GAAK,OAAIjM,EAAE,KAAMiM,EAAZ,KAAuBjM,EAAE,MAChH,E,EAXgB8L,GCIAI,GAAAA,W,iCACjB/K,KAAA,SAAKC,GACD,IAAI2K,EAAS3K,EAAMV,MAAMyL,kBAAoB,GAQ7C,MAJsB,iBAAXJ,GAAwBX,MAAMY,QAAQD,KAC7CA,EAASA,EAAOA,QAAU,IAGvB/L,EAAE,oCAAqC,CAC1CF,WAAYiM,GAAUA,EAAO3I,OAAS,WAAa,KAAOhC,EAAMV,MAAMZ,UAAY,IAAMsB,EAAMV,MAAMZ,UAAY,KACjH,CACCE,EAAE,oBAAqB,CACnBoB,EAAMV,MAAMlC,MACZ4C,EAAMV,MAAM0L,YAAcpM,EAAE,IAAKoB,EAAMV,MAAM0L,aAAe,OAEhEpM,EAAE,oBAAqB,CACnBoB,EAAMQ,SACN5B,EAAE8L,GAAkB,CAChBC,OAAQA,OAIvB,E,EAxBgBG,GCFAG,GAAAA,W,iCACjBlL,KAAA,SAAKC,GACD,IAAMV,EAAa,CACfZ,WAAYsB,EAAMV,MAAMZ,UAAYsB,EAAMV,MAAMZ,UAAY,IAAM,IAAM,aAS5E,OANIsB,EAAMV,MAAML,SACZK,EAAMZ,WAAa,YAEnBY,EAAM4L,UAAY,OAGftM,EAAEoB,EAAMV,MAAM6L,YAAc,MAAO7L,EAAOnC,IAAK,qBACzD,E,EAbgB8N,GCYf3M,GAAoB,6CAeI8M,GAAAA,WAY1B,cAc6B,QAbbC,OAAAA,OAaa,MAbJ,CAAC,EAaG,MAZblN,WAAAA,OAYa,MAZA,CAAC,EAYD,MAXbmN,SAAAA,OAWa,MAXF,KAWE,MAVbvI,SAAAA,OAUa,MAVF,WACV,EASY,MARbwI,YAAAA,OAQa,MARC,WACb,EAOY,MANbC,SAAAA,OAMa,MANF,WACV,EAKY,MAJbvM,SAAAA,OAIa,aAHb8L,iBAAAA,OAGa,MAHM,CAAC,EAGP,MAFbU,MAAAA,OAEa,MAFL,EAEK,MADbC,WAAAA,OACa,cAzB7BL,YAyB6B,OAxB7BlN,gBAwB6B,OAvB7BmN,cAuB6B,OAtB7BvI,cAsB6B,OArB7BwI,iBAqB6B,OApB7BC,cAoB6B,OAnB7BvM,cAmB6B,OAlB7B8L,sBAkB6B,OAjB7BU,WAiB6B,OAhB7BC,gBAgB6B,EACzB1O,KAAKqO,OAASA,EACdrO,KAAKmB,WAAaA,EAClBnB,KAAKsO,SAAWA,EAChBtO,KAAK+F,SAAWA,EAChB/F,KAAKuO,YAAcA,EACnBvO,KAAKwO,SAAWA,EAChBxO,KAAKiC,SAAWA,EAChBjC,KAAK+N,iBAAmBA,EACxB/N,KAAKyO,MAAQA,EACbzO,KAAK0O,WAAaA,EAId5S,OAAO4J,KAAK1F,KAAKqO,QAAQrJ,QACzB2J,GAAwB3O,KAAKqO,OAEpC,C,2BAEDO,UAAA,SAAUhT,EAA0BiT,GAChC,YADwD,IAAxBA,IAAAA,EAAoB,IAC7C7O,KAAKqO,OAAOzS,IAAQiT,CAC9B,E,EAEDC,cAAA,WACI,MAAO,kBAAoB9O,KAAK4O,UAAU,SAC7C,E,EAEDG,UAAA,SAAUnT,GAA0B,WAChC,OAAO,SAACa,GACU,OAAVA,IAA4B,IAAVA,GAA6B,KAAVA,SAC9B,EAAK4R,OAAOzS,GAEnB,EAAKyS,OAAOzS,GAAOa,EAGX,SAARb,GACA+S,GAAwB,EAAKN,QAGjC,EAAKtI,UACR,CACJ,E,EAEDiJ,cAAA,SAAcH,EAAwBI,QAAkD,IAA1EJ,IAAAA,EAAoB,SAAsD,IAAlDI,IAAAA,EAAyC,SAC3E,IAAMC,EAAQlP,KAAKmB,WAAWnB,KAAK4O,UAAU,QAE7C,OAAIM,EACOA,EAAMD,GAGVJ,CACV,E,EAEDM,cAAA,SAAc1S,GACI,OAAVA,IAA4B,IAAVA,GAA6B,KAAVA,GAAgBA,IAAU,UACxDuD,KAAKmB,WAAWnB,KAAK4O,UAAU,SAEjC5O,KAAKmB,WAAWnB,KAAK4O,UAAU,UAChC5O,KAAKmB,WAAWnB,KAAK4O,UAAU,QAAU,CACrCnS,MAAO,KAIfuD,KAAKmB,WAAWnB,KAAK4O,UAAU,QAAQnS,MAAQA,GAInD,IAAM2S,EAA8BpP,KAAK+N,iBAAiB/N,KAAK4O,UAAU,QACrEQ,UACOA,EAA4BzB,OAGvC3N,KAAK+F,UACR,E,EAEDsJ,0BAAA,WACI,MAAO,CACH,QACA,cACA,WACA,MACA,eAEP,E,EAIDC,cAAA,WAA0B,WAChBC,EAA6C,GAEnDzT,OAAO4J,KAAK1F,KAAK+N,kBAAkBxI,SAAQ,SAAA3J,GAClC,EAAKmS,iBAAiB1R,eAAeT,KAKtCoR,MAAMY,QAAQ,EAAKG,iBAAiBnS,KACpC2T,EAAiCtK,KAAjC,MAAAsK,EAAyC,EAAKxB,iBAAiBnS,IAI/D,EAAKmS,iBAAiBnS,GAAK+R,QAC3B4B,EAAiCtK,KAAjC,MAAAsK,EAAyC,EAAKxB,iBAAiBnS,GAAK+R,QAK3E,IAED,IAAM6B,EAAwBxP,KAAKqP,4BAE7BI,EAAmB,CACrBC,MAAOrP,IAAAA,WAAAA,MAAqBiB,GAAoB,cAChDqO,KAAMtP,IAAAA,WAAAA,MAAqBiB,GAAoB,aAC/CsO,OAAQvP,IAAAA,WAAAA,MAAqBiB,GAAoB,eACjDuO,KAAMxP,IAAAA,WAAAA,MAAqBiB,GAAoB,aAC/CwO,SAAUzP,IAAAA,WAAAA,MAAqBiB,GAAoB,iBACnDyO,MAAO1P,IAAAA,WAAAA,MAAqBiB,GAAoB,cAChD0O,OAAQ3P,IAAAA,WAAAA,MAAqBiB,GAAoB,eACjDK,QAAStB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAQtD,OALmB,IAAftB,KAAKyO,QACLgB,EAAYQ,OAAS5P,IAAAA,WAAAA,MAAqBiB,GAAoB,eAC9DmO,EAAY3P,MAAQO,IAAAA,WAAAA,MAAqBiB,GAAoB,eAG1DM,EAAE,2BAA4B,CACjChG,IAAKoE,KAAK4O,UAAU,UACpBlN,UAAW6N,EAAiCvK,OAAS,WAAa,IACnE,CACCpD,EAAEqM,GAAgB,CACdvM,UAAW,iCACXO,SAAUjC,KAAKiC,WAEnBL,EAAE8L,GAAkB,CAChBC,OAAQ4B,IAEZ3N,EAAE,cAAe,EAC+B,IAA5C4N,EAAsBzI,QAAQ,SAAkB,KAAOnF,EAAE,4BAA6B,CAClFF,UAAW1B,KAAK4O,UAAU,SAAW,uCAAyC,IAC/E,CACChN,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOuD,KAAK4O,UAAU,SACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,UAC3C9M,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,YAExD4O,KAAAA,UAAiB,CACbzT,MAAOuD,KAAK4O,UAAU,QACtBjP,QAAS8P,EAET1J,SAAU/F,KAAK+O,UAAU,QACzB9M,SAAUjC,KAAKiC,cAG2B,IAAlDuN,EAAsBzI,QAAQ,eAAwB,KAAOnF,EAAE,cAAeA,EAAE,4BAA6B,CACzGF,UAAW1B,KAAK4O,UAAU,eAAiB,uCAAyC,IACrF,CACChN,EAAE,uBAAwB,CACtBnF,MAAOuD,KAAK4O,UAAU,eACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,gBAC3C9M,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAExDtB,KAAKmQ,YACLnQ,KAAK0O,aAAwD,IAA1Cc,EAAsBzI,QAAQ,OAAgB,CAC7DnF,EAAE,cAAeA,EAAE,4BAA6B,CAC5CF,UAAW1B,KAAK4O,UAAU,OAAS,uCAAyC,IAC7E,CACChN,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOuD,KAAK4O,UAAU,OACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,QAC3C9M,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,WAGxDM,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,oBACpDoF,GAAmBgC,UAAU,CACzB9B,SAAU5G,KAAK4O,UAAU,eAAgB,MACzC7I,SAAU/F,KAAK+O,UAAU,qBAGjC,KACJnN,EAAE,cAAe,EACkC,IAA/C4N,EAAsBzI,QAAQ,YAAqB,KAAOqJ,KAAAA,UAAiB,CACvEvG,MAAO7J,KAAK4O,UAAU,YAAY,GAClC7I,SAAU/F,KAAK+O,UAAU,YACzB9M,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqBiB,GAAoB,aAC5C,IACAS,IAAAA,UAAiB,CACb+D,QAAS9F,KAAKuO,YAAYvR,KAAKgD,MAC/B0B,UAAW,sBACXvB,KAAM,eACN8B,SAAUjC,KAAKiC,SACfhE,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,eAEpD,IACAS,IAAAA,UAAiB,CACb+D,QAAS9F,KAAKwO,SAASxR,KAAKgD,MAC5B0B,UAAW,sBACXvB,KAAM,eACN8B,SAAUjC,KAAKiC,SACfhE,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,eAI/D,E,EAED+O,WAAA,SAAWC,EAA+H9D,EAAkBuD,GAAwB,oBAAxBA,IAAAA,GAAiB,GACzK,IAAMpQ,EAA8BK,KAAK4O,UAAU,UAAW,IAE1D2B,EAASvQ,KAAKgP,gBAEbhC,MAAMY,QAAQ2C,KACfA,EAAS,IAGb,IAgCcC,EAhCRC,EAAgB9Q,EAAQuE,KAAI,SAAAwM,GAAM,OAAIA,EAAO9U,GAAX,IAElC+U,EAAaJ,EAAOrD,MAAK,SAAAzQ,GAAK,OAAsC,IAAlCgU,EAAc1J,QAAQtK,EAA1B,IAC9BmU,OAAsC,IAAfD,EAE7B,OAAO/O,EAAE,gCAAiC,CACtCF,UAAWqO,EAAQ,0BAA4B,8BAChD,CACCpQ,EAAQuE,KAAI,SAAAwM,GACR,IACMG,GAA4B,IADbN,EAAOxJ,QAAQ2J,EAAO9U,KAG3C,OAAOgG,EAAE,2BAA4B0O,EAAoBO,GAAS,WAC1DA,EACA,EAAK1B,cAAcoB,EAAOzM,QAAO,SAAArH,GAAK,OAAIA,IAAUiU,EAAO9U,GAArB,KAC/BmU,EACP,EAAKZ,cAAc,CACfuB,EAAO9U,MAGX,EAAKuT,cAAL,CAEIuB,EAAO9U,KAFX,OAGO2U,GAGd,GAAE,EAAKO,kBAAoBtE,EAASkE,EAAO9U,IAAe,CACvD,IACA8U,EAAOzS,QAEd,KACA+B,KAAK4O,UAAU,UAAcpC,IAAWoE,EAsDlC,MArDGJ,EAAgB,SAAC/T,GACnB,IAAMsU,EAAqBR,EAAOzM,QAAO,SAAArH,GAAK,OAAsC,IAAlCgU,EAAc1J,QAAQtK,EAA1B,IAE9C,EAAK0S,cAAL,UACO4B,EADP,CAEItU,IAEP,EAEMmF,EAAE,mDAAoD,CACzD0O,EAAoBM,GAAe,WAC/B,IAAMG,EAAqBR,EAAOzM,QAAO,SAAArH,GAAK,OAAsC,IAAlCgU,EAAc1J,QAAQtK,EAA1B,IAE9C,GAAImU,EACA,EAAKzB,cAAc4B,OAChB,CACChB,EACA,EAAKZ,cAAc,CACf,KAGJ,EAAKA,cAAL,UACO4B,EADP,CAEI,MAIR,IAAMC,EAAQhF,SAASiF,eAAe,EAAKnC,gBAAkB,UAEzDkC,GACAA,EAAME,OAEb,CACJ,GAAE,EAAKJ,kBAAoBtE,EAAS,WAAY,CAC7C,IACAnM,IAAAA,WAAAA,MAAqB,gDACrB,MAEJmM,EAAU5K,EAAE,OAAQ+O,GAAc/O,EAAE,oBAAqB,CACrDpC,KAAM,OACNiB,GAAI,EAAKqO,gBAAkB,SAC3B3F,YAAa9I,IAAAA,WAAAA,MAAqB,sDAClC5D,MAAOkU,EACP5K,SAAUjE,IAAS,QAAS0O,GAC5B1K,QAAS,WAGA8K,GACDJ,EAAc,GAErB,QAKpB,E,EAIDW,SAAA,WACI,IAAMlT,EAAQ+B,KAAK4O,UAAU,SACvBZ,EAAchO,KAAK4O,UAAU,eAC7Bb,EAAmB/N,KAAKoR,+BAG9B,OAAOxP,EAAEkM,GAAW,CAChBC,iBAAAA,EACA3N,MAAOwB,EAAE,QAAS,CACdyP,IAAKrR,KAAK8O,iBACX,CACC7Q,GAAgB2D,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,kBACjEtB,KAAK4O,UAAU,YAAY,GAAShN,EAAE,0BAA2B,MAAQ,OAE7EoM,YAAAA,GACDhO,KAAKsR,OACX,E,EAED9E,QAAA,WACI,IAAMrL,EAAanB,KAAKgP,gBAEpBuC,IAAkBpQ,EAQtB,OAJI6L,MAAMY,QAAQzM,KACdoQ,EAAgBpQ,EAAW6D,OAAS,GAGjCpD,EAAE,IAAK2P,EAAgBpQ,EAAaS,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,cAC/F,E,EAEDkQ,YAAA,WACI,IAAMvT,EAAQ+B,KAAK4O,UAAU,SAE7B,OAAOhN,EAAE,8BAA+B,CACpCA,EAAE,KAAM,CACJ3D,GAAgB2D,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,oBAErEM,EAAE,KAAM5B,KAAKwM,YAEpB,E,EAEDiF,YAAA,WAAc,WAGN9R,EAA8BK,KAAK4O,UAAU,UAAW,IAEvD5B,MAAMY,QAAQjO,KACf+R,QAAQC,KAAK,kBAAmBhS,GAChCA,EAAU,IAGd,IAAMiS,GAAejS,EAAQqF,QAAgD,KAAtCrF,EAAQA,EAAQqF,OAAS,GAAG/G,MAEnE,OAAO2D,EAAE,cAAeA,EAAE,6BAA8B,CACpD5B,KAAK0O,WAAa9M,EAAE,QAAS,CACzBA,EAAE,MACFA,EAAE,KAAMvB,IAAAA,WAAAA,MAAqB,2DAC7BuB,EAAE,KAAMvB,IAAAA,WAAAA,MAAqB,yDAC7BuB,EAAE,QACD,KACLA,EAAEuI,GAAU,CACRiC,OAAQ,SAACF,EAAgBC,GACrBxM,EAAQqI,OAAOmE,EAAa,EAAGxM,EAAQqI,OAAOkE,EAAQ,GAAG,IACzD,EAAK6C,UAAU,UAAf,CAA0BpP,EAC7B,EACD4N,aAAc,QACdC,eAAgB,MACjB7N,EAAQuE,KAAI,SAACwM,EAAQ3I,GAAT,OAAmBnG,EAAE,KAAM,CACtChG,IAAK,OAASmM,GACf,CACCnG,EAAEqM,GAAgB,CACdE,WAAY,KACZzM,UAAW,0BAEfE,EAAE,KAAMA,EAAE,oBAAqB,CAC3BpC,KAAM,OACN/C,MAAOiU,EAAOzS,MACd8H,SAAUjE,IAAS,SAAS,SAACrF,GACzBiU,EAAOzS,MAAQxB,EACf,EAAKsS,UAAU,UAAf,CAA0BpP,EAC7B,OAEL,EAAK+O,WAAa9M,EAAE,KAAMA,EAAE,oBAAqB,CAC7CpC,KAAM,OACN/C,MAAOiU,EAAO9U,IACdmK,SAAUjE,IAAS,SAAS,SAACrF,GACzBiU,EAAO9U,IAAMa,EACb,EAAKsS,UAAU,UAAf,CAA0BpP,EAC7B,OACC,KACNiC,EAAE,KAAMG,IAAAA,UAAiB,CACrB+D,QAAS,WACLnG,EAAQqI,OAAOD,EAAO,GACtB,EAAKgH,UAAU,UAAf,CAA0BpP,EAC7B,EACD+B,UAAW,sBACXvB,KAAM,eACN8B,SAAU,EAAK6O,iBACf7S,MAAOoC,IAAAA,WAAAA,MAAqB,uDA/BrB,KAkCfuR,EAAchQ,EAAE,QAASA,EAAE,KAAM,CAC7BA,EAAE,MACFA,EAAE,KAAMA,EAAE,oBAAqB,CAC3BpC,KAAM,OACN/C,MAAO,GACPsJ,SAAUjE,IAAS,SAAS,SAACrF,GACzBkD,EAAQsF,KAAK,CACThH,MAAOxB,IAEX,EAAKsS,UAAU,UAAf,CAA0BpP,EAC7B,IACDwJ,YAAa9I,IAAAA,WAAAA,MAAqB,+DAEtCuB,EAAE,SACA,OAEb,E,EAEDiQ,UAAA,WACI,OAAOjQ,EAAE,cAAewO,KAAAA,UAAiB,CACrCvG,MAAO7J,KAAK4O,UAAU,SAAS,GAC/B7I,SAAU/F,KAAK+O,UAAU,SACzB9M,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqB,oDAC3B,E,EAEDyR,YAAA,SAAYtS,GAAiB,WACzB,YADyB,IAAjBA,IAAAA,EAAO,UACRoC,EAAE,cAAe,CACpBA,EAAE,4BAA6B,CAC3BF,UAAW1B,KAAK4O,UAAU,OAAS,uCAAyC,IAC7E,CACChN,EAAE,oBAAqB,CACnBpC,KAAAA,EACAuS,KAAe,WAATvS,EAAoB,OAAIwS,EAC9BC,IAAc,WAATzS,EAAoB,OAAIwS,EAC7BvV,MAAOuD,KAAK4O,UAAU,OACtB7I,SAAUjE,IAAS,SAAS,SAACrF,GACZ,WAAT+C,GAAqB/C,IACrBA,EAAQsO,SAAStO,IAGrB,EAAKsS,UAAU,MAAf,CAAsBtS,EACzB,IACDwF,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,UAExDM,EAAE,4BAA6B,CAC3BF,UAAW1B,KAAK4O,UAAU,OAAS,uCAAyC,IAC7E,CACChN,EAAE,oBAAqB,CACnBpC,KAAAA,EACAuS,KAAe,WAATvS,EAAoB,OAAIwS,EAC9BC,IAAc,WAATzS,EAAoB,OAAIwS,EAC7BvV,MAAOuD,KAAK4O,UAAU,OACtB7I,SAAUjE,IAAS,SAAS,SAACrF,GACZ,WAAT+C,GAAqB/C,IACrBA,EAAQsO,SAAStO,IAGrB,EAAKsS,UAAU,MAAf,CAAsBtS,EACzB,IACDwF,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,WAG/D,E,EAEDwP,eAAA,WACI,OAAO9Q,KAAKiC,UAAYjC,KAAK4O,UAAU,aAC1C,E,EAEDwC,6BAAA,WACI,IAAMhC,EAA8BpP,KAAK+N,iBAAiB/N,KAAK4O,UAAU,QAEzE,aAAOQ,OAAP,EAAOA,EAA6BzB,MACvC,E,EA1gByBS,GC/BT8D,GAAAA,SAAAA,G,oFACjB7C,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,UACA,QACA,MACA,OAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHnQ,KAAKyR,cACLzR,KAAK6R,YACL7R,KAAK8R,cAEZ,E,EAEDR,KAAA,SAAK9E,GACD,YAD2B,IAA1BA,IAAAA,GAAmB,GACbxM,KAAKqQ,YAAW,SAACQ,EAAS9K,EAAU9D,EAAUrG,EAAK4H,GACtD,IAAM+I,EAAQlM,IAAAA,MAAAA,UAA4B,2BAEpC+R,EAAO7F,GAAgC,OAAvBA,EAAM8F,OAAO,EAAG,GAEtC,MAAc,WAAV9F,EACO6D,KAAAA,UAAiB,CACpBvG,MAAOgH,EACP9K,SAAAA,EACA9D,SAAAA,GACDuB,GAEA5B,EAAE,QAAS,CACdF,UAAW0Q,EAAO,2BAAwBJ,GAC3C,CACCpQ,EAAE,QAAS,CACPpC,KAAM,WACNqR,QAAAA,EACA9K,SAAAA,EACA9D,SAAAA,IAGJmQ,EAAOjS,IAAK,KAAOoM,EAAM8F,OAAO,EAAG,GAAK,QAAUxB,EAAU,SAAW,IAAMtE,EAAM8F,OAAO,IAAM,KAChG7O,GAEP,GAAEgJ,EACN,E,EAEDA,QAAA,WACI,OAAOxM,KAAKsR,MAAK,EACpB,E,EAjDgBY,CAAc9D,ICDdkE,GAAAA,W,kBACjBC,eAAyB,C,4BAEzB/H,SAAA,SAASxH,GAEL,IAAIwP,EACJxS,KAAKuS,eAAiBE,aAAY,WAC9B,IAAM9Q,EAAWqB,EAAM4H,IAAI8H,cAAc,YAAgDjW,MAEzF,GAAI+V,IAAY7Q,EAIhB,GAFA6Q,EAAU7Q,EAGNgR,IAAIC,cAAcJ,QAAQA,EAASxP,EAAM4H,IAAI8H,cAAc,oBACxD,CACH,IAAMvJ,EAAc6C,SAAS6G,cAAc,KAC3C1J,EAAYzH,UAAY,4BACxByH,EAAY2J,UAAYtN,IAAYnF,IAAAA,WAAAA,MAAqB,4DACzD,IAAM0S,EAAiB/P,EAAM4H,IAAI8H,cAAc,eAC/CK,EAAeC,UAAY,GAC3BD,EAAeE,YAAY9J,EAC9B,CACJ,GAAE,GACN,E,EAEDkD,SAAA,WACI6G,cAAclT,KAAKuS,eACtB,E,EAEDxP,KAAA,SAAKC,GACD,OAAOpB,EAAE,kBAAmB,CACxBA,EAAE,oCAAqC,CACnCkE,QAAS,SAAC3D,GACNA,EAAMC,iBACLY,EAAM4H,IAAI8H,cAAc,YAAgDxB,OAC5E,IAELtP,EAAE,uBAAwBoB,EAAMV,QAEvC,E,EAxCgBgQ,GCCAa,GAAAA,SAAAA,G,oFACjB9D,0BAAA,WACI,MAAO,CACH,UAEP,E,EAEDc,UAAA,WACI,OAAOvO,EAAE,cAAeA,EAAE0Q,GAAe,CACrC7V,MAAOuD,KAAK4O,UAAU,WACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,YAC3C9M,SAAUjC,KAAKiC,WAEtB,E,EAEDqP,KAAA,WAEI,OAAO,IACV,E,EAEDH,SAAA,WACI,OAAOvP,EAAE,MAAOA,EAAEwR,MAAMpT,KAAK4O,UAAU,gBAC1C,E,EAED4C,YAAA,WACI,OAAO,IACV,E,EA1BgB2B,CAAgB/E,ICFhBiF,GAAAA,SAAAA,G,oFACjBhE,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,MACA,OAEP,E,EAEDhC,UAAA,WACI,OAAOnQ,KAAK8R,YAAY,OAC3B,E,EAEDR,KAAA,WACI,IAAMhP,EAAa,CACf9C,KAAM,OACNiB,GAAIT,KAAK8O,gBACTpN,UAAW1B,KAAKoR,+BAAiC,WAAa,GAC9D3U,MAAOuD,KAAKgP,gBACZjJ,SAAUjE,IAAS,QAAS9B,KAAKmP,cAAcnS,KAAKgD,OACpDiC,SAAUjC,KAAK8Q,kBAWnB,OARI9Q,KAAK4O,UAAU,SACftM,EAAM2P,IAAMjS,KAAK4O,UAAU,QAG3B5O,KAAK4O,UAAU,SACftM,EAAMgR,IAAMtT,KAAK4O,UAAU,QAGxBhN,EAAE,oBAAqBU,EACjC,E,EA/BgB+Q,CAAajF,ICO5B9M,GAAoB,0CAELiS,GAAAA,SAAAA,G,oFACjBlE,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,SACA,MACA,OAEP,E,EAEDhC,UAAA,WAAY,WAEFpC,EAAmB/N,KAAK+N,iBAAiB/N,KAAK4O,UAAU,SAAW,CAAC,EAEpEhF,EAAO,IAAI4J,GAAU,CACvBC,QAASzT,KAAK4O,UAAU,UACxB7I,SAAU,WACN,EAAKA,UACR,EACD9D,SAAUjC,KAAKiC,SACf8L,iBAAAA,EACAU,MAAOzO,KAAKyO,MAAQ,EACpBC,WAAY1O,KAAK0O,aAGrB,OAAO9M,EAAE,oCAAqC,CAC1CA,EAAE8L,GAAkB,CAChBC,OAAQI,IAEZ/N,KAAK8R,cACLlI,EAAK0F,iBAEZ,E,EAEDgC,KAAA,SAAK9E,GAAiB,oBAAjBA,IAAAA,GAAU,GACX,IAAMiH,EAAwBzT,KAAK4O,UAAU,UAKxC5O,KAAKmB,WAAWnB,KAAK4O,UAAU,UAChC5O,KAAKmB,WAAWnB,KAAK4O,UAAU,QAAU,CACrCnS,MAAO,KAIf,IAAMiX,EAAc1T,KAAKgP,gBAEzB,GAA2B,IAAvB0E,EAAY1O,OAEZ,IAAK,IAAImB,EAAI,EAAGA,EAAInG,KAAK4O,UAAU,MAAO,GAAIzI,IAC1CuN,EAAYzO,KAAK,CAAC,GAI1B,IAAM8I,EAAmB/N,KAAK+N,iBAAiB/N,KAAK4O,UAAU,SAAW,CAAC,EAI1E,OAAOhN,EAAE,QAAS,CACdF,UAAW8K,EAAU,sBAAwB,wBAC9C,CACC5K,EAAE,QAASA,EAAE,KAAM,CACf4K,EAAU,KAAO5K,EAAE,MACnB6R,EAAQvP,KAAI,SAAAmK,GACR,IAAMsF,EAAQ,IAAIC,GAAQvF,EAAO7O,MAAM,CACnC6O,OAAAA,IAGEpQ,EAAQ0V,EAAM/E,UAAU,SACxBZ,EAAc2F,EAAM/E,UAAU,eAEpC,OAAOhN,EAAE,KAAM,CACXA,EAAE,QAAS,CACP3D,GAAgBoC,IAAAA,WAAAA,MAAqB,4DACpCmM,GAAWmH,EAAM/E,UAAU,YAAY,GAAShN,EAAE,0BAA2B,MAAQ,QAEzF4K,GAAWwB,EAAcpM,EAAE,IAAKoM,GAAe,MAEvD,IACDxB,EAAU,KAAO5K,EAAE,SAEvBA,EAAEuI,GAAU,CACRiC,OAAQ,SAACF,EAAgBC,GACrBuH,EAAY1L,OAAOmE,EAAa,EAAGuH,EAAY1L,OAAOkE,EAAQ,GAAG,IACjE,EAAKnG,UACR,EACD9D,SAAUjC,KAAK8Q,iBACfvD,aAAc,QACdC,eAAgB,MACjBkG,EAAYxP,KAAI,SAAC/C,EAAiB4G,GACjC,IAAM8L,EAA6B9F,EAAiBhG,IAAU,CAAC,EAE/D,OAAOnG,EAAE,KAAM,CACXhG,IAAK,OAASmM,GACf,CACCyE,EAAU,KAAO5K,EAAEqM,GAAgB,CAC/BE,WAAY,KACZzM,UAAW,wBACXO,SAAU,EAAK6O,mBAEnB2C,EAAQvP,KAAI,SAAAmK,GACR,IAAMsF,EAAQ,IAAIC,GAAQvF,EAAO7O,MAAM,CACnC6O,OAAAA,EACAlN,WAAAA,EACAmN,SAAU,EAAKA,SACfvI,SAAU,WACN,EAAKA,UACR,EACD9D,SAAU,EAAK6O,iBACf/C,iBAAkB8F,EAClBpF,MAAO,EAAKA,MAAQ,IAGxB,OAAO7M,EAAE,KAAM,CACX4K,EAAUmH,EAAMnH,UAAYmH,EAAMrC,OAClC1P,EAAE8L,GAAkB,CAChBC,OAAQkG,EAA2BxF,EAAOzS,KAAO,OAG5D,IACD4Q,EAAU,KAAO5K,EAAE,KAAMG,IAAAA,UAAiB,CACtC+D,QAAS,WACL4N,EAAY1L,OAAOD,EAAO,GAC1B,EAAKhC,UACR,EACDrE,UAAW,sBACXvB,KAAM,eACN8B,SAAU,EAAK6O,iBACf7S,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,cAG3D,KACDkL,EAAU,KAAO5K,EAAE,QAASA,EAAE,KAAM,CAChCA,EAAE,MACFA,EAAE,KAAM,CACJ6L,QAASgG,EAAQzO,QAClBjD,IAAAA,UAAiB,CAChB+D,QAAS,WACL4N,EAAYzO,KAAK,CAAC,GAClB,EAAKc,UACR,EACDrE,UAAW,uBACXO,SAAUjC,KAAK8Q,kBAAqB9Q,KAAK4O,UAAU,MAAO,IAAM8E,EAAY1O,QAAUhF,KAAK4O,UAAU,MAAO,KAC7GvO,IAAAA,WAAAA,MAAqBiB,GAAoB,SAC5CM,EAAE,UAGb,E,EAED4K,QAAA,WACI,OAAOxM,KAAKsR,MAAK,EACpB,E,EAvJgBiC,CAAcnF,ICNd0F,GAAAA,SAAAA,G,oFACjBzE,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,MACA,MACA,QAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHnQ,KAAK8R,cACLlQ,EAAE,cAAe,CACbwO,KAAAA,UAAiB,CACbvG,MAAO7J,KAAK4O,UAAU,QAAQ,GAC9B7I,SAAU/F,KAAK+O,UAAU,QACzB9M,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqB,qDAGnC,E,EAEDiR,KAAA,WACI,IAAMhP,EAAQ,CACV7B,GAAIT,KAAK8O,gBACTpN,UAAW1B,KAAKoR,+BAAiC,WAAa,GAC9D3U,MAAOuD,KAAKgP,gBACZnN,QAASC,IAAS,QAAS9B,KAAKmP,cAAcnS,KAAKgD,OACnDiC,SAAUjC,KAAK8Q,kBAGnB,MAAO,CACH9Q,KAAK4O,UAAU,QAAUhN,EAAE0Q,GAAehQ,GAASV,EAAE,uBAAwBU,GAC7EtC,KAAK4O,UAAU,OAAShN,EAAE,wBAAyB,CAC/CA,EAAE,iCAAkC,CAChCF,UAAW1B,KAAKgP,gBAAgBhK,OAAShF,KAAK4O,UAAU,OAAS,mCAAqC,IACvG5O,KAAKgP,gBAAgBhK,QACxB,IAAMhF,KAAK4O,UAAU,SACpB,KAEZ,E,EAEDpC,QAAA,WACI,GAAIxM,KAAK4O,UAAU,QAAS,CACxB,IAAMmF,EAAO/T,KAAKgP,cAAc,GAAI,QAEpC,GAAI+E,EACA,OAAOnS,EAAE,MAAOA,EAAEwR,MAAMW,GAE/B,CAED,OAAO,EAAP,UAAavH,QAAb,UACH,E,EApDgBsH,CAAmB1F,ICDnB4F,GAAAA,SAAAA,G,oFACjB3E,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,UACA,MACA,OAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHvO,EAAE,cAAewO,KAAAA,UAAiB,CAC9BvG,MAAO7J,KAAK4O,UAAU,WAAW,GACjC7I,SAAU/F,KAAK+O,UAAU,WACzB9M,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqB,uDACxBL,KAAK8R,cAEZ,E,EAEDR,KAAA,WACI,IAAMhP,EAAa,CACf9C,KAAM,SACNuS,KAAM/R,KAAK4O,UAAU,WAAa,EAAI,MACtCnO,GAAIT,KAAK8O,gBACTpN,UAAW1B,KAAKoR,+BAAiC,WAAa,GAC9D3U,MAAOuD,KAAKgP,gBACZjJ,SAAUjE,IAAS,QAAS9B,KAAKmP,cAAcnS,KAAKgD,OACpDiC,SAAUjC,KAAK8Q,kBAWnB,OARI9Q,KAAK4O,UAAU,SACftM,EAAM2P,IAAMjS,KAAK4O,UAAU,QAG3B5O,KAAK4O,UAAU,SACftM,EAAMgR,IAAMtT,KAAK4O,UAAU,QAGxBhN,EAAE,oBAAqBU,EACjC,E,EAxCgB0R,CAAoB5F,ICDpB8D,GAAAA,SAAAA,G,oFACjB7C,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,UACA,SAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHnQ,KAAKyR,cACLzR,KAAK6R,YAEZ,E,EAEDP,KAAA,SAAK9E,GAA0B,WAC3B,YAD2B,IAA1BA,IAAAA,GAAmB,GACbxM,KAAKqQ,YAAW,SAACQ,EAAS9K,EAAU9D,EAAUrG,EAAK4H,GACtD,IAAM+I,EAAQlM,IAAAA,MAAAA,UAA4B,wBAEpC+R,EAAO7F,GAAgC,OAAvBA,EAAM8F,OAAO,EAAG,GAEtC,OAAOzQ,EAAE,QAAS,CACdF,UAAW0Q,EAAO,2BAAwBJ,GAC3C,CACCpQ,EAAE,QAAS,CACPpC,KAAM,QACNyU,KAAMzH,OAAUwF,EAAY,EAAKlD,gBACjCrS,MAAO+P,OAAUwF,EAAYpW,EAC7BiV,QAAAA,EACA9K,SAAAA,EACA9D,SAAAA,IAEJmQ,EAAOjS,IAAK,KAAOoM,EAAM8F,OAAO,EAAG,GAAK,QAAUxB,EAAU,OAAS,IAAMtE,EAAM8F,OAAO,IAAM,KAC9F7O,GAEP,GAAEgJ,GAAS,EACf,E,EAEDA,QAAA,WACI,OAAOxM,KAAKsR,MAAK,EACpB,E,EAxCgBY,CAAc9D,ICEd8B,GAAAA,SAAAA,G,oFACjBb,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,WAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHnQ,KAAKyR,cAEZ,E,EAEDH,KAAA,WAAO,WACG3R,EAA8BK,KAAK4O,UAAU,UAAW,IAE1D2B,EAASvQ,KAAKgP,gBAEZvS,EAAQuQ,MAAMY,QAAQ2C,IAAWA,EAAOvL,OAASuL,EAAO,GAAK,GAEnE,OAAO3O,EAAE,UAAW,CAChBA,EAAE,kCAAmC,CACjCnB,GAAIT,KAAK8O,gBACT/I,SAAUjE,IAAS,SAAS,SAACrF,GACrBA,EACA,EAAK0S,cAAc,CAAC1S,IAEpB,EAAK0S,cAAc,GAE1B,IACD1S,MAAAA,EACAwF,SAAUjC,KAAK8Q,kBAChB,CACClP,EAAE,SAAU,CACRnF,MAAO,GACP0L,SAAUnI,KAAK4O,UAAU,aAC1BvO,IAAAA,WAAAA,MAAqB,4CACxBV,EAAQuE,KAAI,SAAAwM,GAAM,OAAI9O,EAAE,SAAU,CAC9BnF,MAAOiU,EAAO9U,KACf8U,EAAOzS,MAFQ,MAItBkC,IAAK,cAAe,CAACuB,UAAW,kBAEvC,E,EAED8K,QAAA,WACI,IAAM7M,EAA8BK,KAAK4O,UAAU,UAAW,IAE1D2B,EAASvQ,KAAKgP,gBAElB,GAAIhC,MAAMY,QAAQ2C,IAAWA,EAAOvL,OAAQ,CACxC,IAAM0L,EAAS/Q,EAAQuN,MAAK,SAAAwD,GAAM,OAAIA,EAAO9U,MAAQ2U,EAAO,EAA1B,IAElC,GAAIG,EACA,OAAO9O,EAAE,IAAK8O,EAAOzS,MAE5B,CAGD,OAAO,EAAP,UAAauO,QAAb,UACH,E,EA5DgB0D,CAAe9B,ICDf4F,GAAAA,SAAAA,G,oFACjB3E,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,QACA,SAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHvO,EAAE,cAAewO,KAAAA,UAAiB,CAC9BvG,MAAO7J,KAAK4O,UAAU,SAAS,GAC/B7I,SAAU/F,KAAK+O,UAAU,SACzB9M,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqB,qDACxBuB,EAAE,cAAeA,EAAE,4BAA6B,CAC5CF,UAAW1B,KAAK4O,UAAU,SAAW,uCAAyC,IAC/E,CACChN,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOuD,KAAK4O,UAAU,SACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,UAC3C9M,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqB,uDAG3C,E,EAEDiR,KAAA,WACI,OAAO1P,EAAE,oBAAqB,CAC1BpC,KAAMQ,KAAK4O,UAAU,SAAS,GAAS,QAAU,OACjDnO,GAAIT,KAAK8O,gBACTpN,UAAW1B,KAAKoR,+BAAiC,WAAa,GAC9D3U,MAAOuD,KAAKgP,gBACZjJ,SAAUjE,IAAS,QAAS9B,KAAKmP,cAAcnS,KAAKgD,OACpDiC,SAAUjC,KAAK8Q,kBAEtB,E,EAtCgBkD,CAAoB5F,ICCnC9M,GAAoB,2CAEL4S,GAAAA,SAAAA,G,oFACjB7E,0BAAA,WACI,OAAO,YAAMA,0BAAN,WAAkC8C,OAAO,CAC5C,OACA,MACA,OAEP,E,EAEDhC,UAAA,WACI,MAAO,CACHvO,EAAE,cAAeA,EAAE,4BAA6B,CAC5CF,UAAW1B,KAAK4O,UAAU,QAAU,uCAAyC,IAC9E,CACChN,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOuD,KAAK4O,UAAU,QACtB7I,SAAUjE,IAAS,QAAS9B,KAAK+O,UAAU,SAC3C9M,SAAUjC,KAAKiC,WAEnBL,EAAE,QAASvB,IAAAA,WAAAA,MAAqB,sDAEpCL,KAAK8R,cAEZ,E,EAEDR,KAAA,WAAO,aACG6C,EAA2C,IAA1BnU,KAAK4O,UAAU,OAEhCwF,EAAgBpU,KAAKgP,cAAc,IAEzC,MAAO,CACHpN,EAAE,KAAMwS,EAAclQ,KAAI,SAACzD,GACvB,IAAM4T,EAAOhU,IAAAA,MAAAA,QAAwB,mBAAoBI,GAEzD,OAAOmB,EAAE,KAAM,CACXyS,EAAOzS,EAAE,IAAK,CACV6H,KAAM4K,EAAK1W,MACX2W,SAAUD,EAAK7W,YAChB,CACC6W,EAAK7W,WACL6W,EAAK3W,YAAc,CAAC,KAAM2W,EAAK3W,YAAa,KAAO,OAClD+C,EACL,IACA2T,EAAcpP,OAAS,EAAK4J,UAAU,OAAS7M,IAAAA,UAAiB,CAC5D+D,QAAS,WACL,EAAKqJ,cAAc,EAAKH,cAAc,IAAIlL,QAAO,SAACyQ,GAAD,OAAoBA,IAAW9T,CAA/B,IACpD,EACDiB,UAAW,sBACXvB,KAAM,eACN8B,SAAU,EAAK6O,iBACf7S,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,YAC/C,MAEZ,KACD,SAAAtB,KAAKsO,WAAL,EAAekG,UAAYnU,IAAAA,WAAAA,MAAqBiB,GAAoB,aAAe,KACnFM,EAAE,QAAS,CACPpC,KAAM,OACNiB,GAAIT,KAAK8O,gBACT/I,SAAU,SAAC5D,GAAiB,MACxB,WAAKmM,WAAL,EAAe2B,OAAQ9N,EAAM+D,OAA4BuO,MAAO,EAAK7F,UAAU,QAAQlM,MAAK,SAAA+R,GACxF,IAAItT,EAAauT,KAAKC,MAAMD,KAAKE,UAAU,EAAK5F,cAAc,MAE1DmF,EACAM,EAAMlP,SAAQ,SAAA8O,GACVlT,EAAW8D,KAAKoP,EAAK5T,KACxB,IAGDU,EAAasT,EAAMvQ,KAAI,SAAAmQ,GAAI,OAAIA,EAAK5T,IAAT,IAG/B,EAAK0O,cAAchO,GAEnBS,EAAEwC,QACL,GACJ,EACDnC,SAAUjC,KAAK8Q,iBACf+D,OAAQ7U,KAAK4O,UAAU,QACvBkG,SAAUX,IAGrB,E,EAED3H,QAAA,WACI,IAAM4H,EAAgBpU,KAAKgP,cAAc,IAEzC,MAAO,CACHpN,EAAE,KAAMwS,EAAclQ,KAAI,SAACzD,GACvB,IAAM4T,EAAOhU,IAAAA,MAAAA,QAAwB,mBAAoBI,GAEzD,OAAOmB,EAAE,KAAM,CACXyS,EAAOzS,EAAE,IAAK,CACV6H,KAAM4K,EAAK1W,MACX2W,SAAUD,EAAK7W,YAChB,CACC6W,EAAK7W,WACL6W,EAAK3W,YAAc,CAAC,KAAM2W,EAAK3W,YAAa,KAAO,OAClD+C,GAEZ,KAER,E,EAtGgByT,CAAe9F,ICiBpC,SAbyC,CACrC,SAAY2G,GACZ,QAAW5B,GACX,KAAQE,GACR,MAASE,GACT,KAAQO,GACR,OAAUkB,GACV,MAAS9C,GACT,OAAUhC,GACV,MAAS8D,GACT,OAAUE,IClBd,IAAIe,GAAkB,EAEP,SAAS,GAAC5G,EAAuB6G,QAAuB,IAAvBA,IAAAA,GAAgB,GAGvD7G,EAAO8G,SAAUD,IAClB7G,EAAO8G,SAAWF,GAAkB,IAGpCC,UAEO7G,EAAOzS,IAGlB,IAAM+X,EAAe,IAAIC,GAAQvF,EAAO7O,MAAM,CAAC,GAEzC4V,EAAc,CAAC,SAAU,OAAQ,aAAc,eAAejD,OAAOwB,EAAMtE,6BAGhFvT,OAAO4J,KAAK2I,GAAoC9I,SAAQ,SAAC3J,IACpB,IAA9BwZ,EAAYrO,QAAQnL,WACbyS,EAAOzS,EAErB,IAEmB,UAAhByS,EAAO7O,OACFwN,MAAMY,QAAQS,EAAOgH,UACtBhH,EAAOgH,OAAS,IAGS,IAAzBhH,EAAOgH,OAAOrQ,QACdqJ,EAAOgH,OAAOpQ,KAAK,CACfzF,KAAM,WAKE,WAAhB6O,EAAO7O,OACF6O,EAAOiH,OACRjH,EAAOiH,KAAO,WAGzB,C,ICrBoB9B,GAAAA,WAUjB,cAUiC,QATjBC,QAAAA,OASiB,MATP,GASO,MARjBtS,WAAAA,OAQiB,MARJ,CAAC,EAQG,MAPjBmN,SAAAA,OAOiB,MAPN,KAOM,MANjBvI,SAAAA,OAMiB,MANN,WACV,EAKgB,MAJjB9D,SAAAA,OAIiB,aAHjB8L,iBAAAA,OAGiB,MAHE,CAAC,EAGH,MAFjBU,MAAAA,OAEiB,MAFT,EAES,MADjBC,WAAAA,OACiB,cAnBjC+E,aAmBiC,OAlBjCtS,gBAkBiC,OAjBjCmN,cAiBiC,OAhBjCvI,cAgBiC,OAfjC9D,cAeiC,OAdjC8L,sBAciC,OAbjCU,WAaiC,OAZjCC,gBAYiC,EAC7B1O,KAAKyT,QAAUA,EACfzT,KAAKmB,WAAaA,EAClBnB,KAAKsO,SAAWA,EAChBtO,KAAK+F,SAAWA,EAChB/F,KAAKiC,SAAWA,EAChBjC,KAAK+N,iBAAmBA,EACxB/N,KAAKyO,MAAQA,EACbzO,KAAK0O,WAAaA,CACrB,C,2BAEDY,cAAA,WAA0B,WACtB,MAAO,CACH1N,EAAEuI,GAAU,CACRiC,OAAQ,SAACF,EAAgBC,GACrB,EAAKsH,QAAQzL,OAAOmE,EAAa,EAAG,EAAKsH,QAAQzL,OAAOkE,EAAQ,GAAG,IACnE,EAAKnG,UACR,EACD9D,SAAUjC,KAAKiC,UAChBjC,KAAKyT,QAAQvP,KAAI,SAACmK,EAAQtG,GAsBzB,OArBqB,IAAI6L,GAAQvF,EAAO7O,MAAM,CAC1C6O,OAAAA,EACAC,SAAU,EAAKA,SACfvI,SAAU,WACN,EAAKA,UACR,EACDwI,YAAa,WACT,EAAKkF,QAAQzL,OAAOD,EAAQ,EAAG,EAAG2M,KAAKC,MAAMD,KAAKE,UAAUvG,KAC5DM,GAAwB,EAAK8E,QAAQ1L,EAAQ,IAAI,GACjD,EAAKhC,UACR,EACDyI,SAAU,WACN,EAAKiF,QAAQzL,OAAOD,EAAO,GAC3B,EAAKhC,UACR,EACD9D,SAAU,EAAKA,SACf8L,iBAAkB,EAAKA,iBACvBU,MAAO,EAAKA,MACZC,WAAY,EAAKA,aAGRY,eAChB,KACDvN,IAAAA,UAAiB,CACbL,UAAW,uBACXoE,QAAS,WACL,EAAK2N,QAAQxO,KAAK,CACdzF,KAAM,UAEV,EAAKuG,UACR,EACD9D,SAAUjC,KAAKiC,UAChB5B,IAAAA,WAAAA,MAAqB,wDAE/B,E,EAEDkV,SAAA,SAAS/I,GAAoC,WACzC,YADyC,IAApCA,IAAAA,GAAmB,GACjB,CACHxM,KAAKyT,QAAQvP,KAAI,SAAAmK,GACb,IAAMsF,EAAQ,IAAIC,GAAQvF,EAAO7O,MAAM,CACnC6O,OAAAA,EACAlN,WAAY,EAAKA,WACjBmN,SAAU,EAAKA,SACfvI,SAAU,WACN,EAAKA,UACR,EACD9D,SAAU,EAAKA,SACf8L,iBAAkB,EAAKA,iBACvBU,MAAO,EAAKA,QAGhB,OAAOjC,EAAUmH,EAAMnC,cAAgBmC,EAAMxC,UAChD,IAER,E,EA9FgBqC,G,cChBjB,WAAY/W,GAAY,KARxBA,WAQwB,OALxB+Y,QAAiB,GAKO,KAFxBC,aAAuB,EAGnBzV,KAAKvD,MAAQiY,KAAKC,MAAMD,KAAKE,UAAUnY,IACvCuD,KAAKqC,MACR,C,2BAEDA,KAAA,WACQrC,KAAKyV,aAAe,GACpBzV,KAAKwV,QAAQxN,OAAO,EAAGhI,KAAKyV,cAGhCzV,KAAKwV,QAAQE,QAAQhB,KAAKC,MAAMD,KAAKE,UAAU5U,KAAKvD,SACpDuD,KAAKyV,aAAe,CACvB,E,EAEDE,QAAA,WACI,OAAO3V,KAAKwV,QAAQxQ,OAAS,GAAKhF,KAAKyV,aAAezV,KAAKwV,QAAQxQ,OAAS,CAC/E,E,EAED4Q,QAAA,WACI,OAAO5V,KAAKyV,aAAe,CAC9B,E,EAEDI,KAAA,WACS7V,KAAK2V,YAIV3V,KAAKvD,MAAQuD,KAAKwV,UAAUxV,KAAKyV,cACpC,E,EAEDK,KAAA,WACS9V,KAAK4V,YAIV5V,KAAKvD,MAAQuD,KAAKwV,UAAUxV,KAAKyV,cACpC,E,EAEDtR,MAAA,WACInE,KAAKwV,QAAQxN,OAAO,GACpBhI,KAAKyV,aAAe,CACvB,E,KClDL,MAAM,GAA+B/Y,OAAOC,KAAKC,OAAO,6B,eCIlDmZ,GAA4B,oBAAoB/Q,OAEvC,SAAS,GAAC6I,GAAqB,QACpCmI,EAAY,CAAC,EA2BnB,OAzBA,SAAAnI,EAAMoI,WAAN,WAAgBtI,SAAhB,EAAwBpI,SAAQ,SAAAsI,GAAS,QACjCqI,EAAiDF,GAK9B,MAAInI,GAAJ,SAAIA,EAAexH,SAAnB,SAAG,EAAwB8P,cAA3B,EAAG,EAAiC9D,OAAO0D,IAA2BK,MAAM,MAE3F7Q,SAAQ,SAAA3J,GACZ,GAAIsa,EAAmBta,GAEnBsa,EAAqBA,EAAmBta,OACrC,CAEH,IAAMya,EAA0C,CAAC,EACjDH,EAAmBta,GAAOya,EAC1BH,EAAqBG,CACxB,CACJ,IAIDH,EAAmBvI,OAAUX,MAAMY,QAAQC,EAAMyI,QAAUzI,EAAMyI,OAAS,CAACzI,EAAMyI,OACpF,IAEMN,CACV,C,IC9B6BO,GAAAA,SAAAA,G,wIAC1BC,UAA2B,K,EAC3B/U,OAAiB,E,EACjBO,SAAmB,E,EACnByU,QAAuB,K,EACvB1I,iBAAwB,CAAC,E,oCAEzB2I,qBAAA,SAAqB7I,GACjB,OAAQA,EAAM8I,QACV,KAAK,IACL,KAAK,IACD3W,KAAKwW,UAAY,SACjB,MACJ,KAAK,IACL,KAAK,IACDxW,KAAKwW,UAAY,WACjB,MACJ,QACI,MAAM3I,EAGdjM,EAAEwC,QACL,E,EAED3B,QAAA,SAAQoL,GACJ7N,KAAKgC,SAAU,EAEf,IAAI4U,GAAa,EAejB,GAbqB,MAAjB/I,EAAM8I,QAAkB9I,EAAMoI,SAAStI,QACvCiJ,GAAa,EAEb5W,KAAK+N,iBAAmB8I,GAAqBhJ,IAK7C7N,KAAK+N,iBAAmB,CAAC,EAG7BnM,EAAEwC,UAEGwS,EAAY,CAEb,KAAI/I,aAAiBiJ,MAcjB,MAAMjJ,EAbN,GAAIxN,IAAAA,MAAAA,UAAoB,UAAYwN,EAAMkJ,IAAK,CAC3C,MAAsBlJ,EAAMlO,QAArBgJ,EAAP,EAAOA,OAAQhL,EAAf,EAAeA,IACf,EAAsBkQ,EAAMkJ,IAArBJ,OAAAA,OAAP,MAAgB,GAAhB,EAEAjF,QAAQlL,MAASmC,EAAjB,IAA2BhL,EAA3B,IAAkCgZ,GAClCjF,QAAQ7D,MAAMA,GACd6D,QAAQsF,UACX,CAEGnJ,EAAMoJ,OACN5W,IAAAA,OAAAA,KAAgBwN,EAAMoJ,MAAOpJ,EAAMoJ,MAAMtV,QAKpD,CACJ,E,EA7DyB4U,CAA+BrM,KCExCgN,GAAAA,W,iCACjBnU,KAAA,SAAKC,GACD,IAAO6K,EAAS7K,EAAMV,MAAfuL,MAEP,OAAOjM,EAAE,MAAO,CACZA,EAAE,KAAMvB,IAAAA,WAAAA,MAAqB,wCAA0CwN,EAAQ,WAC/EjM,EAAE,IAAKvB,IAAAA,WAAAA,MAAqB,wCAA0CwN,EAAQ,kBAErF,E,EARgBqJ,GCCSC,GAAAA,SAAAA,G,wIAC1BrW,UAAAA,E,oCAEAiI,OAAA,SAAO/F,GAAc,WACjB,YAAM+F,OAAN,UAAa/F,GAEb,IAAMvC,EAAKmB,EAAEe,MAAMyU,MAAM,MACnBC,EAAgBhX,IAAAA,uBAEtB,GAAIgX,EACArX,KAAKsX,KAAKD,OACP,CAEH,IAAMvW,EAAOT,IAAAA,MAAAA,QAAwB,mBAAoBI,GAErDK,EACAd,KAAKsX,KAAKxW,GAEVT,IAAAA,MAAAA,KAAqB,mBAAoBI,EAAI,CAAC,EAAG,CAC7C+B,aAAcxC,KAAK0W,qBAAqB1Z,KAAKgD,QAC9C0C,MAAK,SAAA5B,GACJ,EAAKwW,KAAKxW,GACVc,EAAEwC,QACL,GAER,CACJ,E,EAEDiI,SAAA,SAASrJ,GACL,YAAMqJ,SAAN,UAAerJ,UAERgJ,SAASpD,KAAKoC,QAAQuM,gBAChC,E,EAEDD,KAAA,SAAKxW,GACDd,KAAKc,KAAOA,EAGZkL,SAASpD,KAAKoC,QAAQuM,iBAAmBzW,EAAKL,IACjD,E,EAEDsC,KAAA,WACI,OAAI/C,KAAKwW,UACE5U,EAAEkB,EAAelB,EAAEsV,GAAW,CACjCrJ,MAAO7N,KAAKwW,aAIfxW,KAAKc,KAIHd,KAAK2B,QAAQ3B,KAAKc,MAHdc,EAAE,aAAckI,IAAAA,UAA2B,CAACpI,UAAW,4BAIrE,E,EArDyByV,CAAyBZ,ICRvD,MAAM,GAA+B7Z,OAAOC,KAAKC,OAAO,4B,eCOlD0E,GAAoB,2CAYLkW,GAAAA,W,kBACjBC,2BAAqC,E,KACrCC,kBAA4B,E,KAC5BC,wBAAAA,C,4BAEA5U,KAAA,SAAKC,GAAuC,WACxC,EAQIA,EAAMV,MAPNb,EADJ,EACIA,MACAO,EAFJ,EAEIA,QACAyU,EAHJ,EAGIA,QACAmB,EAJJ,EAIIA,QACAC,EALJ,EAKIA,OACArC,EANJ,EAMIA,QACAsC,EAPJ,EAOIA,SAKAC,IAA2BtW,EAE3B+T,IACAuC,EAAgBA,GAAiBvC,EAAQG,WAAaH,EAAQI,WAK9D5V,KAAKyX,4BAA8BM,IACnC/X,KAAK0X,kBAAmB,EAExBxO,YAAW,WACP,EAAKwO,kBAAmB,EACxB9V,EAAEwC,QACL,GAAE,MAEPpE,KAAKyX,0BAA4BM,EACjCA,EAAgBA,GAAiB/X,KAAK0X,iBAEtC,IAAIM,EAAU,KAoBd,OAlBIJ,EACAI,EAAUpW,EAAE,gBAAiB,CACzBzB,IAAK,+BACL,IACAE,IAAAA,WAAAA,MAAqBiB,GAAoB,uBAEtCG,EACPuW,EAAU3X,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAC5CmV,IACPuB,EAAUpW,EAAE,eAAgB,CACxBzB,IAAK,gBACL,IACAE,IAAAA,WAAAA,MAAqBiB,GAAoB,WAAY,CACjD2W,IAAKC,KAAUzB,QAKpB7U,EAAE,yBAA0BA,EAAE,kBAAmB,CACpDF,UAAWoW,GAAYC,EAAgB,WAAa,IACrD,CACCnW,EAAE,0BAA2BoW,GAC7BxC,EAAU,CACNzT,IAAAA,UAAiB,CACb+D,QAAS,WACL0P,EAAQK,MACX,EACD5T,UAAWuT,EAAQG,WAAa3T,EAChCN,UAAW,SACXvB,KAAM,eACPE,IAAAA,WAAAA,MAAqBiB,GAAoB,SAC5CS,IAAAA,UAAiB,CACb+D,QAAS,WACL0P,EAAQM,MACX,EACD7T,UAAWuT,EAAQI,WAAa5T,EAChCN,UAAW,SACXvB,KAAM,eACPE,IAAAA,WAAAA,MAAqBiB,GAAoB,UAC5C,KACJS,IAAAA,UAAiB,CACb+D,QAAS+R,EACT5V,UAAWR,GAASO,EACpBN,UAAW,iDACXvB,KAAM,cACN6B,QAAAA,GACD3B,IAAAA,WAAAA,MAAqBiB,GAAoB,WAEnD,E,EAEDkJ,SAAA,SAASxH,GACLhD,KAAK2X,mBAAqB,WACtB,IAAMQ,EAAUnV,EAAM4H,IAAI8H,cAAc,mBAClC0F,EAAOpV,EAAM4H,IAAIO,wBAEnBgN,GAAWC,EAAK/M,MAAQ,IACxB8M,EAAQ5L,MAAMlB,MAAQ+M,EAAK/M,MAAQ,KAE1C,EAQGrI,EAAM4H,IAAIyN,QAAQ,UAClBnP,WAAWlJ,KAAK2X,mBAAoB,KAEpC3X,KAAK2X,qBAGTlM,OAAOQ,iBAAiB,SAAUjM,KAAK2X,mBAC1C,E,EAEDtL,SAAA,WACIZ,OAAOa,oBAAoB,SAAUtM,KAAK2X,mBAC7C,E,EApHgBH,GCXAc,GAAAA,W,iCACjBvV,KAAA,SAAKC,GACD,IAAOlC,EAAQkC,EAAMV,MAAdxB,KACDjB,EAASiB,EAAKjB,SAAS0D,UAE7B,OAAO3B,EAAE,sBAAuB,CAC5Bd,EAAK7C,QACL,IACA4B,EAAOmF,OAASpD,EAAE,uCAAwCyB,IAAUxD,IAAW,MAEtF,E,EAVgByY,GCHAC,GAAAA,WAIjB,WAAYzX,GAAY,KAHxBA,UAGwB,OAFxB0T,WAAqB,EAGjBxU,KAAKc,KAAOA,CACf,C,mBAEDmP,OAAA,SAAOwE,EAAwB7Y,GAA8B,WACzD,IAAK6Y,EACD,OAAO7P,QAAQ4T,SAKnB,IAFA,IAAM5P,EAAO,IAAI6P,SAERtS,EAAI,EAAGA,EAAIsO,EAAMzP,OAAQmB,IAC9ByC,EAAK8P,OAAO9c,EAAM,KAAM6Y,EAAMtO,IAMlC,OAHAnG,KAAKwU,WAAY,EACjB5S,EAAEwC,SAEK,IAAIQ,SAAQ,SAACC,EAAS2T,GACzBnY,IAAAA,QAA8B,CAC1BsI,OAAQ,OACRhL,IAAK0C,IAAAA,MAAAA,UAAoB,UAAY,EAAKS,KAAKR,cAAgB,UAC/DqY,UAAW,SAACC,GAAD,OAAcA,CAAd,EACXhQ,KAAAA,IACDlG,MAAK,SAAAmW,GACJ,EAAKrE,WAAY,EACjB5S,EAAEwC,SAEFS,EAAQxE,IAAAA,MAAAA,YAA8BwY,GACzC,IAVD,OAUS,SAAAC,GACL,EAAKtE,WAAY,EACjB5S,EAAEwC,SAEFoU,EAAOM,EACV,GACJ,GACJ,E,EAxCgBP,GCHN,SAAS,GAACtE,GACrB,OAA8F,KAAtF5T,IAAAA,MAAAA,UAA8B,+BAAiC,IAAI0G,QAAQkN,EACtF,CCYD,IAAM3S,GAAoB,wCAELyX,GAAAA,SAAAA,G,wIACjBvD,aAAAA,E,EACAlH,cAAAA,E,EACAnN,WAAgC,K,oCAEhC4H,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKgZ,UAAY,wBACpB,E,EAED1B,KAAA,SAAKxW,GACD,YAAMwW,KAAN,UAAWxW,GAEXd,KAAKwV,QAAU,IAAIyD,GAAa,CAAC,GACjCjZ,KAAKsO,SAAW,IAAIiK,GAASzX,EAChC,E,EAEDa,QAAA,SAAQb,GAAsB,WAE1B,IAAKA,EAAKoY,UAAU,aAChB,OAAOtX,EAAEkB,EAAe,CACpBK,YAAa9C,IAAAA,MAAAA,UAAoB,qCACjC+C,QAAQ,EACRF,SAAS,GACV,CACCtB,EAAE0W,GAAW,CACTxX,KAAAA,IAEJc,EAAE,IAAKvB,IAAAA,WAAAA,MAAqBiB,IAAqBR,EAAKoY,UAAU,UAAY,YAAc,mBAIlG,GAAIlZ,KAAKmB,WAAY,CACjB,IAAM6W,EAAUlX,EAAKnC,0BACrB,OAAOiD,EAAEkB,EAAe,CACpBK,YAAa9C,IAAAA,MAAAA,UAAoB,qCACjC+C,QAAQ,EACRF,SAAS,GACV,CACCtB,EAAE0W,GAAW,CACTxX,KAAAA,IAEJkX,EAAUpW,EAAE,MAAOA,EAAEwR,MAAM4E,IAAYpW,EAAE,IAAKvB,IAAAA,WAAAA,MAAqBiB,GAAoB,2BACvFtB,KAAKmB,WAAW+X,UAAU,WAAavP,IAAAA,UAAqB,CACxDjI,UAAW,SACX+H,KAAMvI,EAAqBlB,KAAKmB,aACjCd,IAAAA,WAAAA,MAAqBiB,GAAoB,oBAAsB,KAClEqI,IAAAA,UAAqB,CACjBjI,UAAW,SACX+H,KAAM1I,EAAmBD,IAC1BT,IAAAA,WAAAA,MAAqBiB,GAAoB,kBAEnD,CAED,IAAMsI,EAAO,IAAI4J,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAYnB,KAAKwV,QAAQ/Y,MACzB6R,SAAUtO,KAAKsO,SACfvI,SAAU,WACN,EAAKyP,QAAQnT,OACb,EAAKZ,OAAQ,CAChB,EACDQ,SAAUjC,KAAKgC,SAAWhC,KAAKsO,SAASkG,UACxCzG,iBAAkB/N,KAAK+N,mBAG3B,OAAOnM,EAAEkB,EAAe,CACpBK,YAAa9C,IAAAA,MAAAA,UAAoB,qCACjC+C,QAAQ,EACRF,SAAS,GACV,CACCtB,EAAE0W,GAAW,CACTxX,KAAAA,IAEJc,EAAE,MAAO,CACLF,UAAWyX,GAAmB,kBAAoB,+BAAiC,IACpFvP,EAAK2L,YACR3T,EAAE4V,GAAc,CACZ/V,MAAOzB,KAAKyB,MACZO,QAAShC,KAAKgC,QACdyU,QAASzW,KAAKyW,QACdmB,QAAS9b,OAAO4J,KAAK1F,KAAK+N,kBAAkB/I,OAAS,EACrDwQ,QAASnV,IAAAA,MAAAA,UAAoB,iCAAmCL,KAAKwV,QAAU,KAC/EqC,OAAQ,WACJ,EAAK7V,SAAU,EAEf3B,IAAAA,QAA8B,CAC1BsI,OAAQ,OACRhL,IAAK0C,IAAAA,MAAAA,UAAoB,UAAYS,EAAKR,cAAgB,eAC1DsI,KAAM,CACFpI,KAAM,CACF4Y,WAAY,CACR5Y,KAAM,EAAKgV,QAAQ/Y,SAI/B+F,aAAc,EAAKC,QAAQzF,KAAK,KACjC0F,MAAK,SAAAlC,GACJ,EAAKW,WAAad,IAAAA,MAAAA,YAAkCG,GACpD,EAAKwB,SAAU,EACf,EAAKP,OAAQ,EACb,EAAKgV,QAAU,IAAIpD,KACnB,EAAKtF,iBAAmB,CAAC,EACzB,EAAKyH,QAAQrR,QACbvC,EAAEwC,QACL,IAnBD,OAmBS,SAAAyJ,GAGL,MAFA,EAAK7L,SAAU,EACfJ,EAAEwC,SACIyJ,CACT,GACJ,KAGZ,E,EAlHgBkL,CAAqB5B,ICTpC7V,GAAoB,2DAOL+X,GAAAA,SAAAA,G,wIACjB1Z,aAAAA,E,oCAEAoJ,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKL,QAAU+U,KAAKC,MAAMD,KAAKE,UAAU5U,KAAKsC,MAAM3C,SACvD,E,EAED+B,UAAA,WACI,MAAO,iCACV,E,EAEDzD,MAAA,WACI,OAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,QACnD,E,EAEDK,QAAA,WAAU,WACN,OAAOC,EAAE,cAAe,CACpBA,EAAE,cAAeA,EAAE,IAAKvB,IAAAA,WAAAA,MAAqBiB,GAAoB,eAAgB,CAG7E,UAAWM,EAAE,OAAQ,aACrB,YAAaA,EAAE,OAAQ,mBAE3BA,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAC5DM,EAAE,oBAAqB,CACtBpC,KAAM,OACN/C,MAAOuD,KAAKL,QAAQ1B,OAAS,GAC7B4D,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAKkD,QAAQ1B,MAAQxB,CACxB,OAELmF,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,eAC3D0M,YAAa3N,IAAAA,WAAAA,MAAqBiB,GAAoB,oBACvDM,EAAE,oBAAqB,CACtBpC,KAAM,OACN/C,MAAOuD,KAAKL,QAAQ2Z,MAAQ,GAC5BzX,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAKkD,QAAQ2Z,KAAO7c,CACvB,OAELmF,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAC5DM,EAAE0Q,GAAe,CAChB7V,MAAOuD,KAAKL,QAAQgC,SAAW,GAC/BoE,SAAUjE,IAAS,SAAS,SAACrF,GACzB,EAAKkD,QAAQgC,QAAUlF,CAC1B,OAELmF,EAAE,cAAeG,IAAAA,UAAiB,CAC9BvC,KAAM,SACNkC,UAAW,0BACZrB,IAAAA,WAAAA,MAAqBiB,GAAoB,aAEnD,E,EAEDY,SAAA,SAASC,GACLA,EAAMC,iBAENpC,KAAKsC,MAAMyD,SAAS/F,KAAKL,QAC5B,E,EA/DgB0Z,CAAwCxW,KCRvDvB,GAAoB,8DAQLiY,GAAAA,SAAAA,G,wIACjBC,gBAAAA,E,EACAxB,aAAAA,E,oCAEAjP,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKwZ,WAAaxZ,KAAKsC,MAAMrE,MAC7B+B,KAAKgY,QAAUhY,KAAKsC,MAAM0V,OAC7B,E,EAEDtW,UAAA,WACI,MAAO,iCACV,E,EAEDzD,MAAA,WACI,OAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,QACnD,E,EAEDK,QAAA,WAAU,WACN,OAAOC,EAAE,cAAe,CACpBA,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAC5DM,EAAE,oBAAqB,CACtBpC,KAAM,OACN/C,MAAOuD,KAAKwZ,WACZ3X,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAK+c,WAAa/c,CACrB,OAELmF,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAC5DM,EAAE0Q,GAAe,CAChB7V,MAAOuD,KAAKgY,QACZjS,SAAUjE,IAAS,SAAS,SAACrF,GACzB,EAAKub,QAAUvb,CAClB,OAELmF,EAAE,cAAeG,IAAAA,UAAiB,CAC9BvC,KAAM,SACNkC,UAAW,0BACZrB,IAAAA,WAAAA,MAAqBiB,GAAoB,aAEnD,E,EAEDY,SAAA,SAASC,GACLA,EAAMC,iBAENpC,KAAKsC,MAAMyD,SAAS/F,KAAKwZ,WAAYxZ,KAAKgY,QAC7C,E,EAjDgBuB,CAAsC1W,KCHtC4W,GAAAA,W,iCACjB1W,KAAA,SAAKC,GACD,GAAIA,EAAMV,MAAMoX,SAAU,CACtB,IAAMC,EAAc/X,EAAE,gCAAiC,CACnDnF,MAAOuG,EAAMV,MAAM7F,MACnBsJ,SAAUjE,IAAS,SAAS,SAACrF,GACzBuG,EAAMV,MAAMyD,SAAStJ,EACxB,IACD0M,YAAanG,EAAMV,MAAM6G,YACzBlL,MAAO+E,EAAMV,MAAMrE,QAKvB,OAAI+E,EAAMV,MAAMyL,iBACLnM,EAAEkM,GAAW,CAChBC,iBAAkB/K,EAAMV,MAAMyL,kBAC/B4L,GAGAA,CACV,CAED,OAAO/X,EAAE,+BAAgC,CACrC3D,MAAO+E,EAAMV,MAAMrE,OACpB+E,EAAMV,MAAM7F,OAASuG,EAAMV,MAAM6G,YACvC,E,EA1BgBsQ,GCDfnY,GAAoB,8CAEpB8H,GAAO,CACT,CACIxN,IAAK,WACLuE,KAAM,iBAEV,CACIvE,IAAK,YACLuE,KAAM,uBAEV,CACIvE,IAAK,SACLuE,KAAM,sBAEV,CACIvE,IAAK,gBACLuE,KAAM,oBAcOyZ,GAAAA,W,kBACjBC,WAAqB,E,KACrBC,UAAoB,C,4BAEpB/W,KAAA,SAAKC,GAAyC,IAKtC+W,EALsC,OAC1C,EAAgD/W,EAAMV,MAA/CxB,EAAP,EAAOA,KAAM4Y,EAAb,EAAaA,SAAb,IAAuB3L,iBAAAA,OAAvB,MAA0C,CAAC,EAA3C,EAEMiM,EAAWha,KAAKga,SAASlZ,EAAMkC,GAAOO,UAI5C,OAAQzC,EAAKtB,QACT,IAAK,aACDua,EAAiB1Z,IAAAA,MAAU,uBAC3B,MACJ,IAAK,aACD0Z,EAAiB1Z,IAAAA,MAAU,iCAC3B,MACJ,IAAK,OACD0Z,EAAiB1Z,IAAAA,MAAU,2BAInC,OAAOuB,EAAE,oBAAqB,CAC1BA,EAAE+D,IAAU,CACRjE,UAAW,+CACXuY,cAAe,uBACfrU,gBAAiB,mCACjBxF,MAAOC,IAAAA,WAAAA,MAAqBiB,GAAoB,YAChDnB,KAAM,qBACP6Z,GACHpY,EAAE,yBAA0B,CACxB+H,IAAAA,UAAqB,CACjBxJ,KAAM,oBACNsJ,KAAMsQ,EACNrY,UAAW,uBACZrB,IAAAA,WAAAA,MAAqBiB,GAAoB,YAAcR,EAAKtB,WAEnEoC,EAAE,KAAMA,EAAE6X,GAAe,CACrBxb,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,wBAChDoY,SAAAA,EACAjd,MAAOqE,EAAK5C,gBAGZiL,YAAa9I,IAAAA,WAAAA,MAAqBiB,GAAoB,wBACtDyE,SAAU,SAACtJ,GACPuG,EAAMV,MAAM4X,gBAAiB,gBAAiBzd,EACjD,EACDsR,iBAAkBA,EAAiB7P,iBAEtB,eAAhB4C,EAAKtB,QAA2BsB,EAAKpB,aAAgBkC,EAAE,wBAAyB,CAC7EA,EAAE,IAAK,CACH6H,KAAsB,SAAhB3I,EAAKtB,OAAoBa,IAAAA,MAAU,oBAAqB,CAC1DgB,SAAUhB,IAAAA,QAAAA,KAAAA,WACVS,KAAMA,EAAKjD,UACVwC,IAAAA,MAAU,qBAAsB,CACjCI,GAAIK,EAAKjD,UAEbqI,OAAQ,UACT7F,IAAAA,MAAAA,UAAoB,YAA8B,SAAhBS,EAAKtB,OAAoBa,IAAAA,MAAU,oBAAqB,CACzFgB,SAAUhB,IAAAA,QAAAA,KAAAA,WACVS,KAAM,KACLT,IAAAA,MAAU,qBAAsB,CACjCI,GAAI,OAER,IACAmB,EAAE6X,GAAe,CACbxb,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,eAChDoY,SAAAA,EACAjd,MAAOqE,EAAK9C,OACZmL,YAAarI,EAAKL,KAClBsF,SAAU,SAACtJ,GACPuG,EAAMV,MAAM4X,gBAAiB,OAAQzd,EACxC,EACDsR,iBAAkBA,EAAiB/P,SAEtC,KACL4D,EAAE,kBAAmB,CACjBwH,GAAKtF,QAAO,SAAA4F,GAER,MAAgB,kBAAZA,EAAI9N,KACmB,eAAhBkF,EAAKtB,QAA2BsB,EAAKpB,YAInD,IAAEwE,KAAI,SAAAwF,GAAG,OAAI9H,EAAEG,IAAQ,CACpBL,UAAWsB,EAAMV,MAAMoH,MAAQA,EAAI9N,IAAM,SAAW,GACpDuE,KAAMuJ,EAAIvJ,KACV2F,QAAS,WACL9C,EAAMV,MAAM6X,UAAUzQ,EAAI9N,IAC7B,GACF,CACCyE,IAAAA,WAAAA,MAAqBiB,GAAoB,QAAUoI,EAAI9N,KAC3C,WAAZ8N,EAAI9N,IAAmB,EAAKwe,aAAatZ,GAAQ,MAR3C,IAUVc,EAAE+H,IAAY,CACVjI,UAAWsB,EAAMV,MAAM+X,iBAAmB,SAAW,GACrDla,KAAM,cACNsJ,KAAMxI,EAA0BH,IACjC,CACCT,IAAAA,WAAAA,MAAqBiB,GAAoB,oBACzC,IACAM,EAAE,aAAcmI,EAAgBjJ,SAI/C,E,EAEDkZ,SAAA,SAASlZ,EAAYkC,GAAyC,WACpDlD,EAAQ,IAAIC,KAElBD,EAAMG,IAAI,SAAU8B,IAAAA,UAAiB,CACjC5B,KAAM,qBACN2F,QAAS,WACL9C,EAAMV,MAAM6X,UAAU,SACzB,GACF9Z,IAAAA,WAAAA,MAAqBiB,GAAoB,qBAE5C,IAAMoN,EAA8D,SAAjDtG,aAAaC,QAAQ,wBAgFxC,OA9EAvI,EAAMG,IAAI,SAAU8B,IAAAA,UAAiB,CACjC5B,KAAM,iBACN2F,QAFiC,WAGzB4I,EACAtG,aAAaG,WAAW,wBAExBH,aAAaI,QAAQ,uBAAwB,OAEpD,GACFnI,IAAAA,WAAAA,MAAqBiB,IAAqBoN,EAAa,UAAY,UAAY,kBAE9E5N,EAAKxB,YAAcwB,EAAKoY,UAAU,eAClCpZ,EAAMG,IAAI,OAAQ8B,IAAAA,UAAiB,CAC/B5B,KAAM,eACN6B,QAAShC,KAAK6Z,UACd/T,QAAS,WACL,EAAK+T,WAAY,EAEjB/Y,EAAKuB,KAAK,CACN/C,UAAU,IACXoD,MAAK,WACJ,EAAKmX,WAAY,EACjBjY,EAAEwC,QACL,IALD,OAKS,SAAA0U,GAGL,MAFA,EAAKe,WAAY,EACjBjY,EAAEwC,SACI0U,CACT,GACJ,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,cAG3CR,EAAKxB,YAAcwB,EAAKoY,UAAU,YACnCpZ,EAAMG,IAAI,OAAQ8B,IAAAA,UAAiB,CAC/B5B,KAAM,mBACN6B,QAAShC,KAAK8Z,SACdhU,QAAS,WACL,EAAKgU,UAAW,EAEhBhZ,EAAKuB,KAAK,CACN/C,UAAU,IACXoD,MAAK,WACJ,EAAKoX,UAAW,EAChBlY,EAAEwC,QACL,IALD,OAKS,SAAA0U,GAGL,MAFA,EAAKgB,UAAW,EAChBlY,EAAEwC,SACI0U,CACT,GACJ,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,UAG5CR,EAAKxB,YAAcwB,EAAKoY,UAAU,cAClCpZ,EAAMG,IAAI,SAAU8B,IAAAA,UAAiB,CACjC5B,KAAM,eACN6B,QAAShC,KAAK8Z,SACdhU,QAAS,WACDwU,QAAQ9U,IAAYnF,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAAuB,CACpFrD,MAAO6C,EAAK7C,cAEZ,EAAK6b,UAAW,EAEhBhZ,EAAI,SAAU4B,MAAK,WACf,EAAKoX,UAAW,EAChBlY,EAAEwC,SAEFxC,EAAEe,MAAMC,IAAIvC,IAAAA,MAAU,uBACzB,IALD,OAKS,SAAAyY,GAGL,MAFA,EAAKgB,UAAW,EAChBlY,EAAEwC,SACI0U,CACT,IAER,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,YAGzCxB,CACV,E,EAEDsa,aAAA,SAAatZ,GACT,IAAMzD,EAASyD,EAAK1C,qBACdmc,EAAOzZ,EAAKzC,qBAEdzC,EAAM,SAYV,MAVoB,eAAhBkF,EAAKtB,OACL5D,EAAMyB,EAAS,UAAY,WACpBA,GAAUkd,EACjB3e,EAAM,OACCyB,EACPzB,EAAM,SACC2e,IACP3e,EAAM,QAGH,CACH,IACAgG,EAAE,aAAcvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAAmB1F,IAEnF,E,EA7NgBge,GCjBftY,GAAoB,uCAELkZ,GAAAA,SAAAA,G,wIACjB9Q,IAAc,W,EACd8L,aAAAA,E,EACAiF,0BAAAA,E,EACAC,aAAuB,E,EACvBC,YAAsB,E,oCAEtB5R,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAGT3C,IAAAA,MAAAA,wBACAL,KAAK0J,IAAMrJ,IAAAA,MAAAA,6BACJA,IAAAA,MAAAA,sBAEd,E,EAEDiX,KAAA,SAAKxW,GAIDd,KAAKc,KAAOT,IAAAA,MAAAA,aAA6B,mBAAoBS,EAAK8Z,YAClE5a,KAAKc,KAAKP,QAAS,EAEnBP,KAAKwV,QAAU,IAAIyD,GAAanY,EAAK3C,YAErC6B,KAAK6a,qBACR,E,EAEDrQ,SAAA,SAASxH,GAAiB,WACtB,YAAMwH,SAAN,UAAexH,GAGfhD,KAAKya,qBAAuB,SAACtY,GACrB,EAAKV,QACLU,EAAMC,iBACND,EAAM2Y,YAActV,IAAYnF,IAAAA,WAAAA,MAAqBiB,GAAoB,8BAEhF,EAEDmK,OAAOQ,iBAAiB,eAAgBjM,KAAKya,qBAChD,E,EAEDM,eAAA,WAEI,OAAI/a,KAAKyB,QAAU6Y,QAAQ9U,IAAYnF,IAAAA,WAAAA,MAAqBiB,GAAoB,+BACrEsD,QAAQ4T,UAGnB/M,OAAOa,oBAAoB,eAAgBtM,KAAKya,sBAEzC7V,QAAQC,UAClB,E,EAEDwH,SAAA,WACIZ,OAAOa,oBAAoB,eAAgBtM,KAAKya,qBACnD,E,EAED9Y,QAAA,SAAQb,GAAsB,WAC1B,IAAKA,EAAKoY,UAAU,WAChB,OAAOtX,EAAEkB,EAAe,eAG5B,IAAMkY,EAAWhb,KAAKgb,SAASla,GAE/B,OAAOc,EAAEkB,EAAe,CACpBlB,EAAEgY,GAAgB,CACd9Y,KAAAA,EACA4I,IAAK1J,KAAK0J,IACVyQ,UAAW,SAACve,GACR,EAAK8N,IAAM9N,EAEX,EAAKif,qBACR,EACDnB,UAAU,EACVQ,gBAAiBla,KAAKka,gBAAgBld,KAAKgD,MAC3C+N,iBAAkB/N,KAAK+N,mBAE3BiN,EAAS9W,KAAI,SAAA+W,GAAO,OAAIrZ,EAAE,wBAAyBqZ,EAA/B,IACpBrZ,EAAE,yBAA0BA,EAAE,MAAO,CACjChG,IAAKoE,KAAK0J,KACV1J,KAAaA,KAAK0J,IAAM,OAAO5I,KACnCc,EAAE4V,GAAc,CACZ/V,MAAOzB,KAAKyB,MACZO,QAAShC,KAAKgC,QACdyU,QAASzW,KAAKyW,QACdmB,QAAS9b,OAAO4J,KAAK1F,KAAK+N,kBAAkB/I,OAAS,EACrDwQ,QAASxV,KAAKwV,QACdqC,OAAQ,WACJ,EAAK7V,SAAU,EAEflB,EAAKuB,KAAK,CACNvE,UAAWgD,EAAKhD,YAChBC,QAAS+C,EAAK/C,UACdC,KAAM8C,EAAK9C,OACXC,MAAO6C,EAAK7C,QACZC,cAAe4C,EAAK5C,gBACpBC,SAAU,EAAKqX,QAAQ/Y,MACvB2B,mBAAoB0C,EAAK1C,qBACzBC,mBAAoByC,EAAKzC,qBACzBC,gBAAiBwC,EAAKxC,kBACtBE,kCAAmCsC,EAAKtC,oCACxCC,cAAeqC,EAAKrC,gBACpBC,yBAA0BoC,EAAKpC,2BAC/BE,2BAA4BkC,EAAKlC,6BACjCC,2BAA4BiC,EAAKjC,6BACjCC,yBAA0BgC,EAAKhC,2BAC/BC,yBAA0B+B,EAAK/B,2BAC/BC,6BAA8B8B,EAAK9B,+BACnCC,mBAAoB6B,EAAK7B,qBACzBC,mBAAoB4B,EAAK5B,qBACzBC,oBAAqB2B,EAAK3B,sBAC1BC,oBAAqB0B,EAAK1B,sBAC1BC,iBAAkByB,EAAKzB,oBACxB,CACCmD,aAAc,EAAKC,QAAQzF,KAAK,KACjC0F,MAAK,WACJ,EAAKV,SAAU,EACf,EAAKP,OAAQ,EACb,EAAKgV,QAAU,IAAIpD,KACnB,EAAKtF,iBAAmB,CAAC,EAEzB,EAAKyH,QAAU,IAAIyD,GAAanY,EAAK3C,YACrCyD,EAAEwC,QACL,IAjCD,OAiCS,SAAAyJ,GAGL,MAFA,EAAK7L,SAAU,EACfJ,EAAEwC,SACIyJ,CACT,GACJ,EACDiK,UAAU,KAGrB,E,EAEDoD,YAAA,SAAYpa,GAAsB,WACxB4N,EAA8D,SAAjDtG,aAAaC,QAAQ,wBAElCuB,EAAO,IAAI4J,GAAU,CACvBC,QAASzT,KAAKwV,QAAQ/Y,MACtBsJ,SAAU,WACN,EAAKyP,QAAQnT,OACb,EAAKZ,OAAQ,CAChB,EACDQ,SAAUjC,KAAKgC,QACf+L,iBAAkB/N,KAAK+N,iBAAiB5P,UAAY,CAAC,EACrDuQ,WAAAA,IAGJ,MAAO,CACH9M,EAAEkM,GAAW,CACTC,iBAAkB/N,KAAK+N,iBAAiB9P,MACxCmC,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAC5DM,EAAE,oBAAqB,CACtBpC,KAAM,OACN/C,MAAOqE,EAAK7C,QACZ4D,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAKyd,gBAAgB,QAASzd,EACjC,IACDwF,SAAUjC,KAAKgC,WAEnBJ,EAAE,KAAM,CACJvB,IAAAA,WAAAA,MAAqBiB,GAAoB,oBACzC,IACAM,EAAE,QAAS,CACPA,EAAE,IAAK,CACH6H,KAAM1I,EAAmBD,GACzBoF,OAAQ,UACT7F,IAAAA,WAAAA,MAAqBiB,IAAqBtB,KAAKyB,MAAQ,mBAAqB,aAC/E,IACAtB,IAAK,gCAGbuO,EAAa9M,EAAE,cAAeA,EAAE,wBAAyBvB,IAAAA,WAAAA,MAAqBiB,GAAoB,yBAA2B,KAC7HsI,EAAK0F,gBAEZ,E,EAED6L,aAAA,SAAara,GAAsB,eACzBsa,EAAqB,CAAC,EAoB5B,MAlByB,WAArBta,EAAKhD,aACLsd,EAAcC,IAAMhb,IAAAA,WAAAA,MAAqBiB,GAAoB,2BAC7DjB,IAAAA,MAAAA,IAAqB,UAAUkF,SAAQ,SAAAiB,GAC/BA,EAAM/F,OAASuG,KAAAA,UAAkBR,EAAM/F,OAASuG,KAAAA,YAIpDoU,EAAc5U,EAAM/F,MAAS+F,EAAMoB,aACtC,KAC2B,SAArB9G,EAAKhD,cACZsd,EAAcC,IAAMhb,IAAAA,WAAAA,MAAqBiB,GAAoB,yBACzD,gBAAiB5E,OAAO4e,YACxBjb,IAAAA,MAAAA,IAAmB,QAAQkF,SAAQ,SAAAgW,GAC/BH,EAAcG,EAAI9a,MAAQ8a,EAAItH,MACjC,KAIF,CACHrS,EAAEkM,GAAW,CACTC,iBAAkB/N,KAAK+N,iBAAiBjQ,WAAakC,KAAK+N,iBAAiBhQ,QAC3EqC,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,gBAC5D,CACC4O,KAAAA,UAAiB,CACbvQ,QAAS,CACL6b,WAAYnb,IAAAA,WAAAA,MAAqBiB,GAAoB,2BACrDma,OAAQpb,IAAAA,WAAAA,MAAqBiB,GAAoB,uBACjDgY,KAAMjZ,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAEnD7E,MAAOqE,EAAKhD,aAAe,aAC3BiI,SAAU,SAACtJ,GACP,EAAKyd,gBAAgB,YAAuB,eAAVzd,EAAyB,KAAOA,GAClE,EAAKyd,gBAAgB,UAAW,MAChC,EAAKW,qBACR,EACD5Y,SAAUjC,KAAKgC,UAEnB,IACqB,OAArBlB,EAAKhD,YAAuB8D,EAAE8Z,SAAS,CAAC,EAAG9Z,EAAE8Z,SAAS,CAGlD9f,IAAK8Y,KAAKE,UAAU9Y,OAAO4J,KAAK0V,KACjClL,KAAAA,UAAiB,CAChBvQ,QAASyb,EACT3e,MAAOqE,EAAK/C,WAAa,MACzBgI,SAAU,SAACtJ,GACP,EAAKyd,gBAAgB,UAAqB,QAAVzd,EAAkB,KAAOA,EAC5D,EACDwF,SAAUjC,KAAKgC,SAAWhC,KAAK0a,gBAC5B,KACP1a,KAAK0a,YAAc5Q,IAAAA,UAA2B,CAC1C0C,QAAS,WACR,OAEO,eAAhB1L,EAAKtB,OAA0BoC,EAAEkM,GAAW,CACxCC,iBAAkB/N,KAAK+N,iBAAiB1O,kBACzC,CACC+Q,KAAAA,UAAiB,CACbvG,MAAO/I,EAAKzB,mBACZ0G,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,oBAC1CiC,SAAUjC,KAAKgC,SAChB3B,IAAAA,WAAAA,MAAqBiB,GAAoB,0BAA4BR,EAAKtB,SAC5D,eAAhBsB,EAAKtB,QAA6B,kCAAmC9C,OAAO4e,WAEvE,KAFsF1Z,EAAE,SAAUvB,IAAAA,WAAAA,MAAqBiB,GAAoB,wCAAyC,CACtL7F,EC/QTmG,EAAE,IAAK,CACV6H,KAAM,8DACNvD,OAAQ,SACRyV,IAAK,kBD8QI,KACW,eAAhB7a,EAAKtB,OAA0BoC,EAAEkM,GAAW,CACxCC,iBAAkB/N,KAAK+N,iBAAiB/O,8BACzC,CACCoR,KAAAA,UAAiB,CACbvG,MAAK,SAAE/I,EAAK9B,qCAAP,EAAE,EAAqCY,QAC5CmG,SAAU,SAACtJ,GACP,IAAMkD,EAAsCmB,EAAK9B,gCAAkC,CAAC,EACpFW,EAAQC,QAAUnD,EAClB,EAAKyd,gBAAgB,+BAAgCva,EACxD,EACDsC,SAAUjC,KAAKgC,SAChB3B,IAAAA,WAAAA,MAAqBiB,GAAoB,+BAC5CS,IAAAA,UAAiB,CACbL,UAAW,SACXO,WAAU,SAACnB,EAAK9B,iCAAL,EAAqCY,SAChDkG,QAAS,WACLzF,IAAAA,MAAAA,KAAegZ,GAAiC,CAC5C1Z,QAASmB,EAAK9B,gCAAkC,CAAC,EACjD+G,SAAU,SAACpG,GACP,EAAKua,gBAAgB,+BAAgCva,GACrDU,IAAAA,MAAAA,OACH,GAER,GACFA,IAAAA,WAAAA,MAAqBiB,GAAoB,8BAC3C,KAEZ,E,EAEDsa,UAAA,SAAU9a,GAAsB,WACtB+a,EAAqC,eAAhB/a,EAAKtB,QAA2BsB,EAAKpB,aAEhE,MAAO,CACHkC,EAAEkM,GAAW,CACTC,iBAAkB/N,KAAK+N,iBAAiB3P,oBACzCgS,KAAAA,UAAiB,CAChBvG,MAAO/I,EAAK1C,qBACZ2H,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,sBAC1CiC,SAAUjC,KAAKgC,SAChB3B,IAAAA,WAAAA,MAAqBiB,GAAoB,UAA4B,eAAhBR,EAAKtB,OAA0B,qBAAuB,aAC9F,eAAhBsB,EAAKtB,OAA0BoC,EAAEkM,GAAW,CACxCC,iBAAkB/N,KAAK+N,iBAAiB1P,oBACzC+R,KAAAA,UAAiB,CAChBvG,MAAO/I,EAAKzC,qBACZ0H,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,sBAC1CiC,SAAUjC,KAAKgC,SAChB3B,IAAAA,WAAAA,MAAqBiB,GAAoB,8BAAgC,KAC5Eua,EAAqBja,EAAEkM,GAAW,CAC9BC,iBAAkB/N,KAAK+N,iBAAiBzP,gBACxC8B,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,2BAC5DM,EAAE,oBAAqB,CACtBpC,KAAM,SACN/C,MAAOqE,EAAKxC,kBACZuD,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAKyd,gBAAgB,kBAAmBzd,EAC3C,IACDwF,SAAUjC,KAAKgC,WACb,KACU,eAAhBlB,EAAKtB,OAA0B,CAC3BoC,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,wBACjDM,EAAEkM,GAAW,CACTpM,UAAW,gCACXqM,iBAAkB/N,KAAK+N,iBAAiB9O,mBACxCmB,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,8BAC5DoF,GAAmBgC,UAAU,CAC5B9B,SAAU9F,EAAK7B,qBACf8G,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,sBAC1CiC,SAAUjC,KAAKgC,QACfqF,WAA4B,SAAhBvG,EAAKtB,OACjB+H,oBAAoB,KAExB3F,EAAEkM,GAAW,CACTpM,UAAW,gCACXqM,iBAAkB/N,KAAK+N,iBAAiB7O,mBACxCkB,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,8BAC5DoF,GAAmBgC,UAAU,CAC5B9B,SAAU9F,EAAK5B,qBACf6G,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,sBAC1CiC,SAAUjC,KAAKgC,QACfqF,YAAY,KAEhBzF,EAAEkM,GAAW,CACTpM,UAAW,gCACXqM,iBAAkB/N,KAAK+N,iBAAiB5O,oBACxCiB,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,+BAC5DoF,GAAmBgC,UAAU,CAC5B9B,SAAU9F,EAAK3B,sBACf4G,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,uBAC1CiC,SAAUjC,KAAKgC,QACfqF,WAA4B,SAAhBvG,EAAKtB,OACjB+H,oBAAoB,KAExB3F,EAAEkM,GAAW,CACTpM,UAAW,gCACXqM,iBAAkB/N,KAAK+N,iBAAiB3O,oBACxCgB,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,+BAC5DoF,GAAmBgC,UAAU,CAC5B9B,SAAU9F,EAAK1B,sBACf2G,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,uBAC1CiC,SAAUjC,KAAKgC,YAEnB,KAEX,E,EAED8Z,iBAAA,SAAiBhb,GAAsB,WACnC,MAAO,CACHc,EAAE,cAAe,CACbwO,KAAAA,UAAiB,CACbvG,MAAO/I,EAAKtC,oCACZuH,SAAU/F,KAAKka,gBAAgBld,KAAKgD,KAAM,qCAC1CiC,SAAUjC,KAAKgC,SAChB3B,IAAAA,WAAAA,MAAqBiB,GAAoB,4CAC5CS,IAAAA,UAAiB,CACbL,UAAW,SACXO,UAAWnB,EAAKtC,oCAChBsH,QAAS,WACLzF,IAAAA,MAAAA,KAAekZ,GAA+B,CAC1Ctb,MAAO6C,EAAKhC,2BACZkZ,QAASlX,EAAKlC,6BACdmH,SAAU,SAAC9H,EAAe+Z,GACtB,EAAKkC,gBAAgB,2BAA4Bjc,GACjD,EAAKic,gBAAgB,6BAA8BlC,GACnD3X,IAAAA,MAAAA,OACH,GAER,GACFA,IAAAA,WAAAA,MAAqBiB,GAAoB,iCAEhDM,EAAEkM,GAAW,CACTC,iBAAkB/N,KAAK+N,iBAAiBtP,cACxC2B,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,yBAC5D,CACCM,EAAE,oBAAqB,CACnBpC,KAAM,OACN/C,MAAOqE,EAAKrC,gBACZoD,QAASC,IAAS,SAAS,SAACrF,GACxB,EAAKyd,gBAAgB,gBAAiBzd,EACzC,IACDwF,SAAUjC,KAAKgC,UAEnBD,IAAAA,UAAiB,CACbL,UAAW,SACXO,UAAWnB,EAAKrC,gBAChBqH,QAAS,WACLzF,IAAAA,MAAAA,KAAekZ,GAA+B,CAC1Ctb,MAAO6C,EAAK/B,2BACZiZ,QAASlX,EAAKjC,6BACdkH,SAAU,SAAC9H,EAAe+Z,GACtB,EAAKkC,gBAAgB,2BAA4Bjc,GACjD,EAAKic,gBAAgB,6BAA8BlC,GACnD3X,IAAAA,MAAAA,OACH,GAER,GACFA,IAAAA,WAAAA,MAAqBiB,GAAoB,iCAEhDM,EAAEkM,GAAW,CACTC,iBAAkB/N,KAAK+N,iBAAiBrP,yBACxC0B,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,oCAC5DM,EAAE0Q,GAAe,CAChB7V,MAAOqE,EAAKpC,2BACZqH,SAAUjE,IAAS,SAAS,SAACrF,GACzB,EAAKyd,gBAAgB,2BAA4Bzd,EACpD,IACDwF,SAAUjC,KAAKgC,WAG1B,E,EAED+Z,UAAA,SAAUjb,GAAsB,WAC5B,MAAO,CAEHc,EAAEkM,GAAW,CACT1N,MAAOwB,EAAE,QAAS,oFACnBA,EAAE,uBAAwB,CACzBnF,MAAOiY,KAAKE,UAAU9T,EAAK3C,WAAY,KAAM,GAC7C0D,QAASC,IAAS,SAAS,SAACrF,GACxB,IACI,EAAK+Y,QAAQ/Y,MAAQiY,KAAKC,MAAMlY,GAChC,EAAK+Y,QAAQnT,OACb,EAAKZ,OAAQ,CAGhB,CAFC,MAAOgG,GACLwP,MAAM,eACT,CACJ,IACDhV,SAAUjC,KAAKgC,WAG1B,E,EAEDkY,gBAAA,SAAgBhB,EAAmBzc,GAAY,MAEtCuD,KAAKc,OAKQ,UAAdoY,GAAyBlZ,KAAKc,KAAK7C,UAAY+B,KAAKc,KAAK5C,iBACzD8B,KAAKc,KAAKkb,eAAe,CACrB9d,cAAezB,IAIvBuD,KAAKc,KAAKkb,iBAAV,MACK9C,GAAYzc,EADjB,IAIAuD,KAAKyB,OAAQ,SACNzB,KAAK+N,iBAAiBmL,GAChC,E,EAED8B,SAAA,SAASla,GACL,IAAMka,EAAuB,GAEvBiB,EAAkB,SAACC,EAAsBC,GAC3C,IAAMC,EAAStb,EAAa,cAAgBob,KAE5C,OAAc,OAAVE,EACOA,EAGJ/b,IAAAA,MAAAA,UAAyB,+BAA+B8b,EAClE,EAED,SAASE,EAAgBC,EAA2BxU,GAChD,OAAOkF,MAAMY,QAAQ0O,KAA0D,IAAtCA,EAAgBvV,QAAQe,EACpE,CAED,GAAoB,eAAhBhH,EAAKtB,QAA2BsB,EAAKzB,mBACrC,GAAoB,SAAhByB,EAAKtB,OAAmB,CACxB,IAAM+c,EAAmBN,EAAgB,UAAW,yBAC9CO,EAAoBP,EAAgB,WAAY,2BAElDI,EAAgBE,EAAkBvV,KAAAA,WAAmBqV,EAAgBG,EAAmBxV,KAAAA,YACxFgU,EAAS/V,KAAK5E,IAAAA,WAAAA,MAAqBiB,GAAoB,+CAE9D,KAAM,CACH,IAAMib,EAAmBN,EAAgB,UAAW,+BAC9CO,EAAoBP,EAAgB,WAAY,iCAElDI,EAAgBE,EAAkBvV,KAAAA,YAAoBqV,EAAgBG,EAAmBxV,KAAAA,aACzFgU,EAAS/V,KAAK5E,IAAAA,WAAAA,MAAqBiB,GAAoB,iDAE9D,CAWL,MARoB,eAAhBR,EAAKtB,QAA4BsB,EAAK1C,sBACtC4c,EAAS/V,KAAK5E,IAAAA,WAAAA,MAAqBiB,GAAoB,kCAGvDR,EAAKpB,cACLsb,EAAS/V,KAAK5E,IAAAA,WAAAA,MAAqBiB,GAAoB,0CAGpD0Z,CACV,E,EAEDH,oBAAA,WAAsB,WACD,cAAb7a,KAAK0J,KAAwB1J,KAAKc,MAAkC,SAA1Bd,KAAKc,KAAKhD,cAA0BkC,KAAK2a,YAAgB,gBAAiBje,OAAO4e,aAM1Hjb,IAAAA,SAMLL,KAAK0a,aAAc,EAInBra,IAAAA,QAAAA,KAAiB,CAAC,WAAWqC,MAAK,WAC9B,EAAKgY,aAAc,EACnB,EAAKC,YAAa,EAElB/Y,EAAEwC,QACL,KAdGsN,QAAQC,KAAK,qCAepB,E,EAhhBgB6I,CAAqBrD,IE5B1C,MAAM,GAA+Bza,OAAOC,KAAKC,OAAO,yB,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,2B,eCGnC6f,GAAAA,WAMjB,WAAY/Y,QAAkB,IAAlBA,IAAAA,EAAc,CAAC,GAAG,KAL9BA,YAK8B,OAJ9BgQ,YAA4B,GAIE,KAH9B9P,aAAuB,EAGO,KAF9B5B,SAAmB,EAGfhC,KAAK0D,OAASA,CACjB,C,2BAEDG,cAAA,WACI,IAAMH,EAAc,CAACI,OAAQ,CAAC,GAQ9B,OANAJ,EAAOK,KAAO/D,KAAKgE,UAAUhE,KAAK0D,OAAOK,MAErC/D,KAAK0D,OAAOO,IACZP,EAAOI,OAAOG,EAAIjE,KAAK0D,OAAOO,GAG3BP,CACV,E,EAEDM,QAAA,WAMI,MALiB,CAEjBE,OAAa,aACbA,OAAa,YAGhB,E,EAEDC,MAAA,WACInE,KAAK0T,YAAc,GACnB9R,EAAEwC,QACL,E,EAEDC,QAAA,YAAmC,yBAAJ,CAAC,EAAG,GAA1BC,WAAAA,OAA0B,SAO/B,OANAtE,KAAKgC,SAAU,EAEVsC,GACDtE,KAAKmE,QAGFnE,KAAKuE,cAAc7B,MACtB,SAAA8B,GACI,EAAKkP,YAAc,GACnB,EAAKjP,aAAaD,EACrB,IACD,WACI,EAAKxC,SAAU,EACfJ,EAAEwC,QACL,GAER,E,EAEDG,YAAA,SAAYG,QAAoB,IAApBA,IAAAA,EAAiB,GACzB,IAAMC,EAAuBtE,IAAAA,uBAE7B,GAAIsE,EACA,OAAOC,QAAQC,QAAQF,GAG3B,IAAMjB,EAAS1D,KAAK6D,gBAGpB,OAFAH,EAAOoB,KAAO,CAACJ,OAAAA,GAERrE,IAAAA,MAAAA,KAAe,yBAA0BqD,EACnD,E,EAEDqB,SAAA,WACI/E,KAAKgC,SAAU,EAEfhC,KAAKuE,YAAYvE,KAAK0T,YAAY1O,QAC7BtC,KAAK1C,KAAKyE,aAAazH,KAAKgD,MACpC,E,EAEDyE,aAAA,SAAaD,GAAc,MAQvB,OAPA,EAAAxE,KAAK0T,aAAYzO,KAAjB,QAAyBT,GAEzBxE,KAAKgC,SAAU,EACfhC,KAAK4D,cAAgBY,EAAQU,QAAQC,SAAWX,EAAQU,QAAQC,MAAMC,KAEtExD,EAAEwC,SAEKI,CACV,E,EApFgBiY,GCQAC,GAAAA,W,iCACjB3Z,KAAA,SAAKC,GACD,IAAMsC,EAAyC,CAAC,EAEhD,CAAC,SAAU,UAAUC,SAAQ,SAAA3J,GACzB0J,EAAY1J,GAAO4J,IAAYnF,IAAAA,WAAAA,MAAqB,6CAA+CzE,GACtG,IAED,IAAM6J,EAAezC,EAAMV,MAAMyB,MAAQjI,OAAO4J,KAAKJ,GAAa,GAElE,OAAO1D,EAAE+D,IAAU,CACfC,gBAAiB,SACjBxF,MAAOkF,EAAYtC,EAAMV,MAAMyB,OAASjI,OAAO4J,KAAKJ,GAAapB,KAAI,SAAAtI,GAAG,OAAI0J,EAAY1J,EAAhB,IAAsB,GAC9FuE,KAAM,uBAAyC,WAAhBsF,EAA2B,KAAO,SAClE3J,OAAO4J,KAAKJ,GAAapB,KAAI,SAAAzH,GAC5B,IAAM2D,EAAQkF,EAAY7I,GACpBoJ,EAASJ,IAAgBhJ,EAE/B,OAAOmF,EAAEG,IAAQ,CACb5B,MAAM0F,GAAS,eACfC,QAAS,WACL9C,EAAMV,MAAMyD,SAAStJ,EACxB,EACDoJ,OAAAA,GACDzF,EACN,IACJ,E,EA1BgBsc,GCHfpb,GAAoB,oCAKpBqb,GAAe,CACjB,MACA,UACA,gBACA,mBACA,UACA,YACA,aACA,aACA,aAGEC,GAAuB,CACzB,MACA,gBACA,cAGJ,SAASC,GAAYlb,GACjB,OAAOC,EAAE,8BAA+B,CACpCA,EAAE,cAAeD,EAAQyU,MAAM,MAAMlS,KAAI,SAAC4Y,EAAM/U,GAAP,OAAiBA,EAAQ,CAAzB,IAA4BgV,KAAK,OAC1Enb,EAAE,cAAeD,IAExB,C,IAMoBqb,GAAAA,SAAAA,G,wIASjBC,OAAuB,O,EACvBC,QAAyB,Q,EACzB7H,OAA0B,K,EAC1B8H,KAAwB,K,EACxBC,aAAuB,E,EACvBC,YAAsB,E,EACtBC,gBAA0B,E,EAC1B9K,QAAyD,K,oCAfzD9Q,UAAA,WACI,MAAO,oEACV,E,EAEDzD,MAAA,WACI,OAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,QACnD,E,EAWDyH,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKud,eACR,E,EAED5b,QAAA,WAAU,WACCb,EAAQd,KAAKsC,MAAbxB,KAED0c,EAAc,GAAH,OAAOb,IAMxB,OAJI7b,EAAKoY,UAAU,yBACfsE,EAAYxV,OAAO,EAAG,EAAG,aAAc,kBAGpCpG,EAAE,6BAA8B,CACnCA,EAAE,2CAA4C,CAC1CA,EAAE,cAAeA,EAAE,IAAK,CACpBF,UAAW,+CACX4S,SAAUxT,EAAK5C,gBAAkB,IAAM8B,KAAKid,OAC5CxT,KAAMzJ,KAAKyd,eACZ,CACC7b,EAAE,2CACFA,EAAE,oBAAqBvB,IAAAA,WAAAA,MAAqBiB,GAAoB,cAEpEM,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,WACpD4O,KAAAA,UAAiB,CACbzT,MAAOuD,KAAKid,OACZlX,SAAU,SAACtJ,GACP,EAAKwgB,OAASxgB,EAEd,EAAK8gB,eACR,EACD5d,QAAS,CACL+d,KAAMrd,IAAAA,WAAAA,MAAqBiB,GAAoB,uBAC/Cqc,IAAKtd,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAC9Csc,IAAKvd,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAC9Cuc,IAAKxd,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAC9Cwc,KAAMzd,IAAAA,WAAAA,MAAqBiB,GAAoB,4BAI3DM,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,YACpD4O,KAAAA,UAAiB,CACbzT,MAAOuD,KAAKkd,QACZnX,SAAU,SAACtJ,GACP,EAAKygB,QAAUzgB,EAEf,EAAK8gB,eACR,EACD5d,QAAS,CACL1B,MAAOoC,IAAAA,WAAAA,MAAqBiB,GAAoB,yBAChD1F,IAAKyE,IAAAA,WAAAA,MAAqBiB,GAAoB,uBAC9Cyc,KAAM1d,IAAAA,WAAAA,MAAqBiB,GAAoB,6BAI3DM,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,WACpD0L,MAAMY,QAAQ9M,EAAK3C,YAAc2C,EAAK3C,WAAY+F,KAAI,SAAAyP,GAClD,IAAM9C,EAA0B,OAAhB,EAAKwE,SAAwD,IAArC,EAAKA,OAAOtO,QAAQ4M,EAAM/X,KAElE,OAAOgG,EAAE,MAAOA,EAAE,QAAS,CACvBA,EAAE,QAAS,CACPpC,KAAM,WACNqR,QAAAA,EACA9K,SAAU,WACc,OAAhB,EAAKsP,SACL,EAAKA,OAASvU,EAAK3C,WAAY+F,KAAI,SAAC8Z,GAAD,OAAYA,EAAEpiB,GAAd,KAGnCiV,EACA,EAAKwE,OAAS,EAAKA,OAAOvR,QAAO,SAAAma,GAAE,OAAIA,IAAOtK,EAAM/X,GAAjB,IAEnC,EAAKyZ,OAAOpQ,KAAK0O,EAAM/X,KAGvB,EAAKyZ,OAAOrQ,SAAWlE,EAAK3C,WAAY6G,SACxC,EAAKqQ,OAAS,MAGlB,EAAKkI,eACR,IAEL,IACA5J,EAAM1V,OAAS0V,EAAM/X,MAE5B,IAAI,OAETgG,EAAE,cAAe,CACbA,EAAE,QAASvB,IAAAA,WAAAA,MAAqBiB,GAAoB,SACpDkc,EAAYtZ,KAAI,SAAAiZ,GACZ,IAAK,EAAKC,cAAuD,IAAxCR,GAAqB7V,QAAQoW,GAClD,OAAO,KAGX,IAAMtM,EAAyB,OAAd,EAAKsM,OAAyD,IAAxCP,GAAqB7V,QAAQoW,IAC/DnQ,MAAMY,QAAQ,EAAKuP,QAAsC,IAA7B,EAAKA,KAAKpW,QAAQoW,GAEnD,OAAOvb,EAAE,MAAOA,EAAE,QAAS,CACvBA,EAAE,QAAS,CACPpC,KAAM,WACNqR,QAAAA,EACA9K,SAAU,WACY,OAAd,EAAKoX,OACL,EAAKA,KAAOP,GAAqBsB,SAGjCrN,EACA,EAAKsM,KAAO,EAAKA,KAAKrZ,QAAO,SAAAqa,GAAQ,OAAIA,IAAahB,CAAjB,IAErC,EAAKA,KAAKlY,KAAKkY,GAIf,EAAKA,KAAKnY,SAAW4X,GAAqB5X,QAC1C,EAAKmY,KAAKiB,OAAM,SAAAD,GAAQ,OAAgD,IAA5CvB,GAAqB7V,QAAQoX,EAAjC,MAExB,EAAKhB,KAAO,MAGhB,EAAKI,eACR,IAEL,IACAld,IAAAA,WAAAA,MAAqBiB,GAAoB,gBAAkB6b,KAElE,IACDnd,KAAKod,YAAc,KAAOxb,EAAE,MAAOA,EAAE,IAAK,CACtC6H,KAAM,IACN3D,QAAS,SAAC3D,GACNA,EAAMC,iBACN,EAAKgb,aAAc,CACtB,GACF/c,IAAAA,WAAAA,MAAqBiB,GAAoB,iBAEhDM,EAAE,cAAeA,EAAE,QAAS,CACxBA,EAAE,QAAS,CACPpC,KAAM,WACNqR,QAAS7Q,KAAKqd,WACdtX,SAAU,WACN,EAAKsX,YAAc,EAAKA,WAExB,EAAKE,eACR,IAEL,IACAld,IAAAA,WAAAA,MAAqBiB,GAAoB,oBAGjDM,EAAE,iCAAkC,CAChCA,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,YACjDtB,KAAKqe,iBAGhB,E,EAEDA,YAAA,WACI,GAAIre,KAAKsd,iBAAmBtd,KAAKwS,QAC7B,OAAO1I,IAAAA,UAA2B,CAACpI,UAAW,4BAGlD,GAA4B,SAAxB1B,KAAKwS,QAAQyK,OACb,OAAOJ,GAAYnI,KAAKE,UAAUF,KAAKC,MAAM3U,KAAKwS,QAAQhS,MAAO,KAAM,IACpE,GAA4B,QAAxBR,KAAKwS,QAAQyK,OACpB,OAAOJ,GAAY7c,KAAKwS,QAAQhS,MAEhC,IAAM8d,EAAQ5J,KAAKC,MAAM3U,KAAKwS,QAAQhS,MAEtC,OAAI8d,EAAMtZ,OACCpD,EAAE,QAASA,EAAE,QAAS,CACzBA,EAAE,KAAM,CACJA,EAAE,MACF0c,EAAM,GAAGpa,KAAI,SAACzH,EAAOsL,GAAR,OAAkBnG,EAAE,KAAM2c,OAAOC,aAAa,GAAKzW,GAAnD,MAEjBuW,EAAMpa,KAAI,SAACua,EAAK1W,GAAN,OAAgBnG,EAAE,KAAM,CAC9BA,EAAE,KAAMmG,EAAQ,GAChB0W,EAAIva,KAAI,SAAAzH,GACJ,IAAIiiB,EAAoBjiB,EAYxB,OAVc,IAAVA,EACAiiB,EAAere,IAAAA,WAAAA,MAAqBiB,GAAoB,oCACvC,IAAV7E,EACPiiB,EAAere,IAAAA,WAAAA,MAAqBiB,GAAoB,oCAChC,iBAAV7E,GAAsBkiB,KAAKC,MAAc,IAARniB,KAA8C,GAA3BkiB,KAAKC,MAAc,IAARniB,KAG7EiiB,EAAere,IAAAA,WAAAA,MAAqBiB,GAAoB,kCAGrDM,EAAE,KAAM8c,EAClB,KAhBK,OAqBX,kBAEd,E,EAEDjB,YAAA,SAAYjL,QAAiB,IAAjBA,IAAAA,GAAU,GAClB,IAAMqM,EAAmB,CAAC,EAEN,OAAhB7e,KAAKqV,SACLwJ,EAAYxJ,OAASrV,KAAKqV,OAAO0H,KAAK,MAGxB,OAAd/c,KAAKmd,OACL0B,EAAY1B,KAAOnd,KAAKmd,KAAKJ,KAAK,MAGjB,UAAjB/c,KAAKkd,UACL2B,EAAY3B,QAAUld,KAAKkd,SAG3Bld,KAAKqd,aACLwB,EAAYxB,WAAa,GAGzB7K,IACAqM,EAAYrM,QAAU,GAG1B,IAAMsM,EAAsBld,EAAEmd,iBAAiBF,GAE/C,OAAOxe,IAAAA,MAAAA,UAAoB,UAAYL,KAAKsC,MAAMxB,KAAKR,cAAgB,WAAaN,KAAKid,QAAU6B,EAAsB,IAAMA,EAAsB,GACxJ,E,EAEDvB,cAAA,WAAgB,WACZvd,KAAKsd,gBAAiB,EACtB1b,EAAEwC,SAIF,IAAM6Y,EAASjd,KAAKid,OAIpBrb,EAAEod,QAAQ,CACNrW,OAAQ,MACRhL,IAAKqC,KAAKyd,aAAY,GACtBwB,QAAS,SAAClI,GACN,IAAMJ,EAASI,EAAIJ,OAKnB,GAAIA,EAAS,KAAOA,EAAS,IACzB,MAAM,IAAIG,KAAJ,CAAiBH,EAAQI,EAAImI,aAAc,CAAC,EAAGnI,GAIzD,OAAOA,EAAImI,YACd,IACFxc,MAAK,SAAClC,GACL,EAAK8c,gBAAiB,EACtB,EAAK9K,QAAU,CACXyK,OAAAA,EACAzc,KAAAA,GAEJoB,EAAEwC,QACL,IAvBD,OAuBS,SAACyJ,GAKN,MAJA,EAAKyP,gBAAiB,EACtB,EAAK9K,QAAU,KACf5Q,EAAEwC,SAEIyJ,CACT,GACJ,E,EAhSgBmP,CAAoBna,KCvBnCvB,GAAoB,8CAEL6d,GAAAA,SAAAA,G,wIACjBC,oBAAAA,E,oCAEArW,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKof,eAAiB,IAAI3C,GAAoB,CAC1CxY,EAAG,QAAUrC,EAAEe,MAAMyU,MAAM,QAE/BpX,KAAKof,eAAe/a,SACvB,E,EAED1C,QAAA,SAAQb,GAAY,WAChB,OAAOc,EAAEkB,EAAe,CACpBlB,EAAEgY,GAAgB,CACd9Y,KAAAA,EACAqZ,UAAW,SAACve,GACRyE,IAAAA,MAAAA,sBAAkCzE,EAClCgG,EAAEe,MAAMC,IAAI5B,EAAmBF,GAClC,EACDuZ,kBAAkB,IAEtBzY,EAAE,qBAAsB,CACpBA,EAAEyd,GAAwB,CACtBtb,KAAM/D,KAAKof,eAAe1b,OAAOK,KACjCgC,SAAU,SAACtJ,GACP,EAAK2iB,eAAe1b,OAAOK,KAAOtH,EAClC,EAAK2iB,eAAe/a,SACvB,IAELhE,IAAAA,MAAAA,UAAoB,kCAAoCuB,EAAEiH,GAAa,CACnEG,aAAc,GACdjD,SAAU,SAACtJ,GACP,EAAK2iB,eAAe1b,OAAOO,EAAI,QAAUrC,EAAEe,MAAMyU,MAAM,MAAQ,IAAM3a,EACrE,EAAK2iB,eAAe/a,SACvB,EACD8E,YAAa9I,IAAAA,WAAAA,MAAqBiB,GAAoB,YACrD,KACW,eAAhBR,EAAKtB,OAA0BmK,IAAAA,UAAqB,CAChDjI,UAAW,kCACX+H,KAAM1I,EAAmBf,KAAKc,OAC/BT,IAAAA,WAAAA,MAAqBiB,GAAoB,cAAgB,KAE5DR,EAAKoY,UAAU,aAAenX,IAAAA,UAAiB,CAC3CL,UAAW,0BAA4C,eAAhBZ,EAAKtB,OAA0B,GAAK,6BAC3EsG,QAAS,WACLzF,IAAAA,MAAAA,KAAe2c,GAAa,CACxBlc,KAAM,EAAKA,MAElB,EACDX,KAAM,sBACPE,IAAAA,WAAAA,MAAqBiB,GAAoB,WAAa,OAE7DtB,KAAK4J,KAAK5J,KAAKof,iBAEtB,E,EAEDxV,KAAA,SAAKC,GACD,IAAI7H,EAWJ,OATI6H,EAAM7H,QACNA,EAAU8H,IAAAA,YACHD,EAAMjG,cACb5B,EAAUD,IAAAA,UAAiB,CACvBL,UAAW,SACXoE,QAAS+D,EAAM9E,SAAS/H,KAAK6M,IAC9BxJ,IAAAA,WAAAA,MAAqBiB,GAAoB,eAGf,IAA7BuI,EAAM6J,YAAY1O,QAAiB6E,EAAM7H,QAMtCJ,EAAE,MAAO,CACZA,EAAE,4BAA6B,CAC3BA,EAAE,QAASA,EAAE,KAAM,CACfA,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBACjDM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,iBACjDM,EAAE,KAAMvB,IAAAA,WAAAA,MAAqBiB,GAAoB,uBAErDM,EAAE,QAASiI,EAAM6J,YAAYxP,KAAI,SAAA/C,GAC7B,IAAM5B,EAAO4B,EAAW5B,OAClBM,EAASsB,EAAWtB,SAAS0D,UAEnC,OAAO3B,EAAE,KAAM,CACXA,EAAE,KAAM,CACJT,EAAWN,YACXhB,EAAOmF,OAASpD,EAAE,uCAAwCyB,IAAUxD,IAAW,OAEnF+B,EAAE,KAAMrC,EAAO,CACX+f,KAAO/f,GACP8B,KAAS9B,IACTc,IAAAA,WAAAA,MAAqBiB,GAAoB,UAC7CM,EAAE,KAAM,CACJ+H,IAAAA,UAAqB,CACjBjI,UAAW,SACX+H,KAAMvI,EAAqBC,IAC5Bd,IAAAA,WAAAA,MAAqBiB,GAAoB,YAGvD,OAELU,IAlCOgI,IAAAA,UAAsB,CACzBC,KAAM5J,IAAAA,WAAAA,MAAqBiB,GAAoB,UAmC1D,E,EA1GgB6d,CAA4BhI,ICH3C7V,GAAoB,wCAELie,GAAAA,SAAAA,G,wIACjBC,SAAmB,E,EACnB3F,WAAqB,E,EACrBC,UAAoB,E,EACpB3Y,WAAgC,K,EAChCmN,cAAAA,E,EACAkH,aAAAA,E,oCAEAzM,OAAA,SAAO/F,GAAc,WACjB,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKwW,UAAY,KAEjB,IAAM/V,EAAKmB,EAAEe,MAAMyU,MAAM,MACnBqI,EAAsBpf,IAAAA,uBAE5B,GAAIof,EACAzf,KAAKsX,KAAKmI,OACP,CACH,IAAMte,EAAad,IAAAA,MAAAA,QAA8B,yBAA0BI,GAGvEU,GAAcA,EAAWL,OACzBd,KAAKsX,KAAKnW,GAEVd,IAAAA,MAAAA,KAA2B,yBAA0BI,EAAI,CAAC,EAAG,CACzD+B,aAAcxC,KAAK0W,qBAAqB1Z,KAAKgD,QAC9C0C,MAAK,SAAAvB,GAEJ,EAAKmW,KAAKnW,GACVS,EAAEwC,QACL,GAER,CACJ,E,EAEDiI,SAAA,SAASrJ,GACL,YAAMqJ,SAAN,UAAerJ,UAERgJ,SAASpD,KAAKoC,QAAQuM,wBACtBvL,SAASpD,KAAKoC,QAAQ0U,sBAChC,E,EAEDpI,KAAA,SAAKnW,GACD,IAAML,EAAOK,EAAWL,OAGxB,IAAKA,EACD,KAAM,4BAGVd,KAAKmB,WAAaA,EAClBnB,KAAKsO,SAAW,IAAIiK,GAASzX,GAC7Bd,KAAKwV,QAAU,IAAIyD,GAAa9X,EAAWR,YAG3CqL,SAASpD,KAAKoC,QAAQuM,iBAAmBzW,EAAKL,KAC9CuL,SAASpD,KAAKoC,QAAQ0U,uBAAyBve,EAAWV,IAC7D,E,EAEDsC,KAAA,WAAO,WACH,GAAI/C,KAAKwW,UACL,OAAO5U,EAAEkB,EAAe,CACpBK,YAAa9C,IAAAA,MAAAA,UAAoB,qCACjC+C,QAAQ,GACTxB,EAAEsV,GAAW,CACZrJ,MAAO7N,KAAKwW,aAIpB,IAAKxW,KAAKmB,WACN,OAAO2I,IAAAA,UAA2B,CAACpI,UAAW,4BAGlD,IAAMZ,EAAOd,KAAKmB,WAAWL,OAG7B,IAAKA,EACD,KAAM,4BAGV,IAAM8I,EAAO,IAAI4J,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAYnB,KAAKwV,QAAQ/Y,MACzB6R,SAAUtO,KAAKsO,SACfvI,SAAU,WACN,EAAKyP,QAAQnT,OACb,EAAKZ,OAAQ,CAChB,EACDQ,SAAUjC,KAAKgC,SAAWhC,KAAKsO,SAASkG,UACxCzG,iBAAkB/N,KAAK+N,mBAGrBlO,EAASG,KAAKmB,WAAWtB,SAAS0D,UAElCyW,EAAWha,KAAKga,SAASha,KAAKmB,YAAYoC,UAEhD,OAAO3B,EAAEkB,EAAe,CACpBK,YAAa9C,IAAAA,MAAAA,UAAoB,qCACjC+C,QAAQ,GACT,CACCxB,EAAE,KAAM,CACJd,EAAK7C,QACL4B,EAAOmF,OAASpD,EAAE,uCAAwCyB,IAAUxD,IAAW,OAEnFma,EAAShV,OAASpD,EAAE,cAAeoY,GAAY,KAC/Cha,KAAKmB,WAAW+X,UAAU,WAAa,KAAOtX,EAAE,IAAKvB,IAAAA,WAAAA,MAAqBiB,GAAoB,mBAC9FM,EAAE,MAAO,CACLF,UAAWyX,GAAmBnZ,KAAKmB,WAAW+X,UAAU,WAAa,iBAAmB,kBAAoB,+BAAiC,IAC9ItP,EAAK2L,UAAUvV,KAAKmB,WAAW+X,UAAU,aAC5CtX,EAAE4V,GAAc,CACZ/V,MAAOzB,KAAKyB,MACZO,QAAShC,KAAKgC,QACdyU,QAASzW,KAAKyW,QACdmB,QAAS9b,OAAO4J,KAAK1F,KAAK+N,kBAAkB/I,OAC5CwQ,QAASnV,IAAAA,MAAAA,UAAoB,iCAAmCL,KAAKwV,QAAU,KAC/EqC,OAAQ,WACJ,EAAK7V,SAAU,EAEf,EAAKb,WAAYkB,KAAK,CAClB7B,KAAM,EAAKgV,QAAQ/Y,OACpB,CACC+F,aAAc,EAAKC,QAAQzF,KAAK,KACjC0F,MAAK,WACJ,EAAKV,SAAU,EACf,EAAKP,OAAQ,EACb,EAAKgV,QAAU,IAAIpD,KACnB,EAAKtF,iBAAmB,CAAC,EACzB,EAAKyH,QAAQrR,QACbvC,EAAEwC,QACL,GACJ,EACD0T,UAAU,KAGrB,E,EAEDkC,SAAA,SAAS7Y,GAAwB,WACvBrB,EAAQ,IAAIC,KA8FlB,OA5FIoB,EAAW+X,UAAU,YACrBpZ,EAAMG,IAAI,OAAQ8B,IAAAA,UAAiB,CAC/BL,UAAW,SACXM,QAAShC,KAAKwf,QACd1Z,QAAS,WACL,EAAK0Z,SAAU,EAEfre,EAAWkB,KAAK,CACZzB,UAAWO,EAAWP,aACvB8B,MAAK,WACJ,EAAK8c,SAAU,EACf5d,EAAEwC,QACL,IALD,OAKS,SAAA0U,GAGL,MAFA,EAAK0G,SAAU,EACf5d,EAAEwC,SACI0U,CACT,GACJ,GACFzY,IAAAA,WAAAA,MAAqBiB,IAAqBH,EAAWP,WAAa,SAAW,WAGhFO,EAAW7B,YAAc6B,EAAW+X,UAAU,eAC9CpZ,EAAMG,IAAI,OAAQ8B,IAAAA,UAAiB,CAC/BL,UAAW,SACXM,QAAShC,KAAK6Z,UACd/T,QAAS,WACL,EAAK+T,WAAY,EAEjB1Y,EAAWkB,KAAK,CACZ/C,UAAU,IACXoD,MAAK,WACJ,EAAKmX,WAAY,EACjBjY,EAAEwC,QACL,IALD,OAKS,SAAA0U,GAGL,MAFA,EAAKe,WAAY,EACjBjY,EAAEwC,SACI0U,CACT,GACJ,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,cAG3CH,EAAW7B,YAAc6B,EAAW+X,UAAU,YAC/CpZ,EAAMG,IAAI,OAAQ8B,IAAAA,UAAiB,CAC/BL,UAAW,SACXM,QAAShC,KAAK8Z,SACdhU,QAAS,WACL,EAAKgU,UAAW,EAEhB3Y,EAAWkB,KAAK,CACZ/C,UAAU,IACXoD,MAAK,WACJ,EAAKoX,UAAW,EAChBlY,EAAEwC,QACL,IALD,OAKS,SAAA0U,GAGL,MAFA,EAAKgB,UAAW,EAChBlY,EAAEwC,SACI0U,CACT,GACJ,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,UAG5CH,EAAW7B,YAAc6B,EAAW+X,UAAU,cAC9CpZ,EAAMG,IAAI,SAAU8B,IAAAA,UAAiB,CACjCL,UAAW,SACXM,QAAShC,KAAK8Z,SACdhU,QAAS,WACDwU,QAAQ9U,IAAYnF,IAAAA,WAAAA,MAAqBiB,GAAoB,sBAAuB,CACpFuO,KAAM1O,EAAWN,kBAEjB,EAAKiZ,UAAW,EAEhB3Y,EAAU,SAAUuB,MAAK,WACrB,EAAKoX,UAAW,EAChBlY,EAAEwC,SAEF,IAAMtD,EAAOK,EAAWL,OAEpBA,GACAc,EAAEe,MAAMC,IAAI3B,EAA0BH,GAE7C,IATD,OASS,SAAAgY,GAGL,MAFA,EAAKgB,UAAW,EAChBlY,EAAEwC,SACI0U,CACT,IAER,GACFzY,IAAAA,WAAAA,MAAqBiB,GAAoB,YAGzCxB,CACV,E,EAzOgByf,CAAuBhJ,ICVvBoJ,GAAAA,SAAAA,G,wIACjBC,mBAAAA,E,EACAze,gBAAAA,E,EACAwM,YAAAA,E,EACA6H,QAA+B,K,EAC/BqK,YAAsB,E,oCAEtB9W,OAAA,SAAO/F,GAAc,WACjB,YAAM+F,OAAN,UAAa/F,GAEbpB,EAAEod,QAAQ,CACNrhB,IAAK0C,IAAAA,MAAAA,UAAoB,UAAY,oBACrCsI,OAAQ,QACTjG,MAAK,SAAClC,GACL,EAAKof,cAAgBpf,EAAKof,cAC1B,EAAKze,WAAaX,EAAKW,WACvB,EAAKwM,OAASnN,EAAKmN,OACnBnN,EAAKsf,MAAMva,SAAQ,SAACwa,GAChB1f,IAAAA,MAAAA,WAAqB0f,EACxB,IAED,EAAKvK,QAAU,IAAIyD,GAAa,EAAK2G,cACxC,GACJ,E,EAED7c,KAAA,WAAO,WACH,IAAK/C,KAAKwV,QACN,OAAO5T,EAAE,IAAK,OAGlB,IAAMgI,EAAO,IAAI4J,GAAU,CACvBC,QAASzT,KAAKwV,QAAQ/Y,MACtB0E,WAAYnB,KAAKmB,WACjBmN,SAAU,CACNkG,WAAW,GAEfzO,SAAU,WACN,EAAKyP,QAASnT,MACjB,EACDqM,YAAY,EACZX,iBAAkB/N,KAAK2N,SAG3B,OAAO/L,EAAE,uBAAwB,CAC7BF,UAAW1B,KAAK6f,WAAa,+BAAiC,IAC/D,CACCje,EAAE,MAAO,CACLwO,KAAAA,UAAiB,CACbvG,MAAO7J,KAAK6f,WACZ9Z,SAAU,SAACtJ,GACP,EAAKojB,WAAapjB,CACrB,GACF,cACHmF,EAAE,MAAO8S,KAAKE,UAAU5U,KAAKwV,QAAQ/Y,MAAO,KAAM,IAClDmF,EAAE,MAAO8S,KAAKE,UAAU5U,KAAKmB,WAAY,KAAM,MAEnDS,EAAE,MAAO,CACLgI,EAAK0F,gBACL1N,EAAE4V,GAAc,CACZhC,QAASxV,KAAKwV,QACdsC,UAAU,MAGlBlW,EAAE,MAAOgI,EAAK2L,YACd3T,EAAE,MAAOgI,EAAK2L,UAAS,KAE9B,E,EAlEgBoK,CAAkBzV,KCVvC,MAAM,GAA+BxN,OAAOC,KAAKC,OAAO,6B,eCkBnCojB,GAAAA,W,kBACjB1R,cAAAA,E,KACAkH,aAAAA,E,KACA/T,OAAiB,E,KACjBO,SAAmB,E,KACnByU,QAAuB,K,KACvB1I,iBAAwB,CAAC,C,4BAEzBhF,OAAA,SAAO/F,GACH,MAAuBA,EAAMV,MAAtBxB,EAAP,EAAOA,KAED4S,EAFN,EAAauM,OAEcC,wBACrB/e,EAAauS,EAAcA,EAAYxG,MAAK,SAAA/L,GAC9C,IAAMgf,EAAWhf,EAAWL,OAE5B,OAAOqf,GAAYA,EAAS1f,OAASK,EAAKL,IAC7C,IAAI,KACLT,KAAKsO,SAAW,IAAIiK,GAASzX,GAE7Bd,KAAKwV,QAAU,IAAIyD,GAAa9X,EAAaA,EAAWR,WAAa,CAAC,EACzE,E,EAEDoC,KAAA,SAAKC,GAAyC,WAC1C,EAAuBA,EAAMV,MAAtBxB,EAAP,EAAOA,KAAMmf,EAAb,EAAaA,OAEPrW,EAAO,IAAI4J,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAYnB,KAAKwV,QAAQ/Y,MACzB6R,SAAUtO,KAAKsO,SACfvI,SAAU,WACN,EAAKyP,QAAQnT,OACb,EAAKZ,OAAQ,CAChB,EACDQ,SAAUjC,KAAKgC,SAAWhC,KAAKsO,SAASkG,UACxCzG,kBAAmB/N,KAAK+N,iBAAiBqS,iBAAmB,CAAC,GAAGtf,EAAKL,QAGnE4f,GAAcvf,EAAKoY,UAAU,aAEnC,OAAOtX,EAAE,wBAAyB,CAC9BF,UAAWsB,EAAMV,MAAMZ,WACxB,CACCkI,EAAK2L,SAAS8K,GACdze,EAAE4V,GAAc,CACZ/V,MAAOzB,KAAKyB,MACZO,QAAShC,KAAKgC,QACdyU,QAASzW,KAAKyW,QACdmB,QAAS9b,OAAO4J,KAAK1F,KAAK+N,kBAAkB/I,OAAS,EACrDwQ,QAASnV,IAAAA,MAAAA,UAAoB,iCAAmCL,KAAKwV,QAAU,KAC/EsC,cAA0C,IAAzB9U,EAAMV,MAAMwV,UAAkC9U,EAAMV,MAAMwV,SAC3ED,OAAQ,WACJ,EAAK7V,SAAU,EAEfie,EAAO5d,KAAK,CACRie,cAAe,CACXF,gBAAiB,CACb,CACIG,UAAU,EACV/gB,KAAM,mBACNiB,GAAIK,EAAKL,KACT2Y,WAAY,CACR5Y,KAAM,EAAKgV,QAAQ/Y,WAKpC,CACC+F,aAAc,EAAKC,QAAQzF,KAAK,KACjC0F,MAAK,WACJ,EAAKV,SAAU,EACf,EAAKP,OAAQ,EACb,EAAKgV,QAAU,IAAIpD,KACnB,EAAKtF,iBAAmB,CAAC,EACzB,EAAKyH,QAAQrR,QACbvC,EAAEwC,QACL,IAtBD,OAsBS,SAAAyJ,GAGL,MAFA,EAAK7L,SAAU,EACfJ,EAAEwC,SACIyJ,CACT,GACJ,KAGZ,E,EAEDpL,QAAA,SAAQoL,GAAqB,MACzB7N,KAAKgC,SAAU,EAEf,IAAI4U,GAAa,EAUjB,GARqB,MAAjB/I,EAAM8I,QAAN,SAAwB9I,EAAMoI,WAAN,EAAgBtI,SACxCiJ,GAAa,EAEb5W,KAAK+N,iBAAmB8I,GAAqBhJ,IAGjDjM,EAAEwC,UAEGwS,EACD,MAAM/I,CAEb,E,EArGgBmS,GCTAQ,GAAAA,SAAAA,G,wIACjB1f,KAAoB,K,oCAEpBiI,OAAA,SAAO/F,GACH,YAAM+F,OAAN,UAAa/F,GAEbhD,KAAKygB,SAAS7e,EAAEe,MAAMyU,MAAM,YAC/B,E,EAEDE,KAAA,SAAK/X,GAID,IAAM1B,EAAQ+D,EAAEe,MAAMyU,MAAM,QAC5BpX,KAAKc,KAAOT,IAAAA,MAAAA,MAAsB,mBAAoB,QAASxC,IAAU,KAGzE,YAAMyZ,KAAN,UAAW/X,EACd,E,EAEDoC,QAAA,WACI,OAAO3B,KAAKc,KAAOc,EAAEoe,GAAgB,CAEjCpkB,IAAKoE,KAAKc,KAAKL,KACfK,KAAMd,KAAKc,KACXmf,OAAQjgB,KAAKT,KACbmC,UAAWyX,GAAmBnZ,KAAKc,KAAKoY,UAAU,aAAe,cAAgB,eAAiB,+BAAiC,KAClIpP,IAAAA,WACR,E,EA5BgB0W,CAAoBE,MCTzC,MAAM,GAA+BhkB,OAAOC,KAAKC,OAAO,iBCAlD,GAA+BF,OAAOC,KAAKC,OAAO,uC,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,8B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,4CCWxD,SAAS+jB,GAAQ7f,EAAY8f,GACzB,IAAK9f,EAAK/C,UACN,OAAO,EAGX,IAAM8iB,EAAeD,EAAcvL,OAAOiE,KAG1C,QAAKtM,MAAMY,QAAQiT,IAKZA,EAAaC,MAAK,SAAAvF,GACrB,OAAOA,EAAI9a,MAAQK,EAAK/C,SAC3B,GACJ,CC3BD,MAAM,GAA+BrB,OAAOC,KAAKC,OAAO,gC,eCWnCmkB,GAAAA,SAAAA,G,oFACjBrf,UAAA,WACI,MAAO,8CACV,E,EAEDzD,MAAA,WACI,OAAO+B,KAAKsC,MAAMxB,KAAK7C,OAC1B,E,EAED0D,QAAA,WACI,OAAOC,EAAE,cAAeA,EAAEoe,GAAgB,CACtClf,KAAMd,KAAKsC,MAAMxB,KACjBmf,OAAQjgB,KAAKsC,MAAM0e,WACnBlJ,UAAU,EACVpW,UAAWyX,GAAmB,kBAAoB,+BAAiC,KAE1F,E,EAEDjX,SAAA,SAASC,GAGLA,EAAMC,gBACT,E,EAtBgB2e,CAA4Ble,KCK5Boe,GAAAA,W,yCACjBle,KAAA,SAAKC,GACD,MAA2BA,EAAMV,MAA1BxB,EAAP,EAAOA,KAAMkgB,EAAb,EAAaA,WAEPtN,EAAcsN,EAAWd,wBACzB/e,EAAauS,EAAcA,EAAYxG,MAAK,SAAA/L,GAC9C,IAAMgf,EAAWhf,EAAWL,OAC5B,OAAOqf,GAAYA,EAAS1f,OAASK,EAAKL,IAC7C,IAAI,KAEL,OAAOmB,EAAE,6BAA8B,CACnCF,UAAWyX,GAAmB,kBAAoB,+BAAiC,IACpF,CACCvX,EAAE,KAAMd,EAAK7C,SACb6C,EAAKoY,UAAU,aAAenX,IAAAA,UAAiB,CAC3C+D,QAAS,WACLzF,IAAAA,MAAAA,KAAe0gB,GAAqB,CAChCjgB,KAAAA,EACAkgB,WAAAA,GAEP,EACDtf,UAAW,sBACXvB,KAAM,aACNlC,MAAOuH,IAAYnF,IAAAA,WAAAA,MAAqB,2DACvC,KACLL,KAAKkhB,eAAepgB,EAAMK,IAEjC,E,EAED+f,eAAA,SAAepgB,EAAYK,GACvB,OAAKA,EAIQ,IAAIqS,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAYA,EAAWR,aAGf4U,UAAS,GARV3T,EAAE,IAAKvB,IAAAA,WAAAA,MAAqB,yDAS1C,E,EAxCgB4gB,GCXrB,SAASE,GAAiBC,GACtB,OAAyB,IAAlBA,EAAKxR,QACf,CCJD,IAAMyR,GAAgB,CAClB,sBACA,gCACA,0BACA,qBACA,6BAIiBC,GAAAA,SAAAA,G,kEACV3a,UAAP,SAAiBrE,GACb,EAAMqE,UAAN,UAAgBrE,GAEhBA,EAAMuD,OAAS7F,KAAKuhB,SAASjf,GAC7BA,EAAMnC,KAAO,gBACbmC,EAAMmH,KAAOpJ,IAAAA,MAAU,sBAC1B,E,YAEDmhB,iBAAA,WACI,OAAO,EAAP,UAAaA,iBAAb,UAA8BnhB,IAAAA,WAAAA,MAAqB,uCACtD,E,EAEMkhB,SAAP,SAAgBjf,GACZ,OAAOV,EAAEe,MAAM1G,QAAUqG,EAAMmH,OAAwE,IAAhE4X,GAActa,QAAS1G,IAAAA,QAAAA,KAAAA,UACjE,E,EAfgBihB,CAA2B3X,KCZhD,MAAM,GAA+BjN,OAAOC,KAAKC,OAAO,gC,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,kC,eCmB3C6kB,GAAa,CACtBhI,cAAAA,GACAwH,qBAAAA,GACA/J,UAAAA,GACA0C,eAAAA,GACA9L,UAAAA,GACAzI,iBAAAA,EACAiT,UAAAA,GACArQ,eAAAA,GACA+X,eAAAA,GACAld,cAAAA,EACA4D,mBAAAA,GACA4L,cAAAA,GACAkF,aAAAA,GACA8J,mBAAAA,GACAnX,SAAAA,GACA8D,eAAAA,GACAoR,uBAAAA,GACA3R,iBAAAA,IC1BS2H,GAAS,CAClBlC,QAAAA,GACAE,KAAAA,GACAjF,MAAAA,GACAoF,UAAAA,GACAD,MAAAA,GACAO,WAAAA,GACAkB,OAAAA,GACAhB,YAAAA,GACAJ,QAAAA,GACAM,OAAAA,ICXSwN,GAAQ,CACjBvK,iBAAAA,GACAZ,uBAAAA,GACAoJ,UAAAA,GACAnF,aAAAA,GACAnR,cAAAA,GACA0P,aAAAA,GACAyH,YAAAA,GACArB,oBAAAA,GACAI,eAAAA,ICKSoC,GAAS,CAClB,IAAIC,EAAAA,OAAAA,MAAa,mBAAoBrkB,GACrC,IAAIqkB,EAAAA,OAAAA,MAAa,mBAAoBhkB,GACrC,IAAIgkB,EAAAA,OAAAA,MAAa,yBAA0BlhB,GAC3C,IAAIkhB,EAAAA,OAAAA,MAAa,UACZ1I,UAAU,uBACV2I,QAAQ,yBACRA,QAAQ,2BACb,IAAID,EAAAA,OAAAA,MAAa,eACZC,QAAQ,mBACRA,QAAQ,yBACb,IAAID,EAAAA,OAAAA,MAAa,SACZC,QAAQ,mBACRA,QAAQ,0BAEb,IAAID,EAAAA,OAAAA,QACC3hB,IAAI,sBAAuB,cAAeoJ,IAC1CpJ,IAAI,gCAAiC,yBAA0BoJ,IAC/DpJ,IAAI,0BAA2B,mBAAoBoJ,IACnDpJ,IAAI,qBAAsB,aAAc8Y,IACxC9Y,IAAI,qBAAsB,kBAAmBua,IAC7Cva,IAAI,4BAA6B,8BAA+Bkf,IAChElf,IAAI,uBAAwB,mBAAoBsf,IAChDtf,IAAI,kBAAmB,oBAAqB0f,IAC5C1f,IAAI,oBAAqB,2BAA4BugB,KAG9DngB,IAAAA,aAAAA,IAAqB,uBAAuB,YCzCxCshB,EAAAA,GAAAA,QAAOre,IAAAA,UAAqB,YAAY,SAAUxD,GAC1CO,IAAAA,MAAAA,UAAoB,wBACpBP,EAAMG,IAAI,aAAcqhB,GAAmB5Y,YAElD,KAEDiZ,EAAAA,GAAAA,QAAOjB,KAAAA,UAAoB,YAAY,SAA0B5gB,GAAO,WAC9D6D,EAAQ3D,KAAKT,KAAK6gB,kBAEpBzc,GACAA,EAAM4B,SAAQ,SAACzE,GACXhB,EAAMG,IAAI,cAAgBa,EAAKL,KAAMkJ,IAAAA,UAAqB,CACtDxJ,KAAM,gBACNsJ,KAAMrI,EAAkB,EAAK7B,KAAMuB,IACpCA,EAAK7C,SACX,GAER,KZGD0jB,EAAAA,GAAAA,QAAOG,KAAAA,UAA8B,UAAU,WAAY,WACvD9hB,KAAK+hB,2BAA6B,CAAC,EACnC/hB,KAAKgiB,4BAA8B,KAG/BhiB,KAAKiiB,SAAS5M,OAAO6M,aAGzBliB,KAAKiiB,SAAS5M,OAAO6M,WAAa,CAAC,GAErB7hB,IAAAA,MAAAA,2BAAuC,IAE/CkF,SAAQ,SAAAzE,GACV,EAAKmhB,SAAS5M,OAAO6M,WAAWphB,EAAKL,MAAS,CAC1ChE,MAAO,CAAC,EACR6R,SAAU,IAAIiK,GAASzX,GAE9B,IACJ,KAED6gB,EAAAA,GAAAA,QAAOG,KAAoB,aAAa,SAAUhH,EAAaxY,GACvD6W,GAAmB,wBACnB7W,EAAMZ,WAAa,gCAE1B,KAEDigB,EAAAA,GAAAA,QAAOG,KAAAA,UAA8B,eAAe,SAAUhiB,GAAO,WAC3D6D,EAAQtD,IAAAA,MAAAA,2BAAuC,GAE/ClC,EAAkB,GAExBwF,EAAM4B,SAAQ,SAAAzE,GACV,GAAK6f,GAAQ7f,EAAM,EAAKmhB,UAAxB,CAIA,IAAMpY,EAAQ,EAAKoY,SAAS5M,OAAO6M,WAAWphB,EAAKL,MAE7CmJ,EAAO,IAAI4J,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAY0I,EAAMpN,MAClB6R,SAAUzE,EAAMyE,SAChBrM,SAAU,EAAKD,SAAW6H,EAAMyE,SAASkG,UACzCzG,kBAAmB,EAAKgU,2BAA2B3B,iBAAmB,CAAC,GAAGtf,EAAKL,QAGnFtC,EAAS8G,KAAK2E,EAAK2L,WAZlB,CAaJ,IAEGpX,EAAS6G,QACTlF,EAAMG,IAAI,aAAc2B,EAAE,gCAAiCzD,GAElE,KAEDwjB,EAAAA,GAAAA,QAAOG,KAAAA,UAA8B,QAAQ,SAAUthB,GAAW,WAG9DR,KAAK+hB,2BAA6B,CAAC,EAEM,OAArC/hB,KAAKgiB,6BACL3hB,IAAAA,OAAAA,QAAmBL,KAAKgiB,6BAG5B,IAAMre,EAAQtD,IAAAA,MAAAA,2BAAuC,GAE/CM,EAAkB,GAExBgD,EAAM4B,SAAQ,SAAAzE,GACL6f,GAAQ7f,EAAM,EAAKmhB,WAIxBthB,EAASsE,KAAK,CACVsb,UAAU,EACV9f,GAAIK,EAAKL,KACT2Y,WAAY,CACR5Y,KAAM,EAAKyhB,SAAS5M,OAAO6M,WAAWphB,EAAKL,MAAOhE,QAG7D,IAEGkE,EAASqE,SACTxE,EAAK8f,cAAgB9f,EAAK8f,eAAiB,CAAC,EAC5C9f,EAAK8f,cAAcF,gBAAkBzf,EACrCH,EAAK2hB,sBAAwB,CACzB3f,aAAc,SAACqL,GACU,MAAjBA,EAAM8I,QAAkB9I,EAAMoI,SAAStI,SACvC,EAAKoU,2BAA6BlL,GAAqBhJ,IAG3DjM,EAAEwC,SAIEyJ,EAAMoJ,QACN,EAAK+K,4BAA8B3hB,IAAAA,OAAAA,KAAgBwN,EAAMoJ,MAAOpJ,EAAMoJ,MAAMtV,SAEnF,GAGZ,KAEDygB,EAAAA,GAAAA,UAASC,KAAAA,UAAyB,iBAAiB,SAAUC,GAAU,WAC7DC,EAAiBD,IAEvB,IAAKtiB,KAAKwiB,YAAYV,MAClB,OAAOS,EAGX,IAAM5e,EAAQtD,IAAAA,MAAAA,2BAAuC,GAEjDoiB,EAAmB,EA2CvB,OAzCA9e,EAAM4B,SAAQ,SAAAzE,GACV,GAAK6f,GAAQ7f,EAAM,GAAnB,CAIA,IAAM3C,EAAW2C,EAAK3C,WAEjBA,GAILA,EAASoH,SAAQ,SAAAoO,GACb,OAAQA,EAAMnU,MACV,IAAK,QACL,IAAK,SAGDijB,GAAoB,IACpB,MACJ,IAAK,WACL,IAAK,QACDA,GAAmD,IAA9B9O,EAAMhU,SAAW,IAAIqF,OAEtC2O,EAAM+O,QACND,GAAoB,IAGxB,MACJ,QACIA,GAAoB,GAGvBtJ,GAAmB,wBACpBsJ,GAAoB,IAGxBA,GAAoB,EACvB,GAlCA,CAmCJ,IAGMF,EAAiB5D,KAAK1M,IAAIwQ,EAAkB,IACtD,KAIDL,EAAAA,GAAAA,UAASO,KAAAA,UAAsB,QAAQ,SAAUL,EAAUlJ,EAAYzZ,QAAc,IAAdA,IAAAA,EAAU,CAAC,GAC9E,IACIwiB,EAEA/I,EAFA+I,sBAMJ,OAAOG,EarMA,SAAuCjc,EAAQuc,GAC5D,GAAc,MAAVvc,EAAgB,MAAO,CAAC,EAC5B,IAEIzK,EAAKuK,EAFLD,EAAS,CAAC,EACV2c,EAAa/mB,OAAO4J,KAAKW,GAG7B,IAAKF,EAAI,EAAGA,EAAI0c,EAAW7d,OAAQmB,IACjCvK,EAAMinB,EAAW1c,GACbyc,EAAS7b,QAAQnL,IAAQ,IAC7BsK,EAAOtK,GAAOyK,EAAOzK,IAGvB,OAAOsK,CACR,CbiLO,CAGIkT,EAHJ,IAOe,MACRzZ,EAHoBwiB,GAAoD,CAAC,GAMnF,KI/LDR,EAAAA,GAAAA,QAAOmB,KAAAA,UAAuB,UAAU,WAA6B,WAC5D3B,GAAiBnhB,KAAKsC,MAAM8e,OAIjCphB,KAAK+iB,QAAQC,OAAM,WACf,IAAMtP,EAAc,EAAKpR,MAAM8e,KAAKJ,aAAad,wBAEjD,OAAOxM,EAAcA,EAAYxP,KAAI,SAAA/C,GAAU,OAAIuT,KAAKE,UAAUzT,EAAWR,WAA9B,IAA2Coc,KAAK,KAAO,EACzG,GACJ,KAED4E,EAAAA,GAAAA,QAAOmB,KAAAA,UAAuB,WAAW,SAA6BnhB,GAClE,IAAOyf,EAAQphB,KAAKsC,MAAb8e,KAEP,GAAKD,GAAiBC,GAAtB,CAIA,IAAMzd,EAAQyd,EAAKJ,aAAaZ,kBAEhC,GAAKzc,EAAL,CAIA,IAAMsf,EAAkBthB,EAAQuhB,WAAU,SAACC,GAAD,OAAeA,GAAQA,EAAK7gB,OAAkC,gBAAzB6gB,EAAK7gB,MAAMZ,SAAhD,IAI1CC,EAAQqG,QAA4B,IAArBib,EAAyB,EAAIA,EAAkB,EAAG,EAAGtf,EAAMO,KAAI,SAAApD,GAAI,OAAIc,EAAEqf,GAAsB,CAC1GngB,KAAAA,EACAkgB,WAAYI,EAAKJ,cAF6D,IANjF,CANA,CAgBJ,IUtCD3gB,IAAAA,MAAAA,mBAA+B+iB,EAC/B/iB,IAAAA,MAAAA,mBAA+B+iB,EAC/B/iB,IAAAA,MAAAA,0BAAsC+iB,EACtC/iB,IAAAA,MAAAA,qBAAiC+iB,EACjC/iB,IAAAA,MAAAA,kBAA8B+iB,GCA9BzB,EAAAA,GAAAA,QAAO0B,KAAAA,UAAuB,UAAU,WAA6B,WAC3D1f,EAAQtD,IAAAA,MAAAA,yBAAqC,GAEnDL,KAAKkiB,WAAa,CAAC,EACnBliB,KAAK+hB,2BAA6B,CAAC,EAEnCpe,EAAM4B,SAAQ,SAAAzE,GACV,EAAKohB,WAAWphB,EAAKL,MAAS,CAC1BhE,MAAO,CAAC,EACR6R,SAAU,IAAIiK,GAASzX,GAE9B,GACJ,KAED6gB,EAAAA,GAAAA,QAAO0B,KAAAA,UAAuB,UAAU,SAA6BvjB,GAAO,YAC1DO,IAAAA,MAAAA,yBAAqC,IAE7CkF,SAAQ,SAAAzE,GACV,IAAM+I,EAAQ,EAAKqY,WAAWphB,EAAKL,MAE7BmJ,EAAO,IAAI4J,GAAU,CACvBC,QAAS3S,EAAK3C,WACdgD,WAAY0I,EAAMpN,MAClB6R,SAAUzE,EAAMyE,SAChBrM,SAAU,EAAKD,SAAW6H,EAAMyE,SAASkG,UACzCzG,kBAAmB,EAAKgU,2BAA2B3B,iBAAmB,CAAC,GAAGtf,EAAKL,QAGnFX,EAAMG,IAAI,cAAgBa,EAAKjD,QAAS+D,EAAE,wBAAyB,CAC/DF,UAAWyX,GAAmB,UAAY,+BAAiC,IAC5EvP,EAAK2L,YACX,GACJ,KAEDoM,EAAAA,GAAAA,QAAO0B,KAAAA,UAAuB,cAAc,SAA6B7iB,GAAW,YAClEH,IAAAA,MAAAA,yBAAqC,IAE7CkF,SAAQ,SAAAzE,GAELN,EAAK4f,kBACN5f,EAAK4f,gBAAkB,IAG3B5f,EAAK4f,gBAAgBnb,KAAK,CACtBxE,GAAIK,EAAKL,KACT2Y,WAAY,CACR5Y,KAAM,EAAK0hB,WAAWphB,EAAKL,MAAOhE,QAG7C,GACJ,KAID2lB,EAAAA,GAAAA,UAASiB,KAAAA,UAAuB,WAAW,SAAUf,EAAUzU,GAAO,MAKlE,OAJqB,MAAjBA,EAAM8I,QAAN,SAAwB9I,EAAMoI,WAAN,EAAgBtI,SACxC3N,KAAK+hB,2BAA6BlL,GAAqBhJ,IAGpDyU,EAASzU,EACnB,KC5DDuU,EAAAA,GAAAA,UAAS3kB,IAAO,iBAAiB,SAAU6kB,EAAevC,GACtD,OAAIA,EAAMQ,iBACCR,EAAMQ,SAENR,GAGJuC,EAASvC,EACnB,GLyCJ,IAID1f,IAAAA,aAAAA,IAAqB,+BAA+B,YMtDhDshB,EAAAA,GAAAA,QAAOG,KAAoB,aAAa,SAAUhH,EAAaxY,GACvDjC,IAAAA,MAAAA,UAAoB,qCACpBiC,EAAMZ,WAAa,6BAE1B,KAEDigB,EAAAA,GAAAA,QAAOG,KAAAA,UAA8B,eAAe,SAAUhiB,GAAO,WACjE,GAAKO,IAAAA,MAAAA,UAAoB,mCAAzB,CAIA,GAAIP,EAAMwjB,IAAI,QAAS,CACnB,IAAMC,EAAczjB,EAAM7D,IAAI,QAE9B6D,EAAM0jB,WAAW,OAAQ5hB,EAAEkM,GAAW,CAClC1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqB,6DACvC0N,iBAAkB/N,KAAK+hB,2BAA2BzI,MACnD1X,EAAE,wCAAyC2hB,IACjD,CAeD,GAbAznB,OAAO4J,KAAK5F,EAAM2jB,YAAYle,SAAQ,SAAA3J,GAClC,GAAiC,IAA7BA,EAAImL,QAAQ,aAAhB,CAIA,IAAM2c,EAAgB5jB,EAAM7D,IAAIL,GAEhCkE,EAAM0jB,WAAW5nB,EAAKgG,EAAEkM,GAAW,CAC/B1N,MAAOwB,EAAE,QAAU8hB,GAAiBA,EAAcphB,MAAM,uBAA0B,KAClFyL,iBAAkB,EAAKgU,2BAA2BzI,MACnD1X,EAAE,wCAAyC8hB,IAP7C,CAQJ,IAEG5jB,EAAMwjB,IAAI,SAAU,CACpB,IAAMC,EAAczjB,EAAM7D,IAAI,SAE9B6D,EAAM0jB,WAAW,QAAS5hB,EAAEkM,GAAW,CACnC1N,MAAOwB,EAAE,QAASvB,IAAAA,WAAAA,MAAqB,8DACxCuB,EAAE,wCAAyC2hB,IACjD,CAEDzjB,EAAM0jB,WAAW,kBAAmB5hB,EAAEkM,GAAW,CAC7C1N,MAAOwB,EAAE,QAAS,CACdyP,IAAK,2BACNhR,IAAAA,WAAAA,MAAqB,8DACxB0N,iBAAkB/N,KAAK+hB,2BAA2B9jB,OACnD2D,EAAE,4CAA6C,CAC9C+hB,KAAM3jB,KAAK/B,MACXkL,YAAanJ,KAAKsC,MAAMshB,iBACxB3hB,SAAUjC,KAAKsC,MAAML,SACrB4hB,UAAW7jB,KAAK6jB,UAAU7mB,KAAKgD,UAGnCF,EAAMG,IAAI,yBAA0B2B,EAAEkM,GAAW,CAC7C1N,MAAOwB,EAAE,QAAS,CACdyP,IAAK,6BACNhR,IAAAA,WAAAA,MAAqB,mEACvB,IAhDJ,CAiDJ,KAEDshB,EAAAA,GAAAA,QAAOmC,KAAAA,UAA6B,SAAS,WACpCzjB,IAAAA,MAAAA,UAAoB,qCAKzBL,KAAK+jB,GAAGtjB,GAAK,4BAChB,GNXJ,IAAG,I","sources":["webpack://@kilowhat/formulaire/webpack/bootstrap","webpack://@kilowhat/formulaire/webpack/runtime/compat get default export","webpack://@kilowhat/formulaire/webpack/runtime/define property getters","webpack://@kilowhat/formulaire/webpack/runtime/hasOwnProperty shorthand","webpack://@kilowhat/formulaire/webpack/runtime/make namespace object","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/app']\"","webpack://@kilowhat/formulaire/external assign \"flarum.core\"","webpack://@kilowhat/formulaire/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@kilowhat/formulaire/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/Model']\"","webpack://@kilowhat/formulaire/./src/forum/models/File.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/computed']\"","webpack://@kilowhat/formulaire/./src/forum/models/Form.ts","webpack://@kilowhat/formulaire/./src/forum/models/Submission.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Page']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Button']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/withAttr']\"","webpack://@kilowhat/formulaire/./src/forum/routes.ts","webpack://@kilowhat/formulaire/./src/forum/modals/NewFormModal.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@kilowhat/formulaire/./src/forum/components/PageContainer.ts","webpack://@kilowhat/formulaire/./src/forum/states/FormListState.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@kilowhat/formulaire/./src/forum/components/FormSortDropdown.ts","webpack://@kilowhat/formulaire/./src/forum/utils/submissionCount.ts","webpack://@kilowhat/formulaire/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Separator']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/models/Group']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/GroupBadge']\"","webpack://@kilowhat/formulaire/./src/forum/components/PermissionDropdown.ts","webpack://@kilowhat/formulaire/./src/forum/components/GlobalSettings.ts","webpack://@kilowhat/formulaire/./src/forum/components/SearchInput.ts","webpack://@kilowhat/formulaire/./src/forum/pages/FormIndexPage.ts","webpack://@kilowhat/formulaire/./src/forum/components/Sortable.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/components/Select']\"","webpack://@kilowhat/formulaire/./src/forum/components/ValidationErrors.ts","webpack://@kilowhat/formulaire/./src/forum/components/FormGroup.ts","webpack://@kilowhat/formulaire/./src/forum/components/SortableHandle.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Field.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Checkbox.ts","webpack://@kilowhat/formulaire/./src/forum/components/RichTextField.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Content.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Date.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Items.ts","webpack://@kilowhat/formulaire/./src/forum/fields/LongAnswer.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Number.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Radio.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Select.ts","webpack://@kilowhat/formulaire/./src/forum/fields/ShortAnswer.ts","webpack://@kilowhat/formulaire/./src/forum/fields/Upload.ts","webpack://@kilowhat/formulaire/./src/forum/fields/typeMap.ts","webpack://@kilowhat/formulaire/./src/forum/cleanFieldConfiguration.ts","webpack://@kilowhat/formulaire/./src/forum/fields/FieldList.ts","webpack://@kilowhat/formulaire/./src/forum/utils/ValueHistory.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/RequestError']\"","webpack://@kilowhat/formulaire/./src/forum/utils/parseValidationError.ts","webpack://@kilowhat/formulaire/./src/forum/pages/AbstractProcessingPage.ts","webpack://@kilowhat/formulaire/./src/forum/components/ErrorPage.ts","webpack://@kilowhat/formulaire/./src/forum/pages/AbstractFormPage.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@kilowhat/formulaire/./src/forum/components/SaveControls.ts","webpack://@kilowhat/formulaire/./src/forum/components/FormTitle.ts","webpack://@kilowhat/formulaire/./src/forum/utils/Uploader.ts","webpack://@kilowhat/formulaire/./src/forum/utils/isHorizontalLayout.ts","webpack://@kilowhat/formulaire/./src/forum/pages/FormShowPage.ts","webpack://@kilowhat/formulaire/./src/forum/modals/AutomaticDiscussionOptionsModal.ts","webpack://@kilowhat/formulaire/./src/forum/modals/ConfirmationEmailOptionsModal.ts","webpack://@kilowhat/formulaire/./src/forum/components/DiscreetInput.ts","webpack://@kilowhat/formulaire/./src/forum/components/FormEditHeader.ts","webpack://@kilowhat/formulaire/./src/forum/pages/FormEditPage.ts","webpack://@kilowhat/formulaire/./src/common/helpers/composerPageExtensionLink.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@kilowhat/formulaire/./src/forum/states/SubmissionListState.ts","webpack://@kilowhat/formulaire/./src/forum/components/SubmissionSortDropdown.ts","webpack://@kilowhat/formulaire/./src/forum/modals/ExportModal.ts","webpack://@kilowhat/formulaire/./src/forum/pages/SubmissionIndexPage.ts","webpack://@kilowhat/formulaire/./src/forum/pages/SubmissionPage.ts","webpack://@kilowhat/formulaire/./src/forum/pages/DebugPage.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@kilowhat/formulaire/./src/forum/components/LinkedFormFill.ts","webpack://@kilowhat/formulaire/./src/forum/pages/ProfilePage.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/extend']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@kilowhat/formulaire/./src/forum/addComposerFields.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@kilowhat/formulaire/./src/forum/modals/DiscussionFormModal.ts","webpack://@kilowhat/formulaire/./src/forum/components/DiscussionSubmission.ts","webpack://@kilowhat/formulaire/./src/forum/addFormOnDiscussionPost.ts","webpack://@kilowhat/formulaire/./src/forum/components/SettingsLinkButton.ts","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['forum/components/SignUpModal']\"","webpack://@kilowhat/formulaire/external root \"flarum.core.compat['common/utils/BasicEditorDriver']\"","webpack://@kilowhat/formulaire/./src/forum/components/index.ts","webpack://@kilowhat/formulaire/./src/forum/fields/index.ts","webpack://@kilowhat/formulaire/./src/forum/pages/index.ts","webpack://@kilowhat/formulaire/./src/forum/index.ts","webpack://@kilowhat/formulaire/./src/forum/addLinks.ts","webpack://@kilowhat/formulaire/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@kilowhat/formulaire/./src/forum/addRoutes.ts","webpack://@kilowhat/formulaire/./src/forum/addSignUpFields.ts","webpack://@kilowhat/formulaire/./src/forum/patchStore.ts","webpack://@kilowhat/formulaire/./src/forum/addUnifiedComposer.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core;","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\n\nexport default class File extends Model {\n    filename = Model.attribute<string>('filename');\n    humanSize = Model.attribute<string>('humanSize');\n    url = Model.attribute<string>('url');\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/computed'];","import app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport Badge from 'flarum/common/components/Badge';\nimport User from 'flarum/common/models/User';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport computed from 'flarum/common/utils/computed';\nimport {AutomaticDiscussionOptions, FormLinkType, FormTemplate, FormType} from './JsonTypes';\n\nexport default class Form extends Model {\n    seoId = Model.attribute<string>('seoId');\n    link_type = Model.attribute<FormLinkType>('link_type');\n    link_id = Model.attribute<string>('link_id');\n    slug = Model.attribute<string>('slug');\n    title = Model.attribute<string>('title');\n    private_title = Model.attribute<string>('private_title');\n    template = Model.attribute<FormTemplate | null>('template');\n    accept_submissions = Model.attribute<boolean>('accept_submissions');\n    allow_modification = Model.attribute<boolean>('allow_modification');\n    max_submissions = Model.attribute<number>('max_submissions');\n    submission_count = Model.attribute<number>('submission_count');\n    send_confirmation_to_participants = Model.attribute<boolean>('send_confirmation_to_participants');\n    notify_emails = Model.attribute<string>('notify_emails');\n    web_confirmation_message = Model.attribute<string>('web_confirmation_message');\n    confirmationMessageHtml = Model.attribute<string>('confirmationMessageHtml');\n    email_confirmation_message = Model.attribute<string>('email_confirmation_message');\n    email_notification_message = Model.attribute<string>('email_notification_message');\n    email_confirmation_title = Model.attribute<string>('email_confirmation_title');\n    email_notification_title = Model.attribute<string>('email_notification_title');\n    automatic_discussion_options = Model.attribute<AutomaticDiscussionOptions | null>('automatic_discussion_options');\n    permission_see_own = Model.attribute<string>('permission_see_own');\n    permission_see_any = Model.attribute<string>('permission_see_any');\n    permission_edit_own = Model.attribute<string>('permission_edit_own');\n    permission_edit_any = Model.attribute<string>('permission_edit_any');\n    show_on_creation = Model.attribute<boolean>('show_on_creation');\n    isHidden = Model.attribute<boolean>('isHidden');\n\n    user = Model.hasOne<User>('user');\n\n    // Returns the generic type string used for translations\n    type = computed<FormType>('link_type', ((link_type: FormLinkType): FormType => {\n        if (link_type === 'groups') {\n            return 'user';\n        }\n\n        if (link_type === 'tags') {\n            return 'discussion';\n        }\n\n        return 'standalone';\n    }) as any);\n\n    isAutoLink = computed<boolean>('type', 'automatic_discussion_options', ((type: FormType, options: AutomaticDiscussionOptions | null) => {\n        return type === 'discussion' &&\n            options &&\n            options.enabled;\n    }) as any);\n\n    badges() {\n        const items = new ItemList();\n\n        if (this.isHidden()) {\n            items.add('hidden', Badge.component({\n                type: 'hidden',\n                icon: 'fas fa-trash',\n                label: app.translator.trans('kilowhat-formulaire.forum.badge.hidden'),\n            }));\n        }\n\n        return items;\n    }\n\n    apiEndpoint() {\n        return '/formulaire/forms' + (this.exists ? '/' + (this.data as any).id : '');\n    }\n}\n","import app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport Badge from 'flarum/common/components/Badge';\nimport User from 'flarum/common/models/User';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Form from './Form';\nimport {SubmissionPayload} from './JsonTypes';\n\nexport default class Submission extends Model {\n    formData = Model.attribute<SubmissionPayload | null>('data'); // Can't call it data because it's used internally\n    isLocked = Model.attribute<boolean>('isLocked');\n    isHidden = Model.attribute<boolean>('isHidden');\n    createdAt = Model.attribute<string>('createdAt');\n\n    user = Model.hasOne<User>('user');\n    form = Model.hasOne<Form>('form');\n\n    badges() {\n        const items = new ItemList();\n\n        if (this.isLocked()) {\n            items.add('lock', Badge.component({\n                type: 'lock',\n                icon: 'fas fa-lock',\n                label: app.translator.trans('kilowhat-formulaire.forum.badge.locked'),\n            }));\n        }\n\n        if (this.isHidden()) {\n            items.add('hidden', Badge.component({\n                type: 'hidden',\n                icon: 'fas fa-trash',\n                label: app.translator.trans('kilowhat-formulaire.forum.badge.hidden'),\n            }));\n        }\n\n        return items;\n    }\n\n    apiEndpoint() {\n        return '/formulaire/submissions' + (this.exists ? '/' + (this.data as any).id : '');\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/withAttr'];","import app from 'flarum/forum/app';\nimport User from 'flarum/common/models/User';\nimport Form from './models/Form';\nimport Submission from './models/Submission';\n\n// These methods are placed in a standalone file so they can be imported without any typing issue with app.route\n\nexport function formulaireFormShow(form: Form) {\n    return app.route('formulaireFormShow', {\n        id: form.seoId(),\n    });\n}\n\nexport function formulaireFormEdit(form: Form) {\n    return app.route('formulaireFormEdit', {\n        id: form.id(),\n    });\n}\n\nexport function formulaireSubmissionIndex(form: Form) {\n    return app.route('formulaireSubmissionIndex', {\n        id: form.id(),\n    });\n}\n\nexport function formulaireSubmission(submission: Submission) {\n    // TODO: switch with discussion or user profile for linked forms\n    return app.route('formulaireSubmission', {\n        id: submission.id(),\n    });\n}\n\nexport function formulaireProfile(user: User, form: Form) {\n    return app.route('formulaireProfile', {\n        username: user.username(),\n        form: form.seoId(),\n    });\n}\n","import app from 'flarum/forum/app';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport {FormLinkType} from '../models/JsonTypes';\nimport {formulaireFormEdit} from '../routes';\nimport Form from '../models/Form';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.form-create.';\n\ninterface NewFormModalAttrs extends  IInternalModalAttrs {\n    linkType: FormLinkType\n}\n\nexport default class NewFormModal extends Modal<NewFormModalAttrs> {\n    formTitle: string = '';\n    dirty: boolean = false;\n\n    className() {\n        return 'FormulaireModal FormulaireTheme Modal--small';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'field.title')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.formTitle,\n                    oninput: withAttr('value', (value: string) => {\n                        this.formTitle = value;\n                        this.dirty = true;\n                    }),\n                })\n            ]),\n            m('.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    loading: this.loading,\n                    disabled: !this.dirty,\n                }, app.translator.trans(translationPrefix + 'button.create')),\n            ]),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        app.store.createRecord<Form>('formulaire-forms').save({\n            title: this.formTitle,\n            private_title: this.formTitle,\n            link_type: this.attrs.linkType,\n            // Enable submissions by default on standalone forms since they can't be found easily\n            // We don't do the same for discussion/user fields since those would become immediately visible\n            accept_submissions: this.attrs.linkType === null,\n        }, {\n            errorHandler: this.onerror.bind(this),\n        }).then(form => {\n            app.modal.close();\n\n            m.route.set(formulaireFormEdit(form));\n        });\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","import {ClassComponent, Vnode} from 'mithril';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\n\ninterface PageContainerAttrs {\n    showSideNav?: boolean\n    narrow?: boolean\n    noTheme?: boolean\n}\n\nexport default class PageContainer implements ClassComponent<PageContainerAttrs> {\n    view(vnode: Vnode<PageContainerAttrs, this>) {\n        const pageClass = '.FormulairePage' + (vnode.attrs.noTheme ? '' : '.FormulaireTheme');\n\n        const {\n            showSideNav = true,\n            narrow = false,\n        } = vnode.attrs;\n\n        if (showSideNav) {\n            return m('.FormulairePageContainer', m('.container', m('.sideNavContainer', [\n                m('nav.IndexPage-nav.sideNav', m('ul', listItems(IndexPage.prototype.sidebarItems().toArray()))),\n                m('.sideNavOffset', m(pageClass, vnode.children)),\n            ])));\n        }\n\n        return m('.FormulairePageContainer.FormulairePageContainer--noSideNav', {\n            className: narrow ? 'FormulairePageContainer--narrow' : '',\n        }, m('.container', m(pageClass, vnode.children)));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Form from '../models/Form';\n\nexport default class FormListState {\n    params: any\n    forms: Form[] = []\n    moreResults: boolean = false\n    loading: boolean = true\n\n    constructor(params: any = {}) {\n        this.params = params;\n    }\n\n    requestParams() {\n        const params: any = {filter: {}};\n\n        params.sort = this.sortMap()[this.params.sort];\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    sortMap() {\n        const map: any = {};\n\n        map.latest = '-createdAt';\n        map.oldest = 'createdAt';\n\n        return map;\n    }\n\n    clear() {\n        this.forms = [];\n        m.redraw();\n    }\n\n    refresh({deferClear = false} = {}) {\n        this.loading = true;\n\n        if (!deferClear) {\n            this.clear();\n        }\n\n        return this.loadResults().then(\n            results => {\n                this.forms = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset: number = 0) {\n        const preloadedSubmissions = app.preloadedApiDocument();\n\n        if (preloadedSubmissions) {\n            return Promise.resolve(preloadedSubmissions);\n        }\n\n        const params = this.requestParams();\n        params.page = {offset};\n\n        return app.store.find('formulaire/forms', params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.forms.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    parseResults(results: any) {\n        this.forms.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\n\ninterface FormSortDropdownAttrs {\n    sort: string\n    onchange: (value: string) => void\n}\n\nexport default class FormSortDropdown implements ClassComponent<FormSortDropdownAttrs> {\n    view(vnode: Vnode<FormSortDropdownAttrs, this>) {\n        const sortOptions: { [key: string]: string } = {};\n\n        ['latest', 'oldest'].forEach(key => {\n            sortOptions[key] = extractText(app.translator.trans('kilowhat-formulaire.forum.form-sort.' + key));\n        });\n\n        const activeValue = (vnode.attrs.sort || Object.keys(sortOptions)[0]);\n\n        return m(Dropdown, {\n            buttonClassName: 'Button',\n            label: sortOptions[vnode.attrs.sort] || Object.keys(sortOptions).map(key => sortOptions[key])[0],\n            icon: 'fas fa-sort-amount-' + (activeValue === 'latest' ? 'up' : 'down'),\n        }, Object.keys(sortOptions).map(value => {\n            const label = sortOptions[value];\n            const active = activeValue === value;\n\n            return m(Button, {\n                icon: active ? 'fas fa-check' : true,\n                onclick: () => {\n                    vnode.attrs.onchange(value);\n                },\n                active,\n            }, label);\n        }));\n    }\n}\n","import Form from '../models/Form';\n\nexport default function (form: Form) {\n    return (form.submission_count() || '0') + (form.max_submissions() ? '/' + form.max_submissions() : '');\n}\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Separator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Group'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/GroupBadge'];","import {Children, ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Separator from 'flarum/common/components/Separator';\nimport Group from 'flarum/common/models/Group';\nimport Badge from 'flarum/common/components/Badge';\nimport GroupBadge from 'flarum/common/components/GroupBadge';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.permission-controls.';\n\nfunction badgeForId(id: string) {\n    const group = app.store.getById('groups', id);\n\n    return group ? GroupBadge.component({group, label: null}) : '';\n}\n\ninterface PermissionDropdownAttrs {\n    className?: string\n    buttonClassName?: string\n    label?: Children\n    groupIds: string[]\n    disallowInherit?: boolean\n    allowGuest?: boolean\n    guestMeansDisabled?: boolean\n    onchange: (groupIds: string[] | null) => void\n}\n\nexport default class PermissionDropdown extends Dropdown implements ClassComponent<PermissionDropdownAttrs> {\n    attrs!: PermissionDropdownAttrs\n\n    static initAttrs(attrs: PermissionDropdownAttrs) {\n        super.initAttrs(attrs);\n\n        attrs.className = 'PermissionDropdown';\n        attrs.buttonClassName = 'Button Button--text';\n    }\n\n    view(vnode: Vnode<PermissionDropdownAttrs, this>) {\n        const children: Children = [];\n\n        let groupIds = this.attrs.groupIds;\n\n        const inherit = groupIds === null;\n        const everyone = groupIds && groupIds.indexOf(Group.GUEST_ID) !== -1;\n        const members = groupIds && groupIds.indexOf(Group.MEMBER_ID) !== -1;\n        const adminGroup = app.store.getById<Group>('groups', Group.ADMINISTRATOR_ID)!;\n\n        if (inherit) {\n            this.attrs.label = Badge.component({icon: 'fas fa-angle-double-down'});\n        } else if (everyone) {\n            this.attrs.label = Badge.component({icon: 'fas fa-globe'});\n        } else if (members) {\n            this.attrs.label = Badge.component({icon: 'fas fa-user'});\n        } else {\n            this.attrs.label = [badgeForId(Group.ADMINISTRATOR_ID), groupIds.map(badgeForId)];\n        }\n\n        if (this.showing) {\n            if (!this.attrs.disallowInherit) {\n                children.push(\n                    m(Button, {\n                        icon: inherit ? 'fas fa-check' : true,\n                        onclick: () => this.save(null),\n                    }, [\n                        Badge.component({icon: 'fas fa-angle-double-down'}),\n                        ' ',\n                        app.translator.trans(translationPrefix + 'inherit'),\n                    ])\n                );\n            }\n\n            if (this.attrs.allowGuest) {\n                children.push(\n                    m(Button, {\n                        icon: everyone ? 'fas fa-check' : true,\n                        onclick: () => this.save([Group.GUEST_ID]),\n                        disabled: this.isGroupDisabled(Group.GUEST_ID),\n                    }, [\n                        Badge.component({icon: 'fas fa-globe'}),\n                        ' ',\n                        app.translator.trans(translationPrefix + (this.attrs.guestMeansDisabled ? 'disabled_members_button' : 'everyone_button')),\n                    ])\n                );\n            }\n\n            children.push(\n                m(Button, {\n                    icon: members ? 'fas fa-check' : true,\n                    onclick: () => this.save([Group.MEMBER_ID]),\n                    disabled: this.isGroupDisabled(Group.MEMBER_ID),\n                }, [\n                    Badge.component({icon: 'fas fa-user'}),\n                    ' ',\n                    app.translator.trans(translationPrefix + 'members_button'),\n                ]),\n\n                Separator.component(),\n\n                m(Button, {\n                    icon: !inherit && !everyone && !members ? 'fas fa-check' : true,\n                    disabled: !inherit && !everyone && !members,\n                    onclick: (e: KeyboardEvent) => {\n                        if (e.shiftKey) e.stopPropagation();\n                        this.save([]);\n                    },\n                }, [\n                    badgeForId(adminGroup.id()!),\n                    ' ',\n                    adminGroup.namePlural(),\n                ])\n            );\n\n            ([] as Children[]).push.apply(\n                children,\n                (app.store.all('groups') as Group[])\n                    .filter((group) => [Group.ADMINISTRATOR_ID, Group.GUEST_ID, Group.MEMBER_ID].indexOf(group.id()!) === -1)\n                    .map((group) =>\n                        m(Button, {\n                            icon: groupIds && groupIds.indexOf(group.id()!) !== -1 ? 'fas fa-check' : true,\n                            onclick: (e: KeyboardEvent) => {\n                                if (e.shiftKey) e.stopPropagation();\n                                this.toggle(group.id()!);\n                            },\n                            disabled: this.isGroupDisabled(group.id()!) && this.isGroupDisabled(Group.MEMBER_ID) && this.isGroupDisabled(Group.GUEST_ID),\n                        }, [badgeForId(group.id()!), ' ', group.namePlural()])\n                    )\n            );\n        }\n\n        // @ts-ignore Flarum doesn't think a non-abstract parent method exists\n        return super.view({...vnode, children});\n    }\n\n    save(groupIds: string[] | null) {\n        this.attrs.onchange(groupIds);\n    }\n\n    toggle(groupId: string) {\n        let groupIds = this.attrs.groupIds || [];\n\n        const index = groupIds.indexOf(groupId);\n\n        if (index !== -1) {\n            groupIds.splice(index, 1);\n        } else {\n            groupIds.push(groupId);\n            groupIds = groupIds.filter((id) => [Group.GUEST_ID, Group.MEMBER_ID].indexOf(id) === -1);\n        }\n\n        this.save(groupIds);\n    }\n\n    isGroupDisabled(id: string) {\n        // Not used for now, but let's keep it so the code stays close to core\n        return false;\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport icon from 'flarum/common/helpers/icon';\nimport PermissionDropdown from './PermissionDropdown';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.global-settings.';\n\ninterface GlobalSettingsAttrs {\n    type: string\n}\n\nexport default class GlobalSettings implements ClassComponent<GlobalSettingsAttrs> {\n    view(vnode: Vnode<GlobalSettingsAttrs, this>) {\n        // [0]: permission name\n        // [1]: translation key\n        // [2]: allow guest\n        let globalPermissions: [string, string, boolean][] = [\n            ['formulaire.fill', 'fill', true],\n        ];\n\n        switch (vnode.attrs.type) {\n            case 'discussion':\n                globalPermissions = [\n                    ['discussion.seeOwnFormulaire', 'seeOwnDiscussion', false],\n                    ['discussion.seeAnyFormulaire', 'seeAnyDiscussion', true],\n                    ['discussion.editOwnFormulaire', 'editOwnDiscussion', false],\n                    ['discussion.editAnyFormulaire', 'editAnyDiscussion', false],\n                ];\n                break;\n            case 'user':\n                globalPermissions = [\n                    ['formulaire.seeOwnUser', 'seeOwnUser', true],\n                    ['formulaire.seeAnyUser', 'seeAnyUser', true],\n                    ['formulaire.editOwnUser', 'editOwnUser', true],\n                    ['formulaire.editAnyUser', 'editAnyUser', false],\n                ];\n                break;\n        }\n\n        const hidden = localStorage.getItem('formulaireHideGlobalSettings') === 'true';\n\n        const isAdmin = !!app.forum.attribute('adminUrl');\n\n        return m('.FormulaireGlobalSettings', [\n            m('h3', {\n                onclick() {\n                    if (hidden) {\n                        localStorage.removeItem('formulaireHideGlobalSettings');\n                    } else {\n                        localStorage.setItem('formulaireHideGlobalSettings', 'true');\n                    }\n                },\n            }, [\n                app.translator.trans(translationPrefix + 'title'),\n                ' ',\n                icon('fas fa-chevron-' + (hidden ? 'down' : 'up')),\n                isAdmin ? null : [\n                    ' ',\n                    m('em', app.translator.trans(translationPrefix + 'admin-only')),\n                ],\n            ]),\n            hidden ? null : globalPermissions.map(permission => m('.Form-group.FormulairePermissionFormGroup', [\n                m('label', app.translator.trans(translationPrefix + 'permissions.' + permission[1])),\n                PermissionDropdown.component({\n                    groupIds: app.forum.attribute<any>('formulaireGlobalPermissions')[permission[0]],\n                    onchange: (groupIds: string[] | null) => {\n                        app.forum.attribute<any>('formulaireGlobalPermissions')[permission[0]] = groupIds;\n\n                        app.request({\n                            method: 'POST',\n                            url: app.forum.attribute('apiUrl') + '/permission',\n                            body: {\n                                permission: permission[0],\n                                groupIds,\n                            },\n                        });\n                    },\n                    disabled: !isAdmin,\n                    allowGuest: permission[2],\n                    guestMeansDisabled: permission[2] && permission[0].indexOf('Own') !== -1, // Will match the 2 user \"own\" permissions\n                    disallowInherit: true,\n                }),\n            ])),\n        ]);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport icon from 'flarum/common/helpers/icon';\n\ninterface SearchInputAttrs {\n    initialValue: string\n    onchange: (value: string) => void\n    placeholder: string\n}\n\nexport default class SearchInput implements ClassComponent <SearchInputAttrs> {\n    value: string = ''\n    activeValue: string = ''\n    debounce: number = 0\n\n    oninit(vnode: Vnode<SearchInputAttrs, this>): any {\n        this.value = vnode.attrs.initialValue;\n        this.activeValue = this.value;\n    }\n\n    view(vnode: Vnode<SearchInputAttrs, this>) {\n        return m('.Search', m('.Search-input', [\n            m('input.FormControl', {\n                type: 'search',\n                value: this.value,\n                oninput: (event: InputEvent) => {\n                    this.value = (event.target as HTMLInputElement).value;\n                    clearTimeout(this.debounce);\n\n                    this.debounce = setTimeout(() => {\n                        this.activeValue = this.value;\n                        vnode.attrs.onchange(this.value);\n                        m.redraw();\n                    }, 300) as any as number;\n                },\n                placeholder: vnode.attrs.placeholder,\n            }),\n            this.activeValue ? m('button.Search-clear.Button.Button--icon.Button--link', {\n                type: 'button',\n                onclick: () => {\n                    this.value = '';\n                    this.activeValue = '';\n                    vnode.attrs.onchange('');\n                },\n            }, icon('fas fa-times-circle')) : null,\n        ]));\n    }\n}\n","import {Children, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport listItems from 'flarum/common/helpers/listItems';\nimport icon from 'flarum/common/helpers/icon';\nimport NewFormModal from '../modals/NewFormModal';\nimport PageContainer from '../components/PageContainer';\nimport FormListState from '../states/FormListState';\nimport FormSortDropdown from '../components/FormSortDropdown';\nimport submissionCount from '../utils/submissionCount';\nimport GlobalSettings from '../components/GlobalSettings';\nimport {formulaireFormEdit, formulaireFormShow, formulaireSubmissionIndex} from '../routes';\nimport SearchInput from '../components/SearchInput';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.form-index.';\n\nconst TABS = [\n    {\n        key: 'standalone',\n        icon: 'fas fa-poll-h',\n        route: 'formulaireFormIndex',\n    },\n    {\n        key: 'discussion',\n        icon: 'fas fa-comment-alt',\n        route: 'formulaireFormIndexDiscussion',\n    },\n    {\n        key: 'user',\n        icon: 'fas fa-user-tag',\n        route: 'formulaireFormIndexUser',\n    },\n];\n\ninterface FormIndexPageAttrs {\n    routeName: string\n}\n\nexport default class FormIndexPage extends Page {\n    formType!: 'discussion' | 'user' | 'standalone'\n    formList!: FormListState\n    attrs!: FormIndexPageAttrs\n\n    oninit(vnode: Vnode<FormIndexPageAttrs, this>) {\n        super.oninit(vnode);\n\n        switch (this.attrs.routeName) {\n            case 'formulaireFormIndexDiscussion':\n                this.formType = 'discussion';\n                break;\n            case 'formulaireFormIndexUser':\n                this.formType = 'user';\n                break;\n            default:\n                this.formType = 'standalone';\n        }\n\n        this.formList = new FormListState({\n            q: 'type:' + this.formType,\n        });\n        this.formList.refresh();\n    }\n\n    view(): Children {\n        return m(PageContainer, [\n            m('.FormulaireHeader.FormulaireHeader--banner', [\n                icon('fas fa-poll-h', {\n                    className: 'FormulaireBanner',\n                }),\n                m('h1', app.translator.trans(translationPrefix + 'header.' + 'title')),\n                m('ul.FormulaireHeaderLinks', [\n                    m('li', m('a', {\n                        target: '_blank',\n                        href: 'https://kilowhat.net/flarum/extensions/formulaire',\n                    }, [\n                        app.translator.trans(translationPrefix + 'header.' + 'documentation'),\n                        ' ',\n                        icon('fas fa-external-link-alt'),\n                    ])),\n                    m('li', m('a', {\n                        target: '_blank',\n                        href: 'https://discuss.flarum.org/d/23063',\n                    }, [\n                        app.translator.trans(translationPrefix + 'header.' + 'discuss'),\n                        ' ',\n                        icon('fas fa-external-link-alt'),\n                    ])),\n                ]),\n                m('.FormulaireTabs', TABS.map(tab => LinkButton.component({\n                    className: this.formType === tab.key ? 'active' : '',\n                    icon: tab.icon,\n                    href: app.route(tab.route),\n                }, app.translator.trans(translationPrefix + 'tabs.' + tab.key)))),\n            ]),\n            m(GlobalSettings, {\n                type: this.formType,\n            }),\n            m('.FormulaireFilters', [\n                m(FormSortDropdown, {\n                    sort: this.formList.params.sort,\n                    onchange: (value: string) => {\n                        this.formList.params.sort = value;\n                        this.formList.refresh();\n                    },\n                }),\n                m(SearchInput, {\n                    initialValue: '',\n                    onchange: (value: string) => {\n                        this.formList.params.q = 'type:' + this.formType + ' ' + value;\n                        this.formList.refresh();\n                    },\n                    placeholder: app.translator.trans(translationPrefix + 'search'),\n                }),\n                Button.component({\n                    className: 'Button Button--primary FormulaireFilters--right',\n                    icon: 'fas fa-plus',\n                    onclick: () => {\n                        app.modal.show(NewFormModal, {\n                            linkType: this.formType === 'discussion' ? 'tags' : (this.formType === 'user' ? 'groups' : null),\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'new')),\n            ]),\n            this.list(this.formList),\n        ]);\n    }\n\n    list(state: FormListState) {\n        let loading;\n\n        if (state.loading) {\n            loading = LoadingIndicator.component();\n        } else if (state.moreResults) {\n            loading = Button.component({\n                className: 'Button',\n                onclick: state.loadMore.bind(state),\n            }, app.translator.trans(translationPrefix + 'load-more'));\n        }\n\n        if (state.forms.length === 0 && !state.loading) {\n            return Placeholder.component({\n                text: app.translator.trans(translationPrefix + 'empty'),\n            });\n        }\n\n        return m('div', [\n            m('table.FormulaireDataTable', [\n                m('thead', m('tr', [\n                    m('th', app.translator.trans(translationPrefix + 'columns.title')),\n                    this.formType === 'standalone' ? [\n                        m('th', app.translator.trans(translationPrefix + 'columns.accept-submissions')),\n                        m('th', app.translator.trans(translationPrefix + 'columns.allow-modification')),\n                    ] : [\n                        m('th', app.translator.trans(translationPrefix + 'columns.enabled')),\n                    ],\n                    m('th', app.translator.trans(translationPrefix + 'columns.submissions')),\n                    m('th', app.translator.trans(translationPrefix + 'columns.actions')),\n                ])),\n                m('tbody', state.forms.map(form => {\n                    const badges = form.badges().toArray();\n\n                    return m('tr', [\n                        m('td', [\n                            form.private_title(),\n                            badges.length ? m('ul.FormulaireDataTable-badges.badges', listItems(badges)) : null,\n                        ]),\n                        m('td', form.accept_submissions() ? icon('fas fa-check') : null),\n                        this.formType === 'standalone' ? m('td', form.allow_modification() ? icon('fas fa-check') : null) : null,\n                        m('td', submissionCount(form)),\n                        m('td', [\n                            LinkButton.component({\n                                className: 'Button',\n                                href: formulaireFormEdit(form),\n                            }, app.translator.trans(translationPrefix + 'edit')),\n                            ' ',\n                            LinkButton.component({\n                                className: 'Button',\n                                href: formulaireFormShow(form),\n                            }, app.translator.trans(translationPrefix + 'show')),\n                            ' ',\n                            LinkButton.component({\n                                className: 'Button',\n                                href: formulaireSubmissionIndex(form),\n                            }, app.translator.trans(translationPrefix + 'submissions')),\n                        ]),\n                    ]);\n                })),\n            ]),\n            loading,\n        ]);\n    }\n}\n","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\n\ninterface SortableAttrs {\n    className?: string\n    handleClassName?: string | null\n    containerTag?: string\n    placeholderTag?: string\n    disabled?: boolean\n    direction?: 'vertical' | 'horizontal'\n    onsort: (origin: number, destination: number) => void,\n}\n\n/**\n * A sortable implementation inspired by html5sortable, but designed to work with Mithril\n * The sortable children must be a flat array of vnodes and be keyed\n */\nexport default class Sortable implements ClassComponent<SortableAttrs> {\n    sortingIndex: number | null = null;\n    showPlaceholderForIndex: number = 0;\n\n    dragoverenterhandler!: (event: DragEvent) => void;\n    drophandler!: (event: DragEvent) => void;\n\n    oncreate(vnode: VnodeDOM<SortableAttrs>) {\n        // We need to handle both dragover and dragenter to prevent inputs from showing a cursor when hovered\n        // We also need this event to handle mouse movement because stopping propagation seems to stop mousemove event\n        this.dragoverenterhandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n                // @ts-ignore dataTransfer could be null... but not sure when that could happen\n                event.dataTransfer.dropEffect = 'move';\n\n                let targetIndex = 0;\n\n                // We will show the placeholder above or below the hovered item using the middle height as criteria\n                (vnode.dom.childNodes as any as HTMLElement[]).forEach(element => {\n                    const index = parseInt(element.dataset.index || '');\n\n                    // Ignore elements without an index (those will be the placeholders)\n                    if (isNaN(index)) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    if (vnode.attrs.direction === 'horizontal') {\n                        // Ignore invisible elements\n                        if (!position.width) {\n                            return;\n                        }\n\n                        const middleX = position.left + (position.width / 2);\n\n                        if (event.pageX > middleX + window.scrollX) {\n                            targetIndex = index + 1;\n                        }\n                    } else {\n                        // Ignore invisible elements\n                        if (!position.height) {\n                            return;\n                        }\n\n                        const middleY = position.top + (position.height / 2);\n\n                        if (event.pageY > middleY + window.scrollY) {\n                            targetIndex = index + 1;\n                        }\n                    }\n                });\n\n                if (targetIndex !== this.showPlaceholderForIndex) {\n                    this.showPlaceholderForIndex = targetIndex;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('dragover', this.dragoverenterhandler);\n        document.addEventListener('dragenter', this.dragoverenterhandler);\n\n        // Prevent dropping our sortable item into anything else\n        // Without this it's possible to drop the value into inputs or worse, cause the browser to navigate to 0.0.0.0\n        this.drophandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const origin = this.sortingIndex;\n                // This component works in reference to the original index, so there are always two possible placeholders\n                // in between the moved component. However we want to send the new index without that space\n                const destination = this.showPlaceholderForIndex - (this.showPlaceholderForIndex > this.sortingIndex ? 1 : 0);\n\n                this.sortingIndex = null;\n                m.redraw();\n\n                if (destination !== origin) {\n                    vnode.attrs.onsort(origin, destination);\n                }\n            }\n        };\n\n        document.addEventListener('drop', this.drophandler);\n    }\n\n    onremove() {\n        document.removeEventListener('dragover', this.dragoverenterhandler);\n        document.removeEventListener('dragenter', this.dragoverenterhandler);\n        document.removeEventListener('drop', this.drophandler);\n    }\n\n    view(vnode: Vnode<SortableAttrs, this>) {\n        const children: Vnode[] = [];\n\n        (vnode.children as Vnode<any>[]).forEach((content, index) => {\n            if (this.sortingIndex !== null && this.showPlaceholderForIndex === index) {\n                children.push(this.placeholder(vnode));\n            }\n\n            if (index === this.sortingIndex) {\n                if (!content.attrs.style) {\n                    content.attrs.style = {};\n                }\n\n                content.attrs.style.display = 'none';\n            }\n\n            content.attrs['data-index'] = index;\n            content.attrs.ondragstart = function (event: DragEvent) {\n                if (!event.target || !event.dataTransfer) {\n                    // @ts-ignore Mithril event redraw\n                    event.redraw = false;\n\n                    return;\n                }\n\n                let parent = (event.target as HTMLElement).parentNode;\n\n                while (parent) {\n                    if (parent === this) {\n                        break;\n                    }\n\n                    // If we find a container before finding ourself, we must be inside a nested Sortable component\n                    // In that case we need to return here so that the child component can handle it\n                    if (parent instanceof HTMLElement && parent.classList.contains('js-sortable-container')) {\n                        // @ts-ignore Mithril event redraw\n                        event.redraw = false;\n\n                        return;\n                    }\n\n                    parent = parent.parentNode;\n                }\n\n                let {handleClassName} = vnode.attrs;\n\n                // By default we only handle moves that have this class name\n                // The check can be disabled by setting handleClassName to null\n                if (typeof handleClassName === 'undefined') {\n                    handleClassName = 'js-handle';\n                }\n\n                if ((!handleClassName || (event.target as HTMLElement).classList.contains(handleClassName)) && !vnode.attrs.disabled) {\n                    const element = Array.from((vnode as any as VnodeDOM).dom.childNodes as any as HTMLElement[]).find(elem => elem.dataset.index === index + '');\n\n                    // This should usually not happen since all referenced indexes should exist\n                    // But this pleases typescript\n                    if (!element) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    event.dataTransfer.effectAllowed = 'move';\n                    event.dataTransfer.setData('text/plain', index + ''); // Cast to string\n                    event.dataTransfer.setDragImage(element, event.pageX - position.left - window.scrollX, event.pageY - position.top - window.scrollY);\n\n                    vnode.state.sortingIndex = index;\n                    vnode.state.showPlaceholderForIndex = index;\n                } else {\n                    // @ts-ignore Mithril event redraw\n                    event.redraw = false;\n                }\n            };\n\n            children.push(content);\n        });\n\n        if (this.sortingIndex !== null && this.showPlaceholderForIndex === (vnode.children as Vnode[]).length) {\n            children.push(this.placeholder(vnode));\n        }\n\n        const attrs: any = {\n            className: 'js-sortable-container',\n        };\n\n        if (vnode.attrs.className) {\n            attrs.className += ' ' + vnode.attrs.className;\n        }\n\n        return m(vnode.attrs.containerTag || 'div', attrs, children);\n    }\n\n    placeholder(vnode: Vnode<SortableAttrs>): Vnode {\n        return m(vnode.attrs.placeholderTag || 'div', {\n            className: 'FormulaireSortablePlaceholder',\n            key: 'placeholder',\n        }, vnode.attrs.placeholderTag === 'tr' ? m('td', {\n            colspan: 100,\n        }) : null);\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","import {ClassComponent, Vnode} from 'mithril';\nimport {FieldValidationErrors} from '../models/JsonTypes';\n\ninterface ValidationErrorsAttrs {\n    errors: string[] | FieldValidationErrors\n}\n\nexport default class ValidationErrors implements ClassComponent<ValidationErrorsAttrs> {\n    view(vnode: Vnode<ValidationErrorsAttrs, this>) {\n        let errors = vnode.attrs.errors || [];\n\n        // This check is to make using FormGroup outside of templates easier,\n        // as we can simply pass the validation tree filtered to the key, and take care of the \"errors\" sub-object here\n        if (typeof errors === 'object' && !Array.isArray(errors)) {\n            errors = errors.errors || [];\n        }\n\n        return errors && errors.length ? m('ul.FormulaireValidationErrors', errors.map(error => m('li', error))) : m('div') /* empty element because null doesn't work */;\n    }\n}\n","import {Children, ClassComponent, Vnode} from 'mithril';\nimport ValidationErrors from './ValidationErrors';\nimport {FieldValidationErrors} from '../models/JsonTypes';\n\ninterface FormGroupAttrs {\n    label?: Children\n    className?: string\n    description?: Children\n    validationErrors?: string[] | FieldValidationErrors\n}\n\nexport default class FormGroup implements ClassComponent<FormGroupAttrs> {\n    view(vnode: Vnode<FormGroupAttrs, this>) {\n        let errors = vnode.attrs.validationErrors || [];\n\n        // This check is to make using FormGroup outside of templates easier,\n        // as we can simply pass the validation tree filtered to the key, and take care of the \"errors\" sub-object here\n        if (typeof errors === 'object' && !Array.isArray(errors)) {\n            errors = errors.errors || [];\n        }\n\n        return m('.Form-group.Formulaire-form-group', {\n            className: (errors && errors.length ? 'in-error' : '') + (vnode.attrs.className ? ' ' + vnode.attrs.className : ''),\n        }, [\n            m('.Form-group-label', [\n                vnode.attrs.label,\n                vnode.attrs.description ? m('p', vnode.attrs.description) : null,\n            ]),\n            m('.Form-group-field', [\n                vnode.children,\n                m(ValidationErrors, {\n                    errors: errors,\n                }),\n            ]),\n        ]);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport icon from 'flarum/common/helpers/icon';\n\ninterface SortableHandleAttrs {\n    elementTag?: string\n    className?: string\n    disabled?: boolean\n}\n\nexport default class SortableHandle implements ClassComponent<SortableHandleAttrs> {\n    view(vnode: Vnode<SortableHandleAttrs>) {\n        const attrs: any = {\n            className: (vnode.attrs.className ? vnode.attrs.className + ' ' : '') + 'js-handle',\n        };\n\n        if (vnode.attrs.disabled) {\n            attrs.className += ' disabled';\n        } else {\n            attrs.draggable = 'true';\n        }\n\n        return m(vnode.attrs.elementTag || 'div', attrs, icon('fas fa-grip-lines'));\n    }\n}\n","import {Children} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport cleanFieldConfiguration from '../cleanFieldConfiguration';\nimport FormGroup from '../components/FormGroup';\nimport PermissionDropdown from '../components/PermissionDropdown';\nimport ValidationErrors from '../components/ValidationErrors';\nimport Sortable from '../components/Sortable';\nimport SortableHandle from '../components/SortableHandle';\nimport Uploader from '../utils/Uploader';\nimport {\n    FieldTemplate,\n    OptionDefinition,\n    SubmissionFieldPayload,\n    SubmissionPayload,\n    SubmissionValidationErrors\n} from '../models/JsonTypes';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.template-editor.';\n\ninterface FieldOptions {\n    config?: FieldTemplate\n    submission?: SubmissionPayload\n    uploader?: Uploader | null\n    onchange?: () => void\n    onduplicate?: () => void\n    ondelete?: () => void\n    disabled?: boolean\n    validationErrors?: SubmissionValidationErrors\n    depth?: number\n    expertMode?: boolean\n}\n\nexport default abstract class Field {\n    config: FieldTemplate\n    submission: SubmissionPayload\n    uploader: Uploader | null\n    onchange: () => void\n    onduplicate: () => void\n    ondelete: () => void\n    disabled: boolean\n    validationErrors: SubmissionValidationErrors\n    depth: number\n    expertMode: boolean\n\n    constructor({\n                    config = {} as FieldTemplate,\n                    submission = {},\n                    uploader = null,\n                    onchange = () => {\n                    },\n                    onduplicate = () => {\n                    },\n                    ondelete = () => {\n                    },\n                    disabled = false,\n                    validationErrors = {},\n                    depth = 0,\n                    expertMode = false,\n                }: FieldOptions) {\n        this.config = config;\n        this.submission = submission;\n        this.uploader = uploader;\n        this.onchange = onchange;\n        this.onduplicate = onduplicate;\n        this.ondelete = ondelete;\n        this.disabled = disabled;\n        this.validationErrors = validationErrors;\n        this.depth = depth;\n        this.expertMode = expertMode;\n\n        // To ensure they have a unique key\n        // Only run the logic when a config is passed. Otherwise there could be a loop with cleanFieldConfiguration\n        if (Object.keys(this.config).length) {\n            cleanFieldConfiguration(this.config);\n        }\n    }\n\n    getConfig(key: keyof FieldTemplate, defaultValue: any = '') {\n        return this.config[key] || defaultValue;\n    }\n\n    uniqueFieldId() {\n        return 'formulaireField' + this.getConfig('unique');\n    }\n\n    setConfig(key: keyof FieldTemplate) {\n        return (value: any) => {\n            if (value === null || value === false || value === '') {\n                delete this.config[key];\n            } else {\n                this.config[key] = value;\n            }\n\n            if (key === 'type') {\n                cleanFieldConfiguration(this.config);\n            }\n\n            this.onchange();\n        };\n    }\n\n    getSubmission(defaultValue: any = '', property: keyof SubmissionFieldPayload = 'value') {\n        const entry = this.submission[this.getConfig('key')];\n\n        if (entry) {\n            return entry[property];\n        }\n\n        return defaultValue;\n    }\n\n    setSubmission(value: any): void {\n        if (value === null || value === false || value === '' || value === []) {\n            delete this.submission[this.getConfig('key')];\n        } else {\n            if (!this.submission[this.getConfig('key')]) {\n                this.submission[this.getConfig('key')] = {\n                    value: '', // Temporary value because of the type-hinting\n                };\n            }\n\n            this.submission[this.getConfig('key')].value = value;\n        }\n\n        // Remove validation errors for this field when edited\n        const theKeyInValidationErrorTree = this.validationErrors[this.getConfig('key')];\n        if (theKeyInValidationErrorTree) {\n            delete theKeyInValidationErrorTree.errors;\n        }\n\n        this.onchange();\n    }\n\n    whiteListConfigProperties(): (keyof FieldTemplate)[] {\n        return [\n            'title',\n            'description',\n            'required',\n            'key',\n            'fillGroupIds',\n        ];\n    }\n\n    abstract configure(): Children;\n\n    configureView(): Children {\n        const validationErrorsForAllFieldsHere: string[] = [];\n\n        Object.keys(this.validationErrors).forEach(key => {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                return;\n            }\n\n            // If there are errors for the template field itself, when we reach the key \"errors\" this test will be true\n            if (Array.isArray(this.validationErrors[key])) {\n                validationErrorsForAllFieldsHere.push(...this.validationErrors[key]);\n            }\n\n            // If there are errors for individual properties of the field, they will be collected here\n            if (this.validationErrors[key].errors) {\n                validationErrorsForAllFieldsHere.push(...this.validationErrors[key].errors);\n            }\n\n            // This loop will skip \"items\" field sub-errors, because it will be an object inside an object\n            // Which shouldn't have any key named errors (unless a sub-field has key \"errors\" of course)\n        });\n\n        const whitelistedProperties = this.whiteListConfigProperties();\n\n        const typeOptions: any = {\n            short: app.translator.trans(translationPrefix + 'type.short'),\n            long: app.translator.trans(translationPrefix + 'type.long'),\n            number: app.translator.trans(translationPrefix + 'type.number'),\n            date: app.translator.trans(translationPrefix + 'type.date'),\n            checkbox: app.translator.trans(translationPrefix + 'type.checkbox'),\n            radio: app.translator.trans(translationPrefix + 'type.radio'),\n            select: app.translator.trans(translationPrefix + 'type.select'),\n            content: app.translator.trans(translationPrefix + 'type.content'),\n        };\n\n        if (this.depth === 0) {\n            typeOptions.upload = app.translator.trans(translationPrefix + 'type.upload');\n            typeOptions.items = app.translator.trans(translationPrefix + 'type.items');\n        }\n\n        return m('.FormulaireConfiguration', {\n            key: this.getConfig('unique'),\n            className: validationErrorsForAllFieldsHere.length ? 'in-error' : '',\n        }, [\n            m(SortableHandle, {\n                className: 'FormulaireConfiguration-handle',\n                disabled: this.disabled,\n            }),\n            m(ValidationErrors, {\n                errors: validationErrorsForAllFieldsHere,\n            }),\n            m('.Form-group', [\n                whitelistedProperties.indexOf('title') === -1 ? null : m('.FormulaireInputWithLabel', {\n                    className: this.getConfig('title') ? 'FormulaireInputWithLabel--with-value' : '',\n                }, [\n                    m('input.FormControl', {\n                        type: 'text',\n                        value: this.getConfig('title'),\n                        onchange: withAttr('value', this.setConfig('title')),\n                        disabled: this.disabled,\n                    }),\n                    m('label', app.translator.trans(translationPrefix + 'title')),\n                ]),\n                Select.component({\n                    value: this.getConfig('type'),\n                    options: typeOptions,\n                    //TODO: shouldn't keep min/max, shouldn't keep key if there are existing submissions\n                    onchange: this.setConfig('type'),\n                    disabled: this.disabled,\n                }),\n            ]),\n            whitelistedProperties.indexOf('description') === -1 ? null : m('.Form-group', m('.FormulaireInputWithLabel', {\n                className: this.getConfig('description') ? 'FormulaireInputWithLabel--with-value' : '',\n            }, [\n                m('textarea.FormControl', {\n                    value: this.getConfig('description'),\n                    onchange: withAttr('value', this.setConfig('description')),\n                    disabled: this.disabled,\n                }),\n                m('label', app.translator.trans(translationPrefix + 'description')),\n            ])),\n            this.configure(),\n            this.expertMode && whitelistedProperties.indexOf('key') !== -1 ? [\n                m('.Form-group', m('.FormulaireInputWithLabel', {\n                    className: this.getConfig('key') ? 'FormulaireInputWithLabel--with-value' : '',\n                }, [\n                    m('input.FormControl', {\n                        type: 'text',\n                        value: this.getConfig('key'),\n                        onchange: withAttr('value', this.setConfig('key')),\n                        disabled: this.disabled,\n                    }),\n                    m('label', app.translator.trans(translationPrefix + 'key')),\n                ])),\n                // Only show permissions for fields with a key. Otherwise it means it can't be filled anyway\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'fill-permission')),\n                    PermissionDropdown.component({\n                        groupIds: this.getConfig('fillGroupIds', null),\n                        onchange: this.setConfig('fillGroupIds'),\n                    }),\n                ]),\n            ] : null,\n            m('.Form-group', [\n                whitelistedProperties.indexOf('required') === -1 ? null : Switch.component({\n                    state: this.getConfig('required', false),\n                    onchange: this.setConfig('required'),\n                    disabled: this.disabled,\n                }, app.translator.trans(translationPrefix + 'required')),\n                ' ',\n                Button.component({\n                    onclick: this.onduplicate.bind(this),\n                    className: 'Button Button--icon',\n                    icon: 'fas fa-clone',\n                    disabled: this.disabled,\n                    title: app.translator.trans(translationPrefix + 'duplicate'),\n                }),\n                ' ',\n                Button.component({\n                    onclick: this.ondelete.bind(this),\n                    className: 'Button Button--icon',\n                    icon: 'fas fa-trash',\n                    disabled: this.disabled,\n                    title: app.translator.trans(translationPrefix + 'delete'),\n                }),\n            ]),\n        ]);\n    }\n\n    choiceView(renderLabelAndInput: (checked: boolean, onchange: () => void, disabled: boolean, key: string, children: Children) => Children, display: boolean, radio: boolean = false) {\n        const options: OptionDefinition[] = this.getConfig('options', []);\n\n        let values = this.getSubmission() as string[];\n\n        if (!Array.isArray(values)) {\n            values = [];\n        }\n\n        const allOptionKeys = options.map(option => option.key);\n\n        const otherValue = values.find(value => allOptionKeys.indexOf(value) === -1);\n        const hasOtherValue = typeof otherValue !== 'undefined';\n\n        return m('.FormulaireChoice-OptionGroup', {\n            className: radio ? 'FormulaireChoice--radio' : 'FormulaireChoice--checkbox',\n        }, [\n            options.map(option => {\n                const checkedIndex = values.indexOf(option.key as string);\n                const checked = checkedIndex !== -1;\n\n                return m('.FormulaireChoice-Option', renderLabelAndInput(checked, () => {\n                    if (checked) {\n                        this.setSubmission(values.filter(value => value !== option.key));\n                    } else if (radio) {\n                        this.setSubmission([\n                            option.key,\n                        ]);\n                    } else {\n                        this.setSubmission([\n                            // Add new key at the top so it's easier to keep the \"other\" value at the end\n                            option.key,\n                            ...values,\n                        ]);\n                    }\n                }, this.isFillDisabled() || display, option.key as string, [\n                    ' ',\n                    option.title,\n                ]));\n            }),\n            (this.getConfig('other') && (!display || hasOtherValue)) ? (() => {\n                const otherOnChange = (value: string) => {\n                    const valuesWithoutOther = values.filter(value => allOptionKeys.indexOf(value) !== -1);\n\n                    this.setSubmission([\n                        ...valuesWithoutOther,\n                        value,\n                    ]);\n                };\n\n                return m('.FormulaireChoice-Option.FormulaireChoice--other', [\n                    renderLabelAndInput(hasOtherValue, () => {\n                        const valuesWithoutOther = values.filter(value => allOptionKeys.indexOf(value) !== -1);\n\n                        if (hasOtherValue) {\n                            this.setSubmission(valuesWithoutOther);\n                        } else {\n                            if (radio) {\n                                this.setSubmission([\n                                    '',\n                                ]);\n                            } else {\n                                this.setSubmission([\n                                    ...valuesWithoutOther,\n                                    '',\n                                ]);\n                            }\n\n                            const input = document.getElementById(this.uniqueFieldId() + '_other');\n\n                            if (input) {\n                                input.focus();\n                            }\n                        }\n                    }, this.isFillDisabled() || display, '___other', [\n                        ' ',\n                        app.translator.trans('kilowhat-formulaire.forum.choice.other-label'),\n                        ' ',\n                    ]),\n                    display ? m('span', otherValue) : m('input.FormControl', {\n                        type: 'text',\n                        id: this.uniqueFieldId() + '_other',\n                        placeholder: app.translator.trans('kilowhat-formulaire.forum.choice.other-placeholder'),\n                        value: otherValue,\n                        onchange: withAttr('value', otherOnChange),\n                        onclick: () => {\n                            // When focusing on the field by clicking, we want to immediately show it as checked\n                            // like it does if you click on the \"Other\" label\n                            if (!hasOtherValue) {\n                                otherOnChange('');\n                            }\n                        },\n                    }),\n                ]);\n            })() : null,\n        ]);\n    }\n\n    abstract fill(): Children\n\n    fillView(): Children {\n        const title = this.getConfig('title');\n        const description = this.getConfig('description');\n        const validationErrors = this.validationErrorsForThisField();\n\n        //TODO: no background error color for \"items\" type (that would show for any child error)\n        return m(FormGroup, {\n            validationErrors,\n            label: m('label', {\n                for: this.uniqueFieldId(),\n            }, [\n                title ? title : m('em', app.translator.trans(translationPrefix + 'missing-title')),\n                this.getConfig('required', false) ? m('span.FormulaireRequired', ' *') : null,\n            ]),\n            description,\n        }, this.fill());\n    }\n\n    display(): Children {\n        const submission = this.getSubmission();\n\n        let hasSubmission = !!submission;\n\n        // We shouldn't be rendering array values here but this method is used as the default for Select\n        // so we just need to handle the empty array as no answer\n        if (Array.isArray(submission)) {\n            hasSubmission = submission.length > 0;\n        }\n\n        return m('p', hasSubmission ? submission : m('em', app.translator.trans(translationPrefix + 'no-answer')));\n    }\n\n    displayView(): Children {\n        const title = this.getConfig('title');\n\n        return m('dl.Formulaire-field-display', [\n            m('dt', [\n                title ? title : m('em', app.translator.trans(translationPrefix + 'missing-title')),\n            ]),\n            m('dd', this.display()),\n        ]);\n    }\n\n    optionsRule() {\n        // We don't need to, and can't actually deep clone the object\n        // Because the way Sortable works it will always work with the original onsort callback\n        let options: OptionDefinition[] = this.getConfig('options', []);\n\n        if (!Array.isArray(options)) {\n            console.warn('Invalid options', options);\n            options = [];\n        }\n\n        const showNewLine = !options.length || options[options.length - 1].title !== '';\n\n        return m('.Form-group', m('table.FormulaireItemsTable', [\n            this.expertMode ? m('thead', [\n                m('th'),\n                m('th', app.translator.trans('kilowhat-formulaire.forum.options-editor.columns.title')),\n                m('th', app.translator.trans('kilowhat-formulaire.forum.options-editor.columns.key')),\n                m('th'),\n            ]) : null,\n            m(Sortable, {\n                onsort: (origin: number, destination: number) => {\n                    options.splice(destination, 0, options.splice(origin, 1)[0]);\n                    this.setConfig('options')(options);\n                },\n                containerTag: 'tbody',\n                placeholderTag: 'tr',\n            }, options.map((option, index) => m('tr', {\n                key: 'item' + index, // Just so Sortable can work\n            }, [\n                m(SortableHandle, {\n                    elementTag: 'td',\n                    className: 'FormulaireItemsHandle',\n                }),\n                m('td', m('input.FormControl', {\n                    type: 'text',\n                    value: option.title,\n                    onchange: withAttr('value', (value: string) => {\n                        option.title = value;\n                        this.setConfig('options')(options);\n                    }),\n                })),\n                this.expertMode ? m('td', m('input.FormControl', {\n                    type: 'text',\n                    value: option.key,\n                    onchange: withAttr('value', (value: string) => {\n                        option.key = value;\n                        this.setConfig('options')(options);\n                    }),\n                })) : null,\n                m('td', Button.component({\n                    onclick: () => {\n                        options.splice(index, 1);\n                        this.setConfig('options')(options);\n                    },\n                    className: 'Button Button--icon',\n                    icon: 'fas fa-trash',\n                    disabled: this.isFillDisabled(),\n                    title: app.translator.trans('kilowhat-formulaire.forum.options-editor.remove'),\n                }))\n            ]))),\n            showNewLine ? m('tbody', m('tr', [\n                m('td'),\n                m('td', m('input.FormControl', {\n                    type: 'text',\n                    value: '',\n                    onchange: withAttr('value', (value: string) => {\n                        options.push({\n                            title: value,\n                        });\n                        this.setConfig('options')(options);\n                    }),\n                    placeholder: app.translator.trans('kilowhat-formulaire.forum.options-editor.new-placeholder'),\n                })),\n                m('td'),\n            ])) : null,\n        ]));\n    }\n\n    otherRule() {\n        return m('.Form-group', Switch.component({\n            state: this.getConfig('other', false),\n            onchange: this.setConfig('other'),\n            disabled: this.disabled,\n        }, app.translator.trans('kilowhat-formulaire.forum.template-editor.other')));\n    }\n\n    minMaxRules(type = 'number') {\n        return m('.Form-group', [\n            m('.FormulaireInputWithLabel', {\n                className: this.getConfig('min') ? 'FormulaireInputWithLabel--with-value' : '',\n            }, [\n                m('input.FormControl', {\n                    type,\n                    step: type === 'number' ? 1 : undefined,\n                    min: type === 'number' ? 0 : undefined,\n                    value: this.getConfig('min'),\n                    onchange: withAttr('value', (value: any) => {\n                        if (type === 'number' && value) {\n                            value = parseInt(value);\n                        }\n\n                        this.setConfig('min')(value);\n                    }),\n                    disabled: this.disabled,\n                }),\n                m('label', app.translator.trans(translationPrefix + 'min')),\n            ]),\n            m('.FormulaireInputWithLabel', {\n                className: this.getConfig('max') ? 'FormulaireInputWithLabel--with-value' : '',\n            }, [\n                m('input.FormControl', {\n                    type,\n                    step: type === 'number' ? 1 : undefined,\n                    min: type === 'number' ? 0 : undefined,\n                    value: this.getConfig('max'),\n                    onchange: withAttr('value', (value: any) => {\n                        if (type === 'number' && value) {\n                            value = parseInt(value);\n                        }\n\n                        this.setConfig('max')(value);\n                    }),\n                    disabled: this.disabled,\n                }),\n                m('label', app.translator.trans(translationPrefix + 'max')),\n            ]),\n        ]);\n    }\n\n    isFillDisabled() {\n        return this.disabled || this.getConfig('cannotFill');\n    }\n\n    validationErrorsForThisField(): string[] | undefined {\n        const theKeyInValidationErrorTree = this.validationErrors[this.getConfig('key')];\n\n        return theKeyInValidationErrorTree?.errors;\n    }\n}\n","import app from 'flarum/forum/app';\nimport Switch from 'flarum/common/components/Switch';\nimport icon from 'flarum/common/helpers/icon';\nimport Field from './Field';\n\nexport default class Radio extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'options',\n            'other',\n            'min',\n            'max',\n        ]);\n    }\n\n    configure() {\n        return [\n            this.optionsRule(),\n            this.otherRule(),\n            this.minMaxRules(),\n        ];\n    }\n\n    fill(display: boolean = false) {\n        return this.choiceView((checked, onchange, disabled, key, children) => {\n            const style = app.forum.attribute<string>('formulaireCheckboxStyle');\n\n            const isFA = style && style.substr(0, 2) === 'fa';\n\n            if (style === 'switch') {\n                return Switch.component({\n                    state: checked,\n                    onchange,\n                    disabled,\n                }, children);\n            }\n            return m('label', {\n                className: isFA ? 'FormulaireFAControl' : undefined,\n            }, [\n                m('input', {\n                    type: 'checkbox',\n                    checked,\n                    onchange,\n                    disabled,\n                }),\n                // The FontAwesome style will be called one of `fas-square`, `fas-circle`, `far-square`, `far-circle`\n                isFA ? icon('fa' + style.substr(2, 1) + ' fa-' + (checked ? 'check-' : '') + style.substr(4)) : null,\n                children,\n            ]);\n        }, display);\n    }\n\n    display() {\n        return this.fill(true);\n    }\n}\n","import {ClassComponent, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport extractText from 'flarum/common/utils/extractText';\n\nexport default class RichTextField implements ClassComponent<any> {\n    updateInterval: number = 0\n\n    oncreate(vnode: VnodeDOM<any, this>) {\n        // Similar to the post preview, refresh every 50ms if the content has changed\n        let preview: string;\n        this.updateInterval = setInterval(() => {\n            const content = (vnode.dom.querySelector('textarea') as HTMLElement as HTMLInputElement).value;\n\n            if (preview === content) return;\n\n            preview = content;\n\n            if (preview) {\n                s9e.TextFormatter.preview(preview, vnode.dom.querySelector('.js-preview'));\n            } else {\n                const placeholder = document.createElement('P');\n                placeholder.className = 'FormulaireRichPlaceholder';\n                placeholder.innerText = extractText(app.translator.trans('kilowhat-formulaire.forum.rich-text.preview-placeholder'));\n                const previewElement = vnode.dom.querySelector('.js-preview') as HTMLElement;\n                previewElement.innerHTML = '';\n                previewElement.appendChild(placeholder);\n            }\n        }, 50) as any;\n    }\n\n    onremove() {\n        clearInterval(this.updateInterval);\n    }\n\n    view(vnode: VnodeDOM<any, this>) {\n        return m('.FormulaireRich', [\n            m('.FormulaireRichPreview.js-preview', {\n                onclick: (event: Event) => {\n                    event.preventDefault();\n                    (vnode.dom.querySelector('textarea') as HTMLElement as HTMLInputElement).focus();\n                },\n            }),\n            m('textarea.FormControl', vnode.attrs),\n        ]);\n    }\n}\n","import withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\nimport RichTextField from '../components/RichTextField';\nimport {FieldTemplate} from '../models/JsonTypes';\n\nexport default class Content extends Field {\n    whiteListConfigProperties(): (keyof FieldTemplate)[] {\n        return [\n            'content',\n        ];\n    }\n\n    configure() {\n        return m('.Form-group', m(RichTextField, {\n            value: this.getConfig('content'),\n            onchange: withAttr('value', this.setConfig('content')),\n            disabled: this.disabled,\n        }));\n    }\n\n    fill() {\n        // Not used since we override fillView() but it's an abstract method that has to be implemented\n        return null;\n    }\n\n    fillView() {\n        return m('div', m.trust(this.getConfig('contentHtml')));\n    }\n\n    displayView() {\n        return null;//TODO: as option?\n    }\n}\n","import withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\n\nexport default class Date extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'min',\n            'max',\n        ]);\n    }\n\n    configure() {\n        return this.minMaxRules('date');\n    }\n\n    fill() {\n        const attrs: any = {\n            type: 'date',\n            id: this.uniqueFieldId(),\n            className: this.validationErrorsForThisField() ? 'in-error' : '',\n            value: this.getSubmission(),\n            onchange: withAttr('value', this.setSubmission.bind(this)),\n            disabled: this.isFillDisabled(),\n        };\n\n        if (this.getConfig('min')) {\n            attrs.min = this.getConfig('min');\n        }\n\n        if (this.getConfig('max')) {\n            attrs.max = this.getConfig('max');\n        }\n\n        return m('input.FormControl', attrs);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Field from './Field';\nimport FieldList from './FieldList';\nimport typeMap from './typeMap';\nimport ValidationErrors from '../components/ValidationErrors';\nimport Sortable from '../components/Sortable';\nimport SortableHandle from '../components/SortableHandle';\nimport {FormTemplate} from '../models/JsonTypes';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.items-editor.';\n\nexport default class Items extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'fields',\n            'min',\n            'max',\n        ]);\n    }\n\n    configure() {\n        // We cannot use the validationErrorsForThisField() helper here because we need the tree with nested errors as well\n        const validationErrors = this.validationErrors[this.getConfig('key')] || {};\n\n        const list = new FieldList({\n            configs: this.getConfig('fields'),\n            onchange: () => {\n                this.onchange();\n            },\n            disabled: this.disabled,\n            validationErrors,\n            depth: this.depth + 1,\n            expertMode: this.expertMode,\n        });\n\n        return m('.FormulaireConfigurationSubFields', [\n            m(ValidationErrors, {\n                errors: validationErrors, // The .errors key will automatically be retrieved by ValidationErrors\n            }),\n            this.minMaxRules(),\n            list.configureView(),\n        ]);\n    }\n\n    fill(display = false) {\n        const configs: FormTemplate = this.getConfig('fields');\n\n        // If no submission exists in the data, we need to create a new array first\n        // This is important because we must be able to edit the array that's in the submissions variable via reference\n        // Additionally we don't use this.setSubmission() in order to not trigger an onchange() event\n        if (!this.submission[this.getConfig('key')]) {\n            this.submission[this.getConfig('key')] = {\n                value: [],\n            };\n        }\n\n        const submissions = this.getSubmission();\n\n        if (submissions.length === 0) {\n            // Insert as many empty rows as necessary for the minimum required\n            for (let i = 0; i < this.getConfig('min', 0); i++) {\n                submissions.push({});\n            }\n        }\n\n        const validationErrors = this.validationErrors[this.getConfig('key')] || {};\n\n        //TODO: show the errors for this field\n\n        return m('table', {\n            className: display ? 'FormulaireDataTable' : 'FormulaireItemsTable',\n        }, [\n            m('thead', m('tr', [\n                display ? null : m('th'),\n                configs.map(config => {\n                    const field = new typeMap[config.type]({\n                        config,\n                    });\n\n                    const title = field.getConfig('title');\n                    const description = field.getConfig('description');\n\n                    return m('th', [\n                        m('label', [\n                            title ? title : app.translator.trans('kilowhat-formulaire.forum.template-editor.missing-title'),\n                            !display && field.getConfig('required', false) ? m('span.FormulaireRequired', ' *') : null,\n                        ]),\n                        !display && description ? m('p', description) : null,\n                    ]);\n                }),\n                display ? null : m('th'),\n            ])),\n            m(Sortable, {\n                onsort: (origin: number, destination: number) => {\n                    submissions.splice(destination, 0, submissions.splice(origin, 1)[0]);\n                    this.onchange();\n                },\n                disabled: this.isFillDisabled(),\n                containerTag: 'tbody',\n                placeholderTag: 'tr',\n            }, submissions.map((submission: any, index: number) => {\n                const validationErrorsForThisRow = validationErrors[index] || {};\n\n                return m('tr', {\n                    key: 'item' + index, // Just so Sortable can work\n                }, [\n                    display ? null : m(SortableHandle, {\n                        elementTag: 'td',\n                        className: 'FormulaireItemsHandle',\n                        disabled: this.isFillDisabled(),\n                    }),\n                    configs.map(config => {\n                        const field = new typeMap[config.type]({\n                            config,\n                            submission,\n                            uploader: this.uploader,\n                            onchange: () => {\n                                this.onchange();\n                            },\n                            disabled: this.isFillDisabled(),\n                            validationErrors: validationErrorsForThisRow,\n                            depth: this.depth + 1,\n                        });\n\n                        return m('td', [\n                            display ? field.display() : field.fill(),\n                            m(ValidationErrors, {\n                                errors: validationErrorsForThisRow[config.key || ''],\n                            }),\n                        ]);\n                    }),\n                    display ? null : m('td', Button.component({\n                        onclick: () => {\n                            submissions.splice(index, 1);\n                            this.onchange();\n                        },\n                        className: 'Button Button--icon',\n                        icon: 'fas fa-trash',\n                        disabled: this.isFillDisabled(),\n                        title: app.translator.trans(translationPrefix + 'remove'),\n                    })),\n                ]);\n            })),\n            display ? null : m('tbody', m('tr', [\n                m('td'),\n                m('td', {\n                    colspan: configs.length,\n                }, Button.component({\n                    onclick: () => {\n                        submissions.push({});\n                        this.onchange();\n                    },\n                    className: 'Button Button--block',\n                    disabled: this.isFillDisabled() || (this.getConfig('max', 0) && submissions.length >= this.getConfig('max', '')),\n                }, app.translator.trans(translationPrefix + 'add'))),\n                m('td'),\n            ])),\n        ]);\n    }\n\n    display() {\n        return this.fill(true);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Switch from 'flarum/common/components/Switch';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\nimport RichTextField from '../components/RichTextField';\n\nexport default class LongAnswer extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'min',\n            'max',\n            'rich',\n        ]);\n    }\n\n    configure() {\n        return [\n            this.minMaxRules(),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.getConfig('rich', false),\n                    onchange: this.setConfig('rich'),\n                    disabled: this.disabled,\n                }, app.translator.trans('kilowhat-formulaire.forum.template-editor.rich')),\n            ]),\n        ];\n    }\n\n    fill() {\n        const attrs = {\n            id: this.uniqueFieldId(),\n            className: this.validationErrorsForThisField() ? 'in-error' : '',\n            value: this.getSubmission(),\n            oninput: withAttr('value', this.setSubmission.bind(this)),\n            disabled: this.isFillDisabled(),\n        };\n\n        return [\n            this.getConfig('rich') ? m(RichTextField, attrs) : m('textarea.FormControl', attrs),\n            this.getConfig('max') ? m('.FormulaireTextLength', [\n                m('span.FormulaireTextLengthValue', {\n                    className: this.getSubmission().length > this.getConfig('max') ? 'FormulaireTextLengthValueTooLong' : '',\n                }, this.getSubmission().length),\n                '/' + this.getConfig('max'),\n            ]) : null,\n        ];\n    }\n\n    display() {\n        if (this.getConfig('rich')) {\n            const html = this.getSubmission('', 'html');\n\n            if (html) {\n                return m('div', m.trust(html));\n            }\n        }\n\n        return super.display();\n    }\n}\n","import app from 'flarum/forum/app';\nimport Switch from 'flarum/common/components/Switch';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\n\nexport default class ShortAnswer extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'integer',\n            'min',\n            'max',\n        ]);\n    }\n\n    configure() {\n        return [\n            m('.Form-group', Switch.component({\n                state: this.getConfig('integer', false),\n                onchange: this.setConfig('integer'),\n                disabled: this.disabled,\n            }, app.translator.trans('kilowhat-formulaire.forum.template-editor.integer'))),\n            this.minMaxRules(),\n        ];\n    }\n\n    fill() {\n        const attrs: any = {\n            type: 'number',\n            step: this.getConfig('integer') ? 1 : 'any',\n            id: this.uniqueFieldId(),\n            className: this.validationErrorsForThisField() ? 'in-error' : '',\n            value: this.getSubmission(),\n            onchange: withAttr('value', this.setSubmission.bind(this)),\n            disabled: this.isFillDisabled(),\n        };\n\n        if (this.getConfig('min')) {\n            attrs.min = this.getConfig('min');\n        }\n\n        if (this.getConfig('max')) {\n            attrs.max = this.getConfig('max');\n        }\n\n        return m('input.FormControl', attrs);\n    }\n}\n","import app from 'flarum/forum/app';\nimport icon from 'flarum/common/helpers/icon';\nimport Field from './Field';\n\nexport default class Radio extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'options',\n            'other',\n        ]);\n    }\n\n    configure() {\n        return [\n            this.optionsRule(),\n            this.otherRule(),\n        ];\n    }\n\n    fill(display: boolean = false) {\n        return this.choiceView((checked, onchange, disabled, key, children) => {\n            const style = app.forum.attribute<string>('formulaireRadioStyle');\n\n            const isFA = style && style.substr(0, 2) === 'fa';\n\n            return m('label', {\n                className: isFA ? 'FormulaireFAControl' : undefined,\n            }, [\n                m('input', {\n                    type: 'radio',\n                    name: display ? undefined : this.uniqueFieldId(),\n                    value: display ? undefined : key,\n                    checked,\n                    onchange,\n                    disabled,\n                }),\n                isFA ? icon('fa' + style.substr(2, 1) + ' fa-' + (checked ? 'dot-' : '') + style.substr(4)) : null,\n                children,\n            ]);\n        }, display, true);\n    }\n\n    display() {\n        return this.fill(true);\n    }\n}\n","import app from 'flarum/forum/app';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport icon from 'flarum/common/helpers/icon';\nimport Field from './Field';\nimport {OptionDefinition} from '../models/JsonTypes';\n\nexport default class Select extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'options',\n        ]);\n    }\n\n    configure() {\n        return [\n            this.optionsRule(),\n        ];\n    }\n\n    fill() {\n        const options: OptionDefinition[] = this.getConfig('options', []);\n\n        let values = this.getSubmission();\n\n        const value = Array.isArray(values) && values.length ? values[0] : '';\n\n        return m('.Select', [\n            m('select.Select-input.FormControl', {\n                id: this.uniqueFieldId(),\n                onchange: withAttr('value', (value: string) => {\n                    if (value) {\n                        this.setSubmission([value]);\n                    } else {\n                        this.setSubmission([]);\n                    }\n                }),\n                value,\n                disabled: this.isFillDisabled(),\n            }, [\n                m('option', {\n                    value: '',\n                    hidden: !!this.getConfig('required'),\n                }, app.translator.trans('kilowhat-formulaire.forum.select.choose')),\n                options.map(option => m('option', {\n                    value: option.key,\n                }, option.title)),\n            ]),\n            icon('fas fa-sort', {className: 'Select-caret'}),\n        ]);\n    }\n\n    display() {\n        const options: OptionDefinition[] = this.getConfig('options', []);\n\n        let values = this.getSubmission();\n\n        if (Array.isArray(values) && values.length) {\n            const option = options.find(option => option.key === values[0]);\n\n            if (option) {\n                return m('p', option.title);\n            }\n        }\n\n        // Will display a custom answer or empty field\n        return super.display();\n    }\n}\n","import app from 'flarum/forum/app';\nimport Switch from 'flarum/common/components/Switch';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\n\nexport default class ShortAnswer extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'email',\n            'regex',\n        ]);\n    }\n\n    configure() {\n        return [\n            m('.Form-group', Switch.component({\n                state: this.getConfig('email', false),\n                onchange: this.setConfig('email'),\n                disabled: this.disabled,\n            }, app.translator.trans('kilowhat-formulaire.forum.template-editor.email'))),\n            m('.Form-group', m('.FormulaireInputWithLabel', {\n                className: this.getConfig('regex') ? 'FormulaireInputWithLabel--with-value' : '',\n            }, [\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.getConfig('regex'),\n                    onchange: withAttr('value', this.setConfig('regex')),\n                    disabled: this.disabled,\n                }),\n                m('label', app.translator.trans('kilowhat-formulaire.forum.template-editor.regex')),\n            ])),\n        ];\n    }\n\n    fill() {\n        return m('input.FormControl', {\n            type: this.getConfig('email', false) ? 'email' : 'text',\n            id: this.uniqueFieldId(),\n            className: this.validationErrorsForThisField() ? 'in-error' : '',\n            value: this.getSubmission(),\n            onchange: withAttr('value', this.setSubmission.bind(this)),\n            disabled: this.isFillDisabled(),\n        });\n    }\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Field from './Field';\nimport File from '../models/File';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.upload-editor.';\n\nexport default class Upload extends Field {\n    whiteListConfigProperties() {\n        return super.whiteListConfigProperties().concat([\n            'mime',\n            'min',\n            'max',\n        ]);\n    }\n\n    configure() {\n        return [\n            m('.Form-group', m('.FormulaireInputWithLabel', {\n                className: this.getConfig('mime') ? 'FormulaireInputWithLabel--with-value' : '',\n            }, [\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.getConfig('mime'),\n                    onchange: withAttr('value', this.setConfig('mime')),\n                    disabled: this.disabled,\n                }),\n                m('label', app.translator.trans('kilowhat-formulaire.forum.template-editor.mime')),\n            ])),\n            this.minMaxRules(),\n        ];\n    }\n\n    fill() {\n        const allowsMultiple = this.getConfig('max') !== 1;\n\n        const existingFiles = this.getSubmission([]);\n\n        return [\n            m('ul', existingFiles.map((id: string) => {\n                const file = app.store.getById<File>('formulaire-files', id);\n\n                return m('li', [\n                    file ? m('a', {\n                        href: file.url(),\n                        download: file.filename(),\n                    }, [\n                        file.filename(),\n                        file.humanSize() ? [' (', file.humanSize(), ')'] : null,\n                    ]) : id,\n                    ' ',\n                    existingFiles.length > this.getConfig('min') ? Button.component({\n                        onclick: () => {\n                            this.setSubmission(this.getSubmission([]).filter((thisId: string) => thisId !== id));\n                        },\n                        className: 'Button Button--icon',\n                        icon: 'fas fa-trash',\n                        disabled: this.isFillDisabled(),\n                        title: app.translator.trans(translationPrefix + 'remove'),\n                    }) : null,\n                ]);\n            })),\n            this.uploader?.uploading ? app.translator.trans(translationPrefix + 'uploading') : null,\n            m('input', {\n                type: 'file',\n                id: this.uniqueFieldId(),\n                onchange: (event: Event) => {\n                    this.uploader?.upload((event.target as HTMLInputElement).files, this.getConfig('key')).then(files => {\n                        let submission = JSON.parse(JSON.stringify(this.getSubmission([])));\n\n                        if (allowsMultiple) {\n                            files.forEach(file => {\n                                submission.push(file.id());\n                            });\n                        } else {\n                            // If multiple is now allowed, replace current file(s) with new file(s) (there should be only 1)\n                            submission = files.map(file => file.id());\n                        }\n\n                        this.setSubmission(submission);\n\n                        m.redraw();\n                    });\n                },\n                disabled: this.isFillDisabled(),\n                accept: this.getConfig('mime'),\n                multiple: allowsMultiple,\n            }),\n        ];\n    }\n\n    display() {\n        const existingFiles = this.getSubmission([]);\n\n        return [\n            m('ul', existingFiles.map((id: string) => {\n                const file = app.store.getById<File>('formulaire-files', id);\n\n                return m('li', [\n                    file ? m('a', {\n                        href: file.url(),\n                        download: file.filename(),\n                    }, [\n                        file.filename(),\n                        file.humanSize() ? [' (', file.humanSize(), ')'] : null,\n                    ]) : id,\n                ]);\n            })),\n        ];\n    }\n}\n","import Checkbox from './Checkbox';\nimport Content from './Content';\nimport Date from './Date';\nimport Items from './Items';\nimport LongAnswer from './LongAnswer';\nimport Number from './Number';\nimport Radio from './Radio';\nimport Select from './Select';\nimport ShortAnswer from './ShortAnswer';\nimport Upload from './Upload';\nimport {FieldType} from '../models/JsonTypes';\n\nconst map: { [key in FieldType]: any } = {\n    'checkbox': Checkbox,\n    'content': Content,\n    'date': Date,\n    'items': Items,\n    'long': LongAnswer,\n    'number': Number,\n    'radio': Radio,\n    'select': Select,\n    'short': ShortAnswer,\n    'upload': Upload,\n};\n\nexport default map;\n","import typeMap from './fields/typeMap';\nimport {FieldTemplate} from './models/JsonTypes';\nimport Field from './fields/Field';\n\nlet uniqueIncrement = 0;\n\nexport default function (config: FieldTemplate, wasDuplicated = false) {\n    // A unique value for each field in the UI, to assign Mithril keys\n    // It doesn't have to be the same on subsequent page loads\n    if (!config.unique || wasDuplicated) {\n        config.unique = ++uniqueIncrement + '';\n    }\n\n    if (wasDuplicated) {\n        // Remove key so the backend can generate a new unique ID\n        delete config.key;\n    }\n\n    const field: Field = new typeMap[config.type]({});\n\n    const whitelisted = ['unique', 'type', 'cannotFill', 'contentHtml'].concat(field.whiteListConfigProperties());\n\n    // Remove keys that might have persisted from a previous field type\n    (Object.keys(config) as (keyof FieldTemplate)[]).forEach((key) => {\n        if (whitelisted.indexOf(key) === -1) {\n            delete config[key];\n        }\n    });\n\n    if (config.type === 'items') {\n        if (!Array.isArray(config.fields)) {\n            config.fields = [];\n        }\n\n        if (config.fields.length === 0) {\n            config.fields.push({\n                type: 'short',\n            });\n        }\n    }\n\n    if (config.type === 'upload') {\n        if (!config.mime) {\n            config.mime = 'image/*';\n        }\n    }\n}\n","import {Children} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Sortable from '../components/Sortable';\nimport cleanFieldConfiguration from '../cleanFieldConfiguration';\nimport typeMap from './typeMap';\nimport Uploader from '../utils/Uploader';\nimport {\n    FieldTemplate,\n    SubmissionPayload,\n    SubmissionValidationErrors\n} from '../models/JsonTypes';\nimport Field from './Field';\n\ninterface FieldListOptions {\n    configs?: FieldTemplate[]\n    submission?: SubmissionPayload\n    uploader?: Uploader | null\n    onchange?: () => void\n    disabled?: boolean\n    validationErrors?: SubmissionValidationErrors\n    depth?: number\n    expertMode?: boolean\n}\n\nexport default class FieldList {\n    configs: FieldTemplate[]\n    submission: SubmissionPayload\n    uploader: Uploader | null\n    onchange: () => void\n    disabled: boolean\n    validationErrors: SubmissionValidationErrors\n    depth: number\n    expertMode: boolean\n\n    constructor({\n                    configs = [],\n                    submission = {},\n                    uploader = null,\n                    onchange = () => {\n                    },\n                    disabled = false,\n                    validationErrors = {},\n                    depth = 0,\n                    expertMode = false,\n                }: FieldListOptions) {\n        this.configs = configs;\n        this.submission = submission;\n        this.uploader = uploader;\n        this.onchange = onchange;\n        this.disabled = disabled;\n        this.validationErrors = validationErrors;\n        this.depth = depth;\n        this.expertMode = expertMode;\n    }\n\n    configureView(): Children {\n        return [\n            m(Sortable, {\n                onsort: (origin: number, destination: number) => {\n                    this.configs.splice(destination, 0, this.configs.splice(origin, 1)[0]);\n                    this.onchange();\n                },\n                disabled: this.disabled,\n            }, this.configs.map((config, index) => {\n                const field: Field = new typeMap[config.type]({\n                    config,\n                    uploader: this.uploader,\n                    onchange: () => {\n                        this.onchange();\n                    },\n                    onduplicate: () => {\n                        this.configs.splice(index + 1, 0, JSON.parse(JSON.stringify(config)));\n                        cleanFieldConfiguration(this.configs[index + 1], true);\n                        this.onchange();\n                    },\n                    ondelete: () => {\n                        this.configs.splice(index, 1);\n                        this.onchange();\n                    },\n                    disabled: this.disabled,\n                    validationErrors: this.validationErrors,\n                    depth: this.depth,\n                    expertMode: this.expertMode,\n                });\n\n                return field.configureView();\n            })),\n            Button.component({\n                className: 'Button Button--block',\n                onclick: () => {\n                    this.configs.push({\n                        type: 'short',\n                    });\n                    this.onchange();\n                },\n                disabled: this.disabled,\n            }, app.translator.trans('kilowhat-formulaire.forum.template-editor.add-field')),\n        ];\n    }\n\n    listView(display: boolean = false): Children {\n        return [\n            this.configs.map(config => {\n                const field = new typeMap[config.type]({\n                    config,\n                    submission: this.submission,\n                    uploader: this.uploader,\n                    onchange: () => {\n                        this.onchange();\n                    },\n                    disabled: this.disabled,\n                    validationErrors: this.validationErrors,\n                    depth: this.depth,\n                });\n\n                return display ? field.displayView() : field.fillView();\n            }),\n        ];\n    }\n}\n","export default class {\n    value: any;\n\n    // Will contain previous values, with the most recent at the beginning of the array\n    history: any[] = [];\n\n    // Will contain which previous value we rolled back to. 0 means we have not rolled back\n    historyIndex: number = 0;\n\n    constructor(value: any) {\n        this.value = JSON.parse(JSON.stringify(value));\n        this.save();\n    }\n\n    save() {\n        if (this.historyIndex > 0) {\n            this.history.splice(0, this.historyIndex);\n        }\n\n        this.history.unshift(JSON.parse(JSON.stringify(this.value)));\n        this.historyIndex = 0;\n    }\n\n    canUndo() {\n        return this.history.length > 1 && this.historyIndex < this.history.length - 1;\n    }\n\n    canRedo() {\n        return this.historyIndex > 0;\n    }\n\n    undo() {\n        if (!this.canUndo()) {\n            return;\n        }\n\n        this.value = this.history[++this.historyIndex];\n    }\n\n    redo() {\n        if (!this.canRedo()) {\n            return;\n        }\n\n        this.value = this.history[--this.historyIndex];\n    }\n\n    clear() {\n        this.history.splice(1);\n        this.historyIndex = 0;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/RequestError'];","import RequestError from 'flarum/common/utils/RequestError';\nimport {SubmissionValidationErrors} from '../models/JsonTypes';\n\n// We will use this value later in substr() to easily remove the start of the error pointer string\nconst IGNORE_FROM_POINTER_START = '/data/attributes/'.length;\n\nexport default function (error: RequestError) {\n    const errorTree = {};\n\n    error.response?.errors?.forEach(error => {\n        let lastLocationInTree: SubmissionValidationErrors = errorTree;\n\n        // Each error has a path in the form /data/attributes/firstlevelfield/secondlevelfield\n        // There could be any number of levels as we allow nesting fields in the forms\n        // We extract the key for each level\n        const keyPath: string[] = (error as any)?.source?.pointer?.substr(IGNORE_FROM_POINTER_START).split('/');\n\n        keyPath.forEach(key => {\n            if (lastLocationInTree[key]) {\n                // If the path already exists in the tree, we follow it\n                lastLocationInTree = lastLocationInTree[key];\n            } else {\n                // if it doesn't exist, we add a new object and follow that new object\n                const newLocation: SubmissionValidationErrors = {};\n                lastLocationInTree[key] = newLocation;\n                lastLocationInTree = newLocation;\n            }\n        });\n\n        // We cannot simply place the array of details at the given key, because both the parent and nested fields could have errors\n        // (example: invalid number of sub-items AND invalid formatting in a sub item field)\n        lastLocationInTree.errors = (Array.isArray(error.detail) ? error.detail : [error.detail]) as any;\n    });\n\n    return errorTree;\n}\n","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport RequestError from 'flarum/common/utils/RequestError';\nimport parseValidationError from '../utils/parseValidationError';\n\nexport default abstract class AbstractProcessingPage extends Page {\n    errorPage: string | null = null;\n    dirty: boolean = false;\n    loading: boolean = false;\n    savedAt: Date | null = null;\n    validationErrors: any = {};\n\n    pageLoadErrorHandler(error: any) {\n        switch (error.status) {\n            case 401:\n            case 403:\n                this.errorPage = 'denied';\n                break;\n            case 404:\n            case 410:\n                this.errorPage = 'notfound';\n                break;\n            default:\n                throw error;\n        }\n\n        m.redraw();\n    }\n\n    onerror(error: any) {\n        this.loading = false;\n\n        let wasHandled = false;\n\n        if (error.status === 422 && error.response.errors) {\n            wasHandled = true;\n\n            this.validationErrors = parseValidationError(error);\n        } else {\n            // This value is already reset explicitly when a request completes successfully\n            // However if a 422 error is followed by another error, the page would continue showing that the validation failed\n            // despite now facing a completely different error\n            this.validationErrors = {};\n        }\n\n        m.redraw();\n\n        if (!wasHandled) {\n            // Re-implementation of Flarum's Application.requestErrorDefaultHandler\n            if (error instanceof RequestError) {\n                if (app.forum.attribute('debug') && error.xhr) {\n                    const {method, url} = error.options;\n                    const {status = ''} = error.xhr;\n\n                    console.group(`${method} ${url} ${status}`);\n                    console.error(error);\n                    console.groupEnd();\n                }\n\n                if (error.alert) {\n                    app.alerts.show(error.alert, error.alert.content);\n                }\n            } else {\n                throw error;\n            }\n        }\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\n\ninterface ErrorPageAttrs {\n    error: string\n}\n\nexport default class ErrorPage implements ClassComponent<ErrorPageAttrs> {\n    view(vnode: Vnode<ErrorPageAttrs, this>) {\n        const {error} = vnode.attrs;\n\n        return m('div', [\n            m('h3', app.translator.trans('kilowhat-formulaire.forum.error-page.' + error + '-title')),\n            m('p', app.translator.trans('kilowhat-formulaire.forum.error-page.' + error + '-description')),\n        ]);\n    }\n}\n","import {Children, Vnode, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport AbstractProcessingPage from './AbstractProcessingPage';\nimport ErrorPage from '../components/ErrorPage';\nimport PageContainer from '../components/PageContainer';\nimport Form from '../models/Form';\n\nexport default abstract class AbstractFormPage extends AbstractProcessingPage {\n    form!: Form\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        const id = m.route.param('id');\n        const preloadedForm = app.preloadedApiDocument<Form>();\n\n        if (preloadedForm) {\n            this.show(preloadedForm);\n        } else {\n            //TODO: check if form is already preloaded by slug\n            const form = app.store.getById<Form>('formulaire-forms', id);\n\n            if (form) {\n                this.show(form);\n            } else {\n                app.store.find<Form>('formulaire/forms', id, {}, {\n                    errorHandler: this.pageLoadErrorHandler.bind(this),\n                }).then(form => {\n                    this.show(form);\n                    m.redraw();\n                });\n            }\n        }\n    }\n\n    onremove(vnode: VnodeDOM) {\n        super.onremove(vnode);\n\n        delete document.body.dataset.formulaireFormId;\n    }\n\n    show(form: Form) {\n        this.form = form;\n\n        // This data attribute isn't used by Formulaire, but is useful for user customization\n        document.body.dataset.formulaireFormId = form.id();\n    }\n\n    view(): Children {\n        if (this.errorPage) {\n            return m(PageContainer, m(ErrorPage, {\n                error: this.errorPage,\n            }));\n        }\n\n        if (!this.form) {\n            return m('.container', LoadingIndicator.component({className: 'LoadingIndicator--block'}));\n        }\n\n        return this.content(this.form);\n    }\n\n    abstract content(form: Form): Children\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport icon from 'flarum/common/helpers/icon';\nimport ValueHistory from '../utils/ValueHistory';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.save-controls.';\n\ninterface SaveControlsAttrs {\n    dirty?: boolean\n    loading?: boolean\n    savedAt?: Date | null\n    inError?: boolean\n    onsave?: () => void\n    history?: ValueHistory | null\n    floating?: boolean\n}\n\nexport default class SaveControls implements ClassComponent<SaveControlsAttrs> {\n    previouslyPromptedForUser: boolean = false\n    inCooldownPeriod: boolean = false\n    updateOverlayWidth!: () => void\n\n    view(vnode: Vnode<SaveControlsAttrs, this>) {\n        const {\n            dirty,\n            loading,\n            savedAt,\n            inError,\n            onsave, // Callback\n            history, // providing a ValueHistory object shows the undo/redo controls\n            floating, // Whether to enable the floating behavior\n        } = vnode.attrs;\n\n        // Prompt for user means whether the controls should be made clearly visible to the user\n        // if floating behavior is enabled, the controls will float when this value is true\n        let promptForUser: boolean = !!dirty;\n\n        if (history) {\n            promptForUser = promptForUser || history.canUndo() || history.canRedo();\n        }\n\n        // We don't want to hide the controls immediately after a save\n        // if the value just changed back to false, we apply a cooldown period during which it will continue to be active\n        if (this.previouslyPromptedForUser && !promptForUser) {\n            this.inCooldownPeriod = true;\n\n            setTimeout(() => {\n                this.inCooldownPeriod = false;\n                m.redraw();\n            }, 1000);\n        }\n        this.previouslyPromptedForUser = promptForUser;\n        promptForUser = promptForUser || this.inCooldownPeriod;\n\n        let message = null;\n\n        if (inError) {\n            message = m('span.in-error', [\n                icon('fas fa-exclamation-triangle'),\n                ' ',\n                app.translator.trans(translationPrefix + 'validation-errors'),\n            ]);\n        } else if (dirty) {\n            message = app.translator.trans(translationPrefix + 'unsaved-changes');\n        } else if (savedAt) {\n            message = m('span.success', [\n                icon('fas fa-check'),\n                ' ',\n                app.translator.trans(translationPrefix + 'saved-at', {\n                    ago: humanTime(savedAt),\n                }),\n            ]);\n        }\n\n        return m('.FormulaireSaveWrapper', m('.FormulaireSave', {\n            className: floating && promptForUser ? 'floating' : '',\n        }, [\n            m('.FormulaireSave-stretch', message),\n            history ? [\n                Button.component({\n                    onclick: () => {\n                        history.undo();\n                    },\n                    disabled: !history.canUndo() || loading,\n                    className: 'Button',\n                    icon: 'fas fa-undo',\n                }, app.translator.trans(translationPrefix + 'undo')),\n                Button.component({\n                    onclick: () => {\n                        history.redo();\n                    },\n                    disabled: !history.canRedo() || loading,\n                    className: 'Button',\n                    icon: 'fas fa-redo',\n                }, app.translator.trans(translationPrefix + 'redo')),\n            ] : null,\n            Button.component({\n                onclick: onsave,\n                disabled: !dirty || loading,\n                className: 'Button Button--primary FormulairePrimaryButton',\n                icon: 'fas fa-save',\n                loading,\n            }, app.translator.trans(translationPrefix + 'save')),\n        ]));\n    }\n\n    oncreate(vnode: VnodeDOM<SaveControlsAttrs, this>) {\n        this.updateOverlayWidth = () => {\n            const overlay = vnode.dom.querySelector('.FormulaireSave') as HTMLElement;\n            const rect = vnode.dom.getBoundingClientRect();\n\n            if (overlay && rect.width > 0) {\n                overlay.style.width = rect.width + 'px';\n            }\n        };\n\n        // When used inside of a modal, the code triggers while the modal is still animating and the width is wrong\n        // In that case we'll delay the code so it calculates the width once we are certain the modal is open\n        // The user shouldn't notice anything because before any width is set it should be non-floating and 100% width\n        // Only if the modal open while the form is in unsaved state could the unset width be noticed until this code runs\n        // At the time of writing all modals use floating:false so there's absolutely no way to notice\n        // we could even skip calculating the width entirely when floating is false but we might use it in the future\n        if (vnode.dom.closest('.Modal')) {\n            setTimeout(this.updateOverlayWidth, 300);\n        } else {\n            this.updateOverlayWidth();\n        }\n\n        window.addEventListener('resize', this.updateOverlayWidth);\n    }\n\n    onremove() {\n        window.removeEventListener('resize', this.updateOverlayWidth);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Form from '../models/Form';\n\ninterface FormTitleAttrs {\n    form: Form\n}\n\nexport default class FormTitle implements ClassComponent<FormTitleAttrs> {\n    view(vnode: Vnode<FormTitleAttrs, this>) {\n        const {form} = vnode.attrs;\n        const badges = form.badges().toArray();\n\n        return m('h2.App-titleControl', [\n            form.title(),\n            ' ',\n            badges.length ? m('ul.FormulaireDataTable-badges.badges', listItems(badges)) : null,\n        ]);\n    }\n}\n","import app from 'flarum/forum/app';\nimport {ApiPayloadPlural} from 'flarum/common/Store';\nimport Form from '../models/Form';\nimport File from '../models/File';\n\nexport default class Uploader {\n    form: Form\n    uploading: boolean = false\n\n    constructor(form: Form) {\n        this.form = form;\n    }\n\n    upload(files: FileList | null, key: string): Promise<File[]> {\n        if (!files) {\n            return Promise.reject();\n        }\n\n        const body = new FormData();\n\n        for (let i = 0; i < files.length; i++) {\n            body.append(key + '[]', files[i]);\n        }\n\n        this.uploading = true;\n        m.redraw();\n\n        return new Promise((resolve, reject) => {\n            app.request<ApiPayloadPlural>({\n                method: 'POST',\n                url: app.forum.attribute('apiUrl') + this.form.apiEndpoint() + '/upload',\n                serialize: (raw: any) => raw,\n                body,\n            }).then(result => {\n                this.uploading = false;\n                m.redraw();\n\n                resolve(app.store.pushPayload<File[]>(result));\n            }).catch(err => {\n                this.uploading = false;\n                m.redraw();\n\n                reject(err);\n            });\n        });\n    }\n}\n","import app from 'flarum/forum/app';\n\nexport default function (name: string): boolean {\n    return (app.forum.attribute<string[]>('formulaireHorizontalLayout') || []).indexOf(name) !== -1;\n}\n","import {Children, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport FieldList from '../fields/FieldList';\nimport ValueHistory from '../utils/ValueHistory';\nimport AbstractFormPage from './AbstractFormPage';\nimport SaveControls from '../components/SaveControls';\nimport FormTitle from '../components/FormTitle';\nimport PageContainer from '../components/PageContainer';\nimport Uploader from '../utils/Uploader';\nimport Submission from '../models/Submission';\nimport Form from '../models/Form';\nimport {formulaireFormShow, formulaireSubmission} from '../routes';\nimport isHorizontalLayout from '../utils/isHorizontalLayout';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.submission.';\n\nexport default class FormShowPage extends AbstractFormPage {\n    history!: ValueHistory\n    uploader!: Uploader\n    submission: Submission | null = null // Set once the form has been submitted\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.bodyClass = 'FormulaireFormShowPage';\n    }\n\n    show(form: Form) {\n        super.show(form);\n\n        this.history = new ValueHistory({});\n        this.uploader = new Uploader(form);\n    }\n\n    content(form: Form): Children {\n        // TODO: show form for previews even if cannot submit\n        if (!form.attribute('canSubmit')) {\n            return m(PageContainer, {\n                showSideNav: app.forum.attribute('formulaireShowSideNavOnSubmission'),\n                narrow: true,\n                noTheme: true,\n            }, [\n                m(FormTitle, {\n                    form,\n                }),\n                m('p', app.translator.trans(translationPrefix + (form.attribute('isFull') ? 'form-full' : 'form-closed'))),\n            ]);\n        }\n\n        if (this.submission) {\n            const message = form.confirmationMessageHtml();\n            return m(PageContainer, {\n                showSideNav: app.forum.attribute('formulaireShowSideNavOnSubmission'),\n                narrow: true,\n                noTheme: true,\n            }, [\n                m(FormTitle, {\n                    form,\n                }),\n                message ? m('div', m.trust(message)) : m('p', app.translator.trans(translationPrefix + 'submitted-successfully')),\n                this.submission.attribute('canEdit') ? LinkButton.component({\n                    className: 'Button',\n                    href: formulaireSubmission(this.submission),\n                }, app.translator.trans(translationPrefix + 'edit-submission')) : null,\n                LinkButton.component({\n                    className: 'Button',\n                    href: formulaireFormShow(form),\n                }, app.translator.trans(translationPrefix + 'submit-other')),\n            ]);\n        }\n\n        const list = new FieldList({\n            configs: form.template()!,\n            submission: this.history.value,\n            uploader: this.uploader,\n            onchange: () => {\n                this.history.save();\n                this.dirty = true;\n            },\n            disabled: this.loading || this.uploader.uploading,\n            validationErrors: this.validationErrors,\n        });\n\n        return m(PageContainer, {\n            showSideNav: app.forum.attribute('formulaireShowSideNavOnSubmission'),\n            narrow: true,\n            noTheme: true,\n        }, [\n            m(FormTitle, {\n                form,\n            }),\n            m('div', {\n                className: isHorizontalLayout('StandaloneEdit') ? 'Formulaire-horizontal-layout' : '',\n            }, list.listView()),\n            m(SaveControls, {\n                dirty: this.dirty,\n                loading: this.loading,\n                savedAt: this.savedAt,\n                inError: Object.keys(this.validationErrors).length > 0,\n                history: app.forum.attribute('formulaireShowHistoryControls') ? this.history : null,\n                onsave: () => {\n                    this.loading = true;\n\n                    app.request<ApiPayloadSingle>({\n                        method: 'POST',\n                        url: app.forum.attribute('apiUrl') + form.apiEndpoint() + '/submissions',\n                        body: {\n                            data: {\n                                attributes: {\n                                    data: this.history.value,\n                                },\n                            },\n                        },\n                        errorHandler: this.onerror.bind(this),\n                    }).then(data => {\n                        this.submission = app.store.pushPayload<Submission>(data);\n                        this.loading = false;\n                        this.dirty = false;\n                        this.savedAt = new Date();\n                        this.validationErrors = {};\n                        this.history.clear();\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n            }),\n        ]);\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport FormGroup from '../components/FormGroup';\nimport RichTextField from '../components/RichTextField';\nimport {AutomaticDiscussionOptions} from '../models/JsonTypes';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.auto-discussion-options-modal.';\n\ninterface AutomaticDiscussionOptionsModalAttrs extends IInternalModalAttrs {\n    options: AutomaticDiscussionOptions\n    onchange: (options: AutomaticDiscussionOptions) => void\n}\n\nexport default class AutomaticDiscussionOptionsModal extends Modal<AutomaticDiscussionOptionsModalAttrs> {\n    options!: AutomaticDiscussionOptions\n\n    oninit(vnode: Vnode<AutomaticDiscussionOptionsModalAttrs, this>) {\n        super.oninit(vnode);\n\n        this.options = JSON.parse(JSON.stringify(this.attrs.options));\n    }\n\n    className() {\n        return 'FormulaireModal FormulaireTheme';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', m('p', app.translator.trans(translationPrefix + 'introduction', {\n                // Those aren't really translation parameters but it seems Flarum now removes them\n                // so we add them back as parameter values\n                ' title ': m('code', '{ title }'),\n                ' content ': m('code', '{ content }'),\n            }))),\n            m(FormGroup, {\n                label: m('label', app.translator.trans(translationPrefix + 'field.title')),\n            }, m('input.FormControl', {\n                type: 'text',\n                value: this.options.title || '',\n                oninput: withAttr('value', (value: string) => {\n                    this.options.title = value;\n                }),\n            })),\n            m(FormGroup, {\n                label: m('label', app.translator.trans(translationPrefix + 'field.tags')),\n                description: app.translator.trans(translationPrefix + 'field.tags-help'),\n            }, m('input.FormControl', {\n                type: 'text',\n                value: this.options.tags || '',\n                oninput: withAttr('value', (value: string) => {\n                    this.options.tags = value;\n                }),\n            })),\n            m(FormGroup, {\n                label: m('label', app.translator.trans(translationPrefix + 'field.content')),\n            }, m(RichTextField, {\n                value: this.options.content || '',\n                onchange: withAttr('value', (value: string) => {\n                    this.options.content = value;\n                }),\n            })),\n            m('.Form-group', Button.component({\n                type: 'submit',\n                className: 'Button Button--primary',\n            }, app.translator.trans(translationPrefix + 'submit'))),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.attrs.onchange(this.options);\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport FormGroup from '../components/FormGroup';\nimport RichTextField from '../components/RichTextField';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.confirmation-email-options-modal.';\n\ninterface ConfirmationEmailOptionsModalAttrs extends IInternalModalAttrs {\n    title: string\n    message: string\n    onchange: (title: string, message: string) => void\n}\n\nexport default class ConfirmationEmailOptionsModal extends Modal<ConfirmationEmailOptionsModalAttrs> {\n    titleValue!: string\n    message!: string\n\n    oninit(vnode: Vnode<ConfirmationEmailOptionsModalAttrs, this>) {\n        super.oninit(vnode);\n\n        this.titleValue = this.attrs.title;\n        this.message = this.attrs.message;\n    }\n\n    className() {\n        return 'FormulaireModal FormulaireTheme';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m(FormGroup, {\n                label: m('label', app.translator.trans(translationPrefix + 'field.title')),\n            }, m('input.FormControl', {\n                type: 'text',\n                value: this.titleValue,\n                oninput: withAttr('value', (value: string) => {\n                    this.titleValue = value;\n                }),\n            })),\n            m(FormGroup, {\n                label: m('label', app.translator.trans(translationPrefix + 'field.message')),\n            }, m(RichTextField, {\n                value: this.message,\n                onchange: withAttr('value', (value: string) => {\n                    this.message = value;\n                }),\n            })),\n            m('.Form-group', Button.component({\n                type: 'submit',\n                className: 'Button Button--primary',\n            }, app.translator.trans(translationPrefix + 'submit'))),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.attrs.onchange(this.titleValue, this.message);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport FormGroup from './FormGroup';\n\ninterface DiscreetInputAttrs {\n    value: string\n    editable?: boolean\n    placeholder: string\n    title: string\n    validationErrors: any\n    onchange: (value: string) => void\n}\n\nexport default class DiscreetInput implements ClassComponent<DiscreetInputAttrs> {\n    view(vnode: Vnode<DiscreetInputAttrs, this>) {\n        if (vnode.attrs.editable) {\n            const returnVnode = m('input.FormulaireDiscreetInput', {\n                value: vnode.attrs.value,\n                onchange: withAttr('value', (value: string) => {\n                    vnode.attrs.onchange(value);\n                }),\n                placeholder: vnode.attrs.placeholder,\n                title: vnode.attrs.title,\n            });\n\n            // Wrap into the form-group to re-use the error message logic\n            // Only do it when there's actually an error as this breaks the layout\n            if (vnode.attrs.validationErrors) {\n                return m(FormGroup, {\n                    validationErrors: vnode.attrs.validationErrors,\n                }, returnVnode) as Vnode<any>;\n            }\n\n            return returnVnode;\n        }\n\n        return m('span.FormulaireDiscreetInput', {\n            title: vnode.attrs.title,\n        }, vnode.attrs.value || vnode.attrs.placeholder);\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport submissionCount from '../utils/submissionCount';\nimport DiscreetInput from './DiscreetInput';\nimport Form from '../models/Form';\nimport {formulaireSubmissionIndex} from '../routes';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.form-edit-header.';\n\nconst TABS = [\n    {\n        key: 'template',\n        icon: 'fas fa-poll-h',\n    },\n    {\n        key: 'placement',\n        icon: 'fas fa-puzzle-piece',\n    },\n    {\n        key: 'access',\n        icon: 'fas fa-user-shield',\n    },\n    {\n        key: 'notifications',\n        icon: 'fas fa-envelope',\n    },\n];\n\ninterface FormEditHeaderAttrs {\n    form: Form\n    editable?: boolean\n    validationErrors?: any\n    updateAttribute?: (attribute: string, value: string) => void\n    tab?: string\n    changeTab: (tab: string) => void\n    isSubmissionPage?: boolean\n}\n\nexport default class FormEditHeader implements ClassComponent<FormEditHeaderAttrs> {\n    restoring: boolean = false\n    deleting: boolean = false\n\n    view(vnode: Vnode<FormEditHeaderAttrs, this>) {\n        const {form, editable, validationErrors = {}} = vnode.attrs;\n\n        const controls = this.controls(form, vnode).toArray();\n\n        let backButtonHref;\n\n        switch (form.type()) {\n            case 'standalone':\n                backButtonHref = app.route('formulaireFormIndex');\n                break;\n            case 'discussion':\n                backButtonHref = app.route('formulaireFormIndexDiscussion');\n                break;\n            case 'user':\n                backButtonHref = app.route('formulaireFormIndexUser');\n                break;\n        }\n\n        return m('.FormulaireHeader', [\n            m(Dropdown, {\n                className: 'FormulaireHeader-controls App-primaryControl',\n                menuClassName: 'Dropdown-menu--right',\n                buttonClassName: 'Button Button--icon Button--flat',\n                label: app.translator.trans(translationPrefix + 'controls'),\n                icon: 'fas fa-ellipsis-v',\n            }, controls),\n            m('.FormulaireHeader-back', [\n                LinkButton.component({\n                    icon: 'fas fa-arrow-left',\n                    href: backButtonHref,\n                    className: 'Button Button--flat',\n                }, app.translator.trans(translationPrefix + 'category.' + form.type())),\n            ]),\n            m('h1', m(DiscreetInput, {\n                title: app.translator.trans(translationPrefix + 'fields.private-title'),\n                editable,\n                value: form.private_title(),\n                // Usually a title is set at creation before seeing this, so the empty field will rarely be seen\n                // Unless the text is completely cleared\n                placeholder: app.translator.trans(translationPrefix + 'fields.private-title'),\n                onchange: (value: string) => {\n                    vnode.attrs.updateAttribute!('private_title', value);\n                },\n                validationErrors: validationErrors.private_title,\n            })),\n            (form.type() !== 'discussion' || form.isAutoLink()) ? m('.FormulaireHeader-url', [\n                m('a', {\n                    href: form.type() === 'user' ? app.route('formulaireProfile', {\n                        username: app.session.user!.username(),\n                        form: form.seoId(),\n                    }) : app.route('formulaireFormShow', {\n                        id: form.seoId(),\n                    }),\n                    target: '_blank',\n                }, app.forum.attribute('baseUrl') + (form.type() === 'user' ? app.route('formulaireProfile', {\n                    username: app.session.user!.username(),\n                    form: '',\n                }) : app.route('formulaireFormShow', {\n                    id: '',\n                }))),\n                ' ',\n                m(DiscreetInput, {\n                    title: app.translator.trans(translationPrefix + 'fields.slug'),\n                    editable,\n                    value: form.slug(),\n                    placeholder: form.id(),\n                    onchange: (value: string) => {\n                        vnode.attrs.updateAttribute!('slug', value);\n                    },\n                    validationErrors: validationErrors.slug,\n                }),\n            ]) : null,\n            m('.FormulaireTabs', [\n                TABS.filter(tab => {\n                    // Only show the notifications tab for form types that support some kind of notification\n                    if (tab.key === 'notifications') {\n                        return form.type() === 'standalone' || form.isAutoLink();\n                    }\n\n                    return true;\n                }).map(tab => m(Button, {\n                    className: vnode.attrs.tab === tab.key ? 'active' : '',\n                    icon: tab.icon,\n                    onclick: () => {\n                        vnode.attrs.changeTab(tab.key);\n                    },\n                }, [\n                    app.translator.trans(translationPrefix + 'tabs.' + tab.key),\n                    tab.key === 'access' ? this.accessStatus(form) : null,\n                ])),\n                m(LinkButton, {\n                    className: vnode.attrs.isSubmissionPage ? 'active' : '',\n                    icon: 'fas fa-list',\n                    href: formulaireSubmissionIndex(form),\n                }, [\n                    app.translator.trans(translationPrefix + 'tabs.submissions'),\n                    ' ',\n                    m('span.badge', submissionCount(form)),\n                ]),\n            ]),\n        ]);\n    }\n\n    controls(form: Form, vnode: Vnode<FormEditHeaderAttrs, this>) {\n        const items = new ItemList();\n\n        items.add('export', Button.component({\n            icon: 'fas fa-file-export',\n            onclick: () => {\n                vnode.attrs.changeTab('export');\n            },\n        }, app.translator.trans(translationPrefix + 'template-export')));\n\n        const expertMode = localStorage.getItem('formulaireExpertMode') === 'true';\n\n        items.add('expert', Button.component({\n            icon: 'fas fa-toolbox',\n            onclick() {\n                if (expertMode) {\n                    localStorage.removeItem('formulaireExpertMode');\n                } else {\n                    localStorage.setItem('formulaireExpertMode', 'true');\n                }\n            },\n        }, app.translator.trans(translationPrefix + (expertMode ? 'disable' : 'enable') + '-expert-mode')));\n\n        if (form.isHidden() && form.attribute('canRestore')) {\n            items.add('hide', Button.component({\n                icon: 'fas fa-reply',\n                loading: this.restoring,\n                onclick: () => {\n                    this.restoring = true;\n\n                    form.save({\n                        isHidden: false,\n                    }).then(() => {\n                        this.restoring = false;\n                        m.redraw();\n                    }).catch(err => {\n                        this.restoring = false;\n                        m.redraw();\n                        throw err;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'restore')));\n        }\n\n        if (!form.isHidden() && form.attribute('canHide')) {\n            items.add('hide', Button.component({\n                icon: 'far fa-trash-alt',\n                loading: this.deleting,\n                onclick: () => {\n                    this.deleting = true;\n\n                    form.save({\n                        isHidden: true,\n                    }).then(() => {\n                        this.deleting = false;\n                        m.redraw();\n                    }).catch(err => {\n                        this.deleting = false;\n                        m.redraw();\n                        throw err;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'hide')));\n        }\n\n        if (form.isHidden() && form.attribute('canDelete')) {\n            items.add('delete', Button.component({\n                icon: 'fas fa-times',\n                loading: this.deleting,\n                onclick: () => {\n                    if (confirm(extractText(app.translator.trans(translationPrefix + 'delete-confirmation', {\n                        title: form.title(),\n                    })))) {\n                        this.deleting = true;\n\n                        form.delete().then(() => {\n                            this.deleting = false;\n                            m.redraw();\n\n                            m.route.set(app.route('formulaireFormIndex'));\n                        }).catch(err => {\n                            this.deleting = false;\n                            m.redraw();\n                            throw err;\n                        });\n                    }\n                },\n            }, app.translator.trans(translationPrefix + 'delete')));\n        }\n\n        return items;\n    }\n\n    accessStatus(form: Form) {\n        const create = form.accept_submissions();\n        const edit = form.allow_modification();\n\n        let key = 'closed';\n\n        if (form.type() !== 'standalone') {\n            key = create ? 'enabled' : 'disabled';\n        } else if (create && edit) {\n            key = 'both';\n        } else if (create) {\n            key = 'create';\n        } else if (edit) {\n            key = 'edit';\n        }\n\n        return [\n            ' ',\n            m('span.badge', app.translator.trans(translationPrefix + 'access-status.' + key)),\n        ];\n    }\n}\n","import {Children, Vnode, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Group from 'flarum/common/models/Group';\nimport FieldList from '../fields/FieldList';\nimport ValueHistory from '../utils/ValueHistory';\nimport AbstractFormPage from './AbstractFormPage';\nimport SaveControls from '../components/SaveControls';\nimport FormGroup from '../components/FormGroup';\nimport RichTextField from '../components/RichTextField';\nimport PageContainer from '../components/PageContainer';\nimport AutomaticDiscussionOptionsModal from '../modals/AutomaticDiscussionOptionsModal';\nimport ConfirmationEmailOptionsModal from '../modals/ConfirmationEmailOptionsModal';\nimport FormEditHeader from '../components/FormEditHeader';\nimport PermissionDropdown from '../components/PermissionDropdown';\nimport Form from '../models/Form';\nimport {AutomaticDiscussionOptions} from '../models/JsonTypes';\nimport {formulaireFormShow} from '../routes';\nimport composerPageExtensionLink from '../../common/helpers/composerPageExtensionLink';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.form-edit.';\n\nexport default class FormEditPage extends AbstractFormPage {\n    tab: string = 'template';\n    history!: ValueHistory\n    windowOnbeforeunload: any\n    tagsLoading: boolean = false\n    tagsLoaded: boolean = false\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        // Used to navigate to a tab directly from another page\n        if (app.cache.formulaireFormEditTab) {\n            this.tab = app.cache.formulaireFormEditTab as any;\n            delete app.cache.formulaireFormEditTab;\n        }\n    }\n\n    show(form: Form) {\n        // Create a copy of the model\n        // That way if we leave the page without saving, the data isn't persisted in the store\n        // @ts-ignore copyData is protected\n        this.form = app.store.createRecord<Form>('formulaire-forms', form.copyData());\n        this.form.exists = true;\n\n        this.history = new ValueHistory(form.template());\n\n        this.loadTagsIfNecessary();\n    }\n\n    oncreate(vnode: VnodeDOM) {\n        super.oncreate(vnode);\n\n        // Handles quitting the page by navigating/closing\n        this.windowOnbeforeunload = (event: Event) => {\n            if (this.dirty) {\n                event.preventDefault();\n                event.returnValue = extractText(app.translator.trans(translationPrefix + 'exiting-with-unsaved-data')) as any;\n            }\n        }\n\n        window.addEventListener('beforeunload', this.windowOnbeforeunload);\n    }\n\n    onbeforeremove() {\n        // Handles quitting the page by navigating inside the single page app\n        if (this.dirty && !confirm(extractText(app.translator.trans(translationPrefix + 'exiting-with-unsaved-data')))) {\n            return Promise.reject();\n        }\n\n        window.removeEventListener('beforeunload', this.windowOnbeforeunload);\n\n        return Promise.resolve();\n    }\n\n    onremove() {\n        window.removeEventListener('beforeunload', this.windowOnbeforeunload);\n    }\n\n    content(form: Form): Children {\n        if (!form.attribute('canEdit')) {\n            return m(PageContainer, 'Cannot edit');//TODO: translation\n        }\n\n        const warnings = this.warnings(form);\n\n        return m(PageContainer, [\n            m(FormEditHeader, {\n                form,\n                tab: this.tab,\n                changeTab: (key: string) => {\n                    this.tab = key;\n\n                    this.loadTagsIfNecessary();\n                },\n                editable: true,\n                updateAttribute: this.updateAttribute.bind(this),\n                validationErrors: this.validationErrors,\n            }),\n            warnings.map(warning => m('.Alert.Alert--warning', warning)),\n            m('.FormulaireEditFormTab', m('div', {\n                key: this.tab, // Force full redraw on tab change\n            }, (this as any)[this.tab + 'Tab'](form))),\n            m(SaveControls, {\n                dirty: this.dirty,\n                loading: this.loading,\n                savedAt: this.savedAt,\n                inError: Object.keys(this.validationErrors).length > 0,\n                history: this.history,\n                onsave: () => {\n                    this.loading = true;\n\n                    form.save({\n                        link_type: form.link_type(),\n                        link_id: form.link_id(),\n                        slug: form.slug(),\n                        title: form.title(),\n                        private_title: form.private_title(),\n                        template: this.history.value,\n                        accept_submissions: form.accept_submissions(),\n                        allow_modification: form.allow_modification(),\n                        max_submissions: form.max_submissions(),\n                        send_confirmation_to_participants: form.send_confirmation_to_participants(),\n                        notify_emails: form.notify_emails(),\n                        web_confirmation_message: form.web_confirmation_message(),\n                        email_confirmation_message: form.email_confirmation_message(),\n                        email_notification_message: form.email_notification_message(),\n                        email_confirmation_title: form.email_confirmation_title(),\n                        email_notification_title: form.email_notification_title(),\n                        automatic_discussion_options: form.automatic_discussion_options(),\n                        permission_see_own: form.permission_see_own(),\n                        permission_see_any: form.permission_see_any(),\n                        permission_edit_own: form.permission_edit_own(),\n                        permission_edit_any: form.permission_edit_any(),\n                        show_on_creation: form.show_on_creation(),\n                    }, {\n                        errorHandler: this.onerror.bind(this),\n                    }).then(() => {\n                        this.loading = false;\n                        this.dirty = false;\n                        this.savedAt = new Date();\n                        this.validationErrors = {};\n                        // Reload template because now it will likely contain new server-side generated keys\n                        this.history = new ValueHistory(form.template());\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n                floating: true,\n            }),\n        ]);\n    }\n\n    templateTab(form: Form): Children {\n        const expertMode = localStorage.getItem('formulaireExpertMode') === 'true';\n\n        const list = new FieldList({\n            configs: this.history.value,\n            onchange: () => {\n                this.history.save();\n                this.dirty = true;\n            },\n            disabled: this.loading,\n            validationErrors: this.validationErrors.template || {},\n            expertMode,\n        });\n\n        return [\n            m(FormGroup, {\n                validationErrors: this.validationErrors.title,\n                label: m('label', app.translator.trans(translationPrefix + 'field.title')),\n            }, m('input.FormControl', {\n                type: 'text',\n                value: form.title(),\n                oninput: withAttr('value', (value: string) => {\n                    this.updateAttribute('title', value);\n                }),\n                disabled: this.loading,\n            })),\n            m('h2', [\n                app.translator.trans(translationPrefix + 'section.template'),\n                ' ',\n                m('small', [\n                    m('a', {\n                        href: formulaireFormShow(form),\n                        target: '_blank',\n                    }, app.translator.trans(translationPrefix + (this.dirty ? 'save-for-preview' : 'preview'))),\n                    ' ',\n                    icon('fas fa-external-link-alt'),\n                ]),\n            ]),\n            expertMode ? m('.Form-group', m('.Alert.Alert--warning', app.translator.trans(translationPrefix + 'expert-mode-warning'))) : null,\n            list.configureView(),\n        ];\n    }\n\n    placementTab(form: Form): Children {\n        const linkIdOptions: any = {};\n\n        if (form.link_type() === 'groups') {\n            linkIdOptions.all = app.translator.trans(translationPrefix + 'link-options.all-groups');\n            app.store.all<Group>('groups').forEach(group => {\n                if (group.id() === Group.GUEST_ID || group.id() === Group.MEMBER_ID) {\n                    return;\n                }\n\n                linkIdOptions[group.id()!] = group.namePlural();\n            });\n        } else if (form.link_type() === 'tags') {\n            linkIdOptions.all = app.translator.trans(translationPrefix + 'link-options.all-tags');\n            if ('flarum-tags' in flarum.extensions) {\n                app.store.all<any>('tags').forEach(tag => {\n                    linkIdOptions[tag.id()] = tag.name();\n                });\n            }\n        }\n\n        return [\n            m(FormGroup, {\n                validationErrors: this.validationErrors.link_type || this.validationErrors.link_id,\n                label: m('label', app.translator.trans(translationPrefix + 'field.link')),\n            }, [\n                Select.component({\n                    options: {\n                        standalone: app.translator.trans(translationPrefix + 'link-options.standalone'),\n                        groups: app.translator.trans(translationPrefix + 'link-options.groups'),\n                        tags: app.translator.trans(translationPrefix + 'link-options.tags'),\n                    },\n                    value: form.link_type() || 'standalone',\n                    onchange: (value: string) => {\n                        this.updateAttribute('link_type', value === 'standalone' ? null : value);\n                        this.updateAttribute('link_id', null);\n                        this.loadTagsIfNecessary();\n                    },\n                    disabled: this.loading,\n                }),\n                ' ',\n                form.link_type() !== null ? m.fragment({}, m.fragment({\n                    // We need to force a refresh of the full select when the list of options changes\n                    // Otherwise there is a ghost selection that sticks to the previous index instead of the selected ID\n                    key: JSON.stringify(Object.keys(linkIdOptions)),\n                }, Select.component({\n                    options: linkIdOptions,\n                    value: form.link_id() || 'all',\n                    onchange: (value: string) => {\n                        this.updateAttribute('link_id', value === 'all' ? null : value);\n                    },\n                    disabled: this.loading || this.tagsLoading,\n                }))) : null,\n                this.tagsLoading ? LoadingIndicator.component({\n                    display: 'inline',\n                }) : null,\n            ]),\n            form.type() !== 'standalone' ? m(FormGroup, {\n                validationErrors: this.validationErrors.show_on_creation,\n            }, [\n                Switch.component({\n                    state: form.show_on_creation(),\n                    onchange: this.updateAttribute.bind(this, 'show_on_creation'),\n                    disabled: this.loading,\n                }, app.translator.trans(translationPrefix + 'field.show-on-creation.' + form.type())),\n                (form.type() === 'discussion' && !('clarkwinkelmann-composer-page' in flarum.extensions)) ? m('.Alert', app.translator.trans(translationPrefix + 'field.show-on-creation.discussionHelp', {\n                    a: composerPageExtensionLink(),\n                })) : null,\n            ]) : null,\n            form.type() === 'discussion' ? m(FormGroup, {\n                validationErrors: this.validationErrors.automatic_discussion_options,\n            }, [\n                Switch.component({\n                    state: form.automatic_discussion_options()?.enabled,\n                    onchange: (value: boolean) => {\n                        const options: AutomaticDiscussionOptions = form.automatic_discussion_options() || {};\n                        options.enabled = value;\n                        this.updateAttribute('automatic_discussion_options', options);\n                    },\n                    disabled: this.loading,\n                }, app.translator.trans(translationPrefix + 'field.automatic-discussion')),\n                Button.component({\n                    className: 'Button',\n                    disabled: !form.automatic_discussion_options()?.enabled,\n                    onclick: () => {\n                        app.modal.show(AutomaticDiscussionOptionsModal, {\n                            options: form.automatic_discussion_options() || {},\n                            onchange: (options: AutomaticDiscussionOptions) => {\n                                this.updateAttribute('automatic_discussion_options', options);\n                                app.modal.close();\n                            },\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'auto-discussion-options')),\n            ]) : null,\n        ];\n    }\n\n    accessTab(form: Form): Children {\n        const showMaxSubmissions = form.type() === 'standalone' || form.isAutoLink();\n\n        return [\n            m(FormGroup, {\n                validationErrors: this.validationErrors.accept_submissions,\n            }, Switch.component({\n                state: form.accept_submissions(),\n                onchange: this.updateAttribute.bind(this, 'accept_submissions'),\n                disabled: this.loading,\n            }, app.translator.trans(translationPrefix + 'field.' + (form.type() === 'standalone' ? 'accept-submissions' : 'enable')))),\n            form.type() === 'standalone' ? m(FormGroup, {\n                validationErrors: this.validationErrors.allow_modification,\n            }, Switch.component({\n                state: form.allow_modification(),\n                onchange: this.updateAttribute.bind(this, 'allow_modification'),\n                disabled: this.loading,\n            }, app.translator.trans(translationPrefix + 'field.allow-modification'))) : null,\n            showMaxSubmissions ? m(FormGroup, {\n                validationErrors: this.validationErrors.max_submissions,\n                label: m('label', app.translator.trans(translationPrefix + 'field.max-submissions')),\n            }, m('input.FormControl', {\n                type: 'number',\n                value: form.max_submissions(),\n                oninput: withAttr('value', (value: string) => {\n                    this.updateAttribute('max_submissions', value);\n                }),\n                disabled: this.loading,\n            })) : null,\n            form.type() !== 'standalone' ? [\n                m('h2', app.translator.trans(translationPrefix + 'section.permissions')),\n                m(FormGroup, {\n                    className: 'FormulairePermissionFormGroup',\n                    validationErrors: this.validationErrors.permission_see_own,\n                    label: m('label', app.translator.trans(translationPrefix + 'field.permission-see-own')),\n                }, PermissionDropdown.component({\n                    groupIds: form.permission_see_own(),\n                    onchange: this.updateAttribute.bind(this, 'permission_see_own'),\n                    disabled: this.loading,\n                    allowGuest: form.type() === 'user',\n                    guestMeansDisabled: true,\n                })),\n                m(FormGroup, {\n                    className: 'FormulairePermissionFormGroup',\n                    validationErrors: this.validationErrors.permission_see_any,\n                    label: m('label', app.translator.trans(translationPrefix + 'field.permission-see-any')),\n                }, PermissionDropdown.component({\n                    groupIds: form.permission_see_any(),\n                    onchange: this.updateAttribute.bind(this, 'permission_see_any'),\n                    disabled: this.loading,\n                    allowGuest: true,\n                })),\n                m(FormGroup, {\n                    className: 'FormulairePermissionFormGroup',\n                    validationErrors: this.validationErrors.permission_edit_own,\n                    label: m('label', app.translator.trans(translationPrefix + 'field.permission-edit-own')),\n                }, PermissionDropdown.component({\n                    groupIds: form.permission_edit_own(),\n                    onchange: this.updateAttribute.bind(this, 'permission_edit_own'),\n                    disabled: this.loading,\n                    allowGuest: form.type() === 'user',\n                    guestMeansDisabled: true,\n                })),\n                m(FormGroup, {\n                    className: 'FormulairePermissionFormGroup',\n                    validationErrors: this.validationErrors.permission_edit_any,\n                    label: m('label', app.translator.trans(translationPrefix + 'field.permission-edit-any')),\n                }, PermissionDropdown.component({\n                    groupIds: form.permission_edit_any(),\n                    onchange: this.updateAttribute.bind(this, 'permission_edit_any'),\n                    disabled: this.loading,\n                })),\n            ] : null,\n        ];\n    }\n\n    notificationsTab(form: Form): Children {\n        return [\n            m('.Form-group', [\n                Switch.component({\n                    state: form.send_confirmation_to_participants(),\n                    onchange: this.updateAttribute.bind(this, 'send_confirmation_to_participants'),\n                    disabled: this.loading,\n                }, app.translator.trans(translationPrefix + 'field.send-confirmation-to-participants')),\n                Button.component({\n                    className: 'Button',\n                    disabled: !form.send_confirmation_to_participants(),\n                    onclick: () => {\n                        app.modal.show(ConfirmationEmailOptionsModal, {\n                            title: form.email_confirmation_title(),\n                            message: form.email_confirmation_message(),\n                            onchange: (title: string, message: string) => {\n                                this.updateAttribute('email_confirmation_title', title);\n                                this.updateAttribute('email_confirmation_message', message);\n                                app.modal.close();\n                            },\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'email-confirmation-options')),\n            ]),\n            m(FormGroup, {\n                validationErrors: this.validationErrors.notify_emails,\n                label: m('label', app.translator.trans(translationPrefix + 'field.notify-emails')),\n            }, [\n                m('input.FormControl', {\n                    type: 'text',\n                    value: form.notify_emails(),\n                    oninput: withAttr('value', (value: string) => {\n                        this.updateAttribute('notify_emails', value);\n                    }),\n                    disabled: this.loading,\n                }),\n                Button.component({\n                    className: 'Button',\n                    disabled: !form.notify_emails(),\n                    onclick: () => {\n                        app.modal.show(ConfirmationEmailOptionsModal, {\n                            title: form.email_notification_title(),\n                            message: form.email_notification_message(),\n                            onchange: (title: string, message: string) => {\n                                this.updateAttribute('email_notification_title', title);\n                                this.updateAttribute('email_notification_message', message);\n                                app.modal.close();\n                            },\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'email-notification-options'))\n            ]),\n            m(FormGroup, {\n                validationErrors: this.validationErrors.web_confirmation_message,\n                label: m('label', app.translator.trans(translationPrefix + 'field.web-confirmation-message')),\n            }, m(RichTextField, {\n                value: form.web_confirmation_message(),\n                onchange: withAttr('value', (value: string) => {\n                    this.updateAttribute('web_confirmation_message', value);\n                }),\n                disabled: this.loading,\n            })),\n        ];\n    }\n\n    exportTab(form: Form): Children {\n        return [\n            // TODO: move import/export to popup and translate\n            m(FormGroup, {\n                label: m('label', 'Import/Export (you must refresh the page before copying for the latest version)'),\n            }, m('textarea.FormControl', {\n                value: JSON.stringify(form.template(), null, 4),\n                oninput: withAttr('value', (value: string) => {\n                    try {\n                        this.history.value = JSON.parse(value);\n                        this.history.save();\n                        this.dirty = true;\n                    } catch (e) {\n                        alert('Invalid JSON');\n                    }\n                }),\n                disabled: this.loading,\n            })),\n        ];\n    }\n\n    updateAttribute(attribute: string, value: any) {\n        // This won't happen in practice but it pleases typescript\n        if (!this.form) {\n            return;\n        }\n\n        // If the title is being edited, and both title and private title were identical, edit both together\n        if (attribute === 'title' && this.form.title() === this.form.private_title()) {\n            this.form.pushAttributes({\n                private_title: value,\n            });\n        }\n\n        this.form.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n        delete this.validationErrors[attribute];\n    }\n\n    warnings(form: Form): Children[] {\n        const warnings: Children[] = [];\n\n        const finalPermission = (localAbility: string, globalAbility: string) => {\n            const local = (form as any)['permission_' + localAbility]();\n\n            if (local !== null) {\n                return local;\n            }\n\n            return app.forum.attribute<any>('formulaireGlobalPermissions')[globalAbility];\n        };\n\n        function doesntAllowOnly(permissionValue: string[], groupId: string) {\n            return Array.isArray(permissionValue) && permissionValue.indexOf(groupId) === -1;\n        }\n\n        if (form.type() !== 'standalone' && form.show_on_creation()) {\n            if (form.type() === 'user') {\n                const seeOwnPermission = finalPermission('see_own', 'formulaire.seeOwnUser');\n                const editOwnPermission = finalPermission('edit_own', 'formulaire.editOwnUser');\n\n                if (doesntAllowOnly(seeOwnPermission, Group.GUEST_ID) || doesntAllowOnly(editOwnPermission, Group.GUEST_ID)) {\n                    warnings.push(app.translator.trans(translationPrefix + 'warnings.show-on-signup-invalid-permissions'));\n                }\n            } else {\n                const seeOwnPermission = finalPermission('see_own', 'discussion.seeOwnFormulaire');\n                const editOwnPermission = finalPermission('edit_own', 'discussion.editOwnFormulaire');\n\n                if (doesntAllowOnly(seeOwnPermission, Group.MEMBER_ID) || doesntAllowOnly(editOwnPermission, Group.MEMBER_ID)) {\n                    warnings.push(app.translator.trans(translationPrefix + 'warnings.show-on-composer-invalid-permissions'));\n                }\n            }\n        }\n\n        if (form.type() !== 'standalone' && !form.accept_submissions()) {\n            warnings.push(app.translator.trans(translationPrefix + 'warnings.linked-form-is-draft'));\n        }\n\n        if (form.isAutoLink()) {\n            warnings.push(app.translator.trans(translationPrefix + 'warnings.auto-link-permission-warning'));\n        }\n\n        return warnings;\n    }\n\n    loadTagsIfNecessary() {\n        if (this.tab !== 'placement' || !this.form || this.form.link_type() !== 'tags' || this.tagsLoaded || !('flarum-tags' in flarum.extensions)) {\n            return;\n        }\n\n        // tagList should be available since Flarum 1.0\n        // @ts-ignore\n        if (!app.tagList) {\n            console.warn('[formulaire] Cannot load tag list');\n\n            return;\n        }\n\n        this.tagsLoading = true;\n\n        // We don't need the parent relationship for now, but if we don't include any TagListState won't load anything\n        // @ts-ignore\n        app.tagList.load(['parent']).then(() => {\n            this.tagsLoading = false;\n            this.tagsLoaded = true;\n\n            m.redraw();\n        });\n    }\n}\n","export default function () {\n    return m('a', {\n        href: 'https://github.com/clarkwinkelmann/flarum-ext-composer-page',\n        target: '_blank',\n        rel: 'noopener',\n    });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Submission from '../models/Submission';\n\nexport default class SubmissionListState {\n    params: any\n    submissions: Submission[] = []\n    moreResults: boolean = false\n    loading: boolean = true\n\n    constructor(params: any = {}) {\n        this.params = params;\n    }\n\n    requestParams() {\n        const params: any = {filter: {}};\n\n        params.sort = this.sortMap()[this.params.sort];\n\n        if (this.params.q) {\n            params.filter.q = this.params.q;\n        }\n\n        return params;\n    }\n\n    sortMap() {\n        const map: any = {};\n\n        map.latest = '-createdAt';\n        map.oldest = 'createdAt';\n\n        return map;\n    }\n\n    clear() {\n        this.submissions = [];\n        m.redraw();\n    }\n\n    refresh({deferClear = false} = {}) {\n        this.loading = true;\n\n        if (!deferClear) {\n            this.clear();\n        }\n\n        return this.loadResults().then(\n            results => {\n                this.submissions = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadResults(offset: number = 0) {\n        const preloadedSubmissions = app.preloadedApiDocument();\n\n        if (preloadedSubmissions) {\n            return Promise.resolve(preloadedSubmissions);\n        }\n\n        const params = this.requestParams();\n        params.page = {offset};\n\n        return app.store.find('formulaire/submissions', params);\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.submissions.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    parseResults(results: any) {\n        this.submissions.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\n\ninterface PictureSortDropdownAttrs {\n    sort: string\n    onchange: (value: string) => void\n}\n\nexport default class PictureSortDropdown implements ClassComponent <PictureSortDropdownAttrs> {\n    view(vnode: Vnode<PictureSortDropdownAttrs, this>) {\n        const sortOptions: { [key: string]: string } = {};\n\n        ['latest', 'oldest'].forEach(key => {\n            sortOptions[key] = extractText(app.translator.trans('kilowhat-formulaire.forum.submission-sort.' + key));\n        });\n\n        const activeValue = (vnode.attrs.sort || Object.keys(sortOptions)[0]);\n\n        return m(Dropdown, {\n            buttonClassName: 'Button',\n            label: sortOptions[vnode.attrs.sort] || Object.keys(sortOptions).map(key => sortOptions[key])[0],\n            icon: 'fas fa-sort-amount-' + (activeValue === 'latest' ? 'up' : 'down'),\n        }, Object.keys(sortOptions).map(value => {\n            const label = sortOptions[value];\n            const active = activeValue === value;\n\n            return m(Button, {\n                icon: active ? 'fas fa-check' : true,\n                onclick: () => {\n                    vnode.attrs.onchange(value);\n                },\n                active,\n            }, label);\n        }));\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Select from 'flarum/common/components/Select';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport RequestError from 'flarum/common/utils/RequestError';\nimport Form from '../models/Form';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.export.';\n\ntype ExportFormat = 'xlsx' | 'xls' | 'ods' | 'csv' | 'json';\ntype ExportHeading = 'title' | 'key' | 'none';\n\nconst META_OPTIONS = [\n    'uid',\n    'user_id',\n    'user_username',\n    'user_displayname',\n    'link_id',\n    'locked_at',\n    'created_at',\n    'updated_at',\n    'hidden_at',\n];\n\nconst DEFAULT_META_OPTIONS = [\n    'uid',\n    'user_username',\n    'created_at',\n];\n\nfunction numberedPre(content: string) {\n    return m('.FormulaireExportModal-code', [\n        m('pre.numbers', content.split('\\n').map((line, index) => index + 1).join('\\n')),\n        m('pre.content', content),\n    ]);\n}\n\ninterface ExportModalAttrs extends IInternalModalAttrs {\n    form: Form\n}\n\nexport default class ExportModal extends Modal<ExportModalAttrs> {\n    className() {\n        return 'FormulaireModal FormulaireTheme FormulaireExportModal Modal--large';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    format: ExportFormat = 'xlsx'\n    heading: ExportHeading = 'title'\n    fields: string[] | null = null\n    meta: string[] | null = null\n    showAllMeta: boolean = false\n    optionKeys: boolean = false\n    loadingPreview: boolean = false\n    preview: { format: ExportFormat, data: string } | null = null;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.updatePreview();\n    }\n\n    content() {\n        const {form} = this.attrs;\n\n        const metaOptions = [...META_OPTIONS];\n\n        if (form.attribute('canExportUserDetails')) {\n            metaOptions.splice(4, 0, 'user_email', 'user_activated');\n        }\n\n        return m('.FormulaireExportModal-row', [\n            m('.FormulaireExportModal-config.Modal-body', [\n                m('.Form-group', m('a', {\n                    className: 'Button Button--primary Button--block hasIcon',\n                    download: form.private_title() + '.' + this.format,\n                    href: this.generateUrl(),\n                }, [\n                    m('i.icon.fas.fa-file-download.Button-icon'),\n                    m('span.Button-label', app.translator.trans(translationPrefix + 'submit')),\n                ])),\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'format')),\n                    Select.component({\n                        value: this.format,\n                        onchange: (value: ExportFormat) => {\n                            this.format = value;\n\n                            this.updatePreview();\n                        },\n                        options: {\n                            xlsx: app.translator.trans(translationPrefix + 'format-options.xlsx'),\n                            xls: app.translator.trans(translationPrefix + 'format-options.xls'),\n                            ods: app.translator.trans(translationPrefix + 'format-options.ods'),\n                            csv: app.translator.trans(translationPrefix + 'format-options.csv'),\n                            json: app.translator.trans(translationPrefix + 'format-options.json'),\n                        },\n                    }),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'heading')),\n                    Select.component({\n                        value: this.heading,\n                        onchange: (value: ExportHeading) => {\n                            this.heading = value;\n\n                            this.updatePreview();\n                        },\n                        options: {\n                            title: app.translator.trans(translationPrefix + 'heading-options.title'),\n                            key: app.translator.trans(translationPrefix + 'heading-options.key'),\n                            none: app.translator.trans(translationPrefix + 'heading-options.none'),\n                        },\n                    }),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'fields')),\n                    Array.isArray(form.template()) ? form.template()!.map(field => {\n                        const checked = this.fields === null || this.fields.indexOf(field.key!) !== -1;\n\n                        return m('div', m('label', [\n                            m('input', {\n                                type: 'checkbox',\n                                checked,\n                                onchange: () => {\n                                    if (this.fields === null) {\n                                        this.fields = form.template()!.map((f: any) => f.key) as string[];\n                                    }\n\n                                    if (checked) {\n                                        this.fields = this.fields.filter(fk => fk !== field.key);\n                                    } else {\n                                        this.fields.push(field.key!);\n                                    }\n\n                                    if (this.fields.length === form.template()!.length) {\n                                        this.fields = null;\n                                    }\n\n                                    this.updatePreview();\n                                },\n                            }),\n                            ' ',\n                            field.title || field.key,\n                        ]));\n                    }) : null,\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans(translationPrefix + 'meta')),\n                    metaOptions.map(meta => {\n                        if (!this.showAllMeta && DEFAULT_META_OPTIONS.indexOf(meta) === -1) {\n                            return null;\n                        }\n\n                        const checked = (this.meta === null && DEFAULT_META_OPTIONS.indexOf(meta) !== -1) ||\n                            (Array.isArray(this.meta) && this.meta.indexOf(meta) !== -1);\n\n                        return m('div', m('label', [\n                            m('input', {\n                                type: 'checkbox',\n                                checked,\n                                onchange: () => {\n                                    if (this.meta === null) {\n                                        this.meta = DEFAULT_META_OPTIONS.slice();\n                                    }\n\n                                    if (checked) {\n                                        this.meta = this.meta.filter(thisMeta => thisMeta !== meta);\n                                    } else {\n                                        this.meta.push(meta);\n                                    }\n\n                                    if (\n                                        this.meta.length === DEFAULT_META_OPTIONS.length &&\n                                        this.meta.every(thisMeta => DEFAULT_META_OPTIONS.indexOf(thisMeta) !== -1)\n                                    ) {\n                                        this.meta = null;\n                                    }\n\n                                    this.updatePreview();\n                                },\n                            }),\n                            ' ',\n                            app.translator.trans(translationPrefix + 'meta-options.' + meta),\n                        ]));\n                    }),\n                    this.showAllMeta ? null : m('div', m('a', {\n                        href: '#',\n                        onclick: (event: Event) => {\n                            event.preventDefault();\n                            this.showAllMeta = true;\n                        },\n                    }, app.translator.trans(translationPrefix + 'more-meta'))),\n                ]),\n                m('.Form-group', m('label', [\n                    m('input', {\n                        type: 'checkbox',\n                        checked: this.optionKeys,\n                        onchange: () => {\n                            this.optionKeys = !this.optionKeys;\n\n                            this.updatePreview();\n                        },\n                    }),\n                    ' ',\n                    app.translator.trans(translationPrefix + 'option-keys'),\n                ])),\n            ]),\n            m('.FormulaireExportModal-preview', [\n                m('h3', app.translator.trans(translationPrefix + 'preview')),\n                this.viewPreview(),\n            ]),\n        ]);\n    }\n\n    viewPreview() {\n        if (this.loadingPreview || !this.preview) {\n            return LoadingIndicator.component({className: 'LoadingIndicator--block'});\n        }\n\n        if (this.preview.format === 'json') {\n            return numberedPre(JSON.stringify(JSON.parse(this.preview.data), null, 2));\n        } else if (this.preview.format === 'csv') {\n            return numberedPre(this.preview.data);\n        } else {\n            const table = JSON.parse(this.preview.data) as (string | number | boolean | null)[][];\n\n            if (table.length) {\n                return m('table', m('tbody', [\n                    m('tr', [\n                        m('th'),\n                        table[0].map((value, index) => m('th', String.fromCharCode(65 + index))),\n                    ]),\n                    table.map((row, index) => m('tr', [\n                        m('th', index + 1),\n                        row.map(value => {\n                            let displayValue: any = value;\n\n                            if (value === true) {\n                                displayValue = app.translator.trans(translationPrefix + 'preview-primitives.boolean-true');\n                            } else if (value === false) {\n                                displayValue = app.translator.trans(translationPrefix + 'preview-primitives.boolean-false');\n                            } else if (typeof value === 'number' && Math.round(value * 10000) !== Math.round(value * 1000) * 10) {\n                                // If the value is a number with 4+ decimals, it's a raw Excel date\n                                // It's just too complicated to make this work right, so we'll just show a placeholder\n                                displayValue = app.translator.trans(translationPrefix + 'preview-primitives.excel-date');\n                            }\n\n                            return m('td', displayValue);\n                        }),\n                    ])),\n                ]));\n            }\n\n            return 'empty result set';\n        }\n    }\n\n    generateUrl(preview = false) {\n        const queryString: any = {};\n\n        if (this.fields !== null) {\n            queryString.fields = this.fields.join(',');\n        }\n\n        if (this.meta !== null) {\n            queryString.meta = this.meta.join(',');\n        }\n\n        if (this.heading !== 'title') {\n            queryString.heading = this.heading;\n        }\n\n        if (this.optionKeys) {\n            queryString.optionKeys = 1;\n        }\n\n        if (preview) {\n            queryString.preview = 1;\n        }\n\n        const downloadQueryString = m.buildQueryString(queryString);\n\n        return app.forum.attribute('apiUrl') + this.attrs.form.apiEndpoint() + '/export.' + this.format + (downloadQueryString ? '?' + downloadQueryString : '');\n    }\n\n    updatePreview() {\n        this.loadingPreview = true;\n        m.redraw(); // In Mithril 0.2, it seems the start/end computation of m.request causes the redraw to be delayed until the end of the request\n\n        // We cache the value before the request\n        // Because in case we click a lot of stuff, multiple requests could be pending\n        const format = this.format;\n\n        // Not using app.request because there's some odd stuff happening with deserializing\n        // In Mithril 2, deserialize: raw => raw does not seem to work despite being the solution proposed in the documentation\n        m.request({\n            method: 'GET',\n            url: this.generateUrl(true),\n            extract: (xhr: XMLHttpRequest) => {\n                const status = xhr.status;\n\n                // If the request failed, throw the same error as Flarum\n                // Unfortunately we cannot easily re-use the error alert, so for now we'll just throw the error\n                // So that the preview doesn't say \"empty results\"\n                if (status < 200 || status > 299) {\n                    throw new RequestError(status, xhr.responseText, {}, xhr);\n                }\n\n                // Contrary to Flarum's app.request, do not automatically parse as JSON\n                return xhr.responseText;\n            },\n        }).then((data: any) => {\n            this.loadingPreview = false;\n            this.preview = {\n                format,\n                data,\n            };\n            m.redraw();\n        }).catch((error: any) => {\n            this.loadingPreview = false;\n            this.preview = null;\n            m.redraw();\n\n            throw error;\n        });\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport listItems from 'flarum/common/helpers/listItems';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport AbstractFormPage from './AbstractFormPage';\nimport PageContainer from '../components/PageContainer';\nimport SubmissionListState from '../states/SubmissionListState';\nimport SubmissionSortDropdown from '../components/SubmissionSortDropdown';\nimport ExportModal from '../modals/ExportModal';\nimport FormEditHeader from '../components/FormEditHeader';\nimport Form from '../models/Form';\nimport {formulaireFormEdit, formulaireFormShow, formulaireSubmission} from '../routes';\nimport SearchInput from '../components/SearchInput';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.submission-index.';\n\nexport default class SubmissionIndexPage extends AbstractFormPage {\n    submissionList!: SubmissionListState\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.submissionList = new SubmissionListState({\n            q: 'form:' + m.route.param('id'),\n        });\n        this.submissionList.refresh();\n    }\n\n    content(form: Form) {\n        return m(PageContainer, [\n            m(FormEditHeader, {\n                form,\n                changeTab: (key: string) => {\n                    app.cache.formulaireFormEditTab = key;\n                    m.route.set(formulaireFormEdit(form));\n                },\n                isSubmissionPage: true,\n            }),\n            m('.FormulaireFilters', [\n                m(SubmissionSortDropdown, {\n                    sort: this.submissionList.params.sort,\n                    onchange: (value: string) => {\n                        this.submissionList.params.sort = value;\n                        this.submissionList.refresh();\n                    },\n                }),\n                app.forum.attribute('formulaireCanSearchSubmissions') ? m(SearchInput, {\n                    initialValue: '',\n                    onchange: (value: string) => {\n                        this.submissionList.params.q = 'form:' + m.route.param('id') + ' ' + value;\n                        this.submissionList.refresh();\n                    },\n                    placeholder: app.translator.trans(translationPrefix + 'search'),\n                }) : null,\n                form.type() === 'standalone' ? LinkButton.component({\n                    className: 'Button FormulaireFilters--right',\n                    href: formulaireFormShow(this.form),\n                }, app.translator.trans(translationPrefix + 'form-show')) : null,\n                //TODO: clear all, filters\n                form.attribute('canExport') ? Button.component({\n                    className: 'Button Button--primary' + (form.type() === 'standalone' ? '' : ' FormulaireFilters--right'),\n                    onclick: () => {\n                        app.modal.show(ExportModal, {\n                            form: this.form,\n                        });\n                    },\n                    icon: 'fas fa-file-export',\n                }, app.translator.trans(translationPrefix + 'export')) : null,\n            ]),\n            this.list(this.submissionList),\n        ]);\n    }\n\n    list(state: SubmissionListState) {\n        let loading;\n\n        if (state.loading) {\n            loading = LoadingIndicator.component();\n        } else if (state.moreResults) {\n            loading = Button.component({\n                className: 'Button',\n                onclick: state.loadMore.bind(state),\n            }, app.translator.trans(translationPrefix + 'load-more'));\n        }\n\n        if (state.submissions.length === 0 && !state.loading) {\n            return Placeholder.component({\n                text: app.translator.trans(translationPrefix + 'empty'),\n            });\n        }\n\n        return m('div', [\n            m('table.FormulaireDataTable', [\n                m('thead', m('tr', [\n                    m('th', app.translator.trans(translationPrefix + 'columns.date')),\n                    m('th', app.translator.trans(translationPrefix + 'columns.user')),\n                    m('th', app.translator.trans(translationPrefix + 'columns.actions')),\n                ])),\n                m('tbody', state.submissions.map(submission => {\n                    const user = submission.user();\n                    const badges = submission.badges().toArray();\n\n                    return m('tr', [\n                        m('td', [\n                            submission.createdAt(),\n                            badges.length ? m('ul.FormulaireDataTable-badges.badges', listItems(badges)) : null,\n                        ]),\n                        m('td', user ? [\n                            avatar(user),\n                            username(user),\n                        ] : app.translator.trans(translationPrefix + 'guest')),\n                        m('td', [\n                            LinkButton.component({\n                                className: 'Button',\n                                href: formulaireSubmission(submission),\n                            }, app.translator.trans(translationPrefix + 'show')),\n                        ]),\n                    ]);\n                })),\n            ]),\n            loading,\n        ]);\n    }\n}\n","import {Vnode, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport extractText from 'flarum/common/utils/extractText';\nimport listItems from 'flarum/common/helpers/listItems';\nimport AbstractProcessingPage from './AbstractProcessingPage';\nimport FieldList from '../fields/FieldList';\nimport SaveControls from '../components/SaveControls';\nimport ValueHistory from '../utils/ValueHistory';\nimport PageContainer from '../components/PageContainer';\nimport ErrorPage from '../components/ErrorPage';\nimport Uploader from '../utils/Uploader';\nimport Submission from '../models/Submission';\nimport {formulaireSubmissionIndex} from '../routes';\nimport isHorizontalLayout from '../utils/isHorizontalLayout';\n\nconst translationPrefix = 'kilowhat-formulaire.forum.submission.';\n\nexport default class SubmissionPage extends AbstractProcessingPage {\n    locking: boolean = false\n    restoring: boolean = false\n    deleting: boolean = false\n    submission: Submission | null = null\n    uploader!: Uploader\n    history!: ValueHistory\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.errorPage = null;\n\n        const id = m.route.param('id');\n        const preloadedSubmission = app.preloadedApiDocument<Submission>();\n\n        if (preloadedSubmission) {\n            this.show(preloadedSubmission);\n        } else {\n            const submission = app.store.getById<Submission>('formulaire-submissions', id);\n\n            // If a submission exists and has the form data loaded\n            if (submission && submission.form()) {\n                this.show(submission);\n            } else {\n                app.store.find<Submission>('formulaire/submissions', id, {}, {\n                    errorHandler: this.pageLoadErrorHandler.bind(this),\n                }).then(submission => {\n                    // TODO: reload to get files\n                    this.show(submission);\n                    m.redraw();\n                });\n            }\n        }\n    }\n\n    onremove(vnode: VnodeDOM) {\n        super.onremove(vnode);\n\n        delete document.body.dataset.formulaireFormId;\n        delete document.body.dataset.formulaireSubmissionId;\n    }\n\n    show(submission: Submission) {\n        const form = submission.form();\n\n        // This shouldn't happen, but we do it for TypeScript\n        if (!form) {\n            throw 'Missing form relationship';\n        }\n\n        this.submission = submission;\n        this.uploader = new Uploader(form);\n        this.history = new ValueHistory(submission.formData());\n\n        // These data attributes aren't used by Formulaire, but are useful for user customization\n        document.body.dataset.formulaireFormId = form.id();\n        document.body.dataset.formulaireSubmissionId = submission.id();\n    }\n\n    view() {\n        if (this.errorPage) {\n            return m(PageContainer, {\n                showSideNav: app.forum.attribute('formulaireShowSideNavOnSubmission'),\n                narrow: true,\n            }, m(ErrorPage, {\n                error: this.errorPage,\n            }));\n        }\n\n        if (!this.submission) {\n            return LoadingIndicator.component({className: 'LoadingIndicator--block'});\n        }\n\n        const form = this.submission.form();\n\n        // This shouldn't happen, but we do it for TypeScript\n        if (!form) {\n            throw 'Missing form relationship';\n        }\n\n        const list = new FieldList({\n            configs: form.template()!,\n            submission: this.history.value,\n            uploader: this.uploader,\n            onchange: () => {\n                this.history.save();\n                this.dirty = true;\n            },\n            disabled: this.loading || this.uploader.uploading,\n            validationErrors: this.validationErrors,\n        });\n\n        const badges = this.submission.badges().toArray();\n\n        const controls = this.controls(this.submission).toArray();\n\n        return m(PageContainer, {\n            showSideNav: app.forum.attribute('formulaireShowSideNavOnSubmission'),\n            narrow: true,\n        }, [\n            m('h2', [\n                form.title(),\n                badges.length ? m('ul.FormulaireDataTable-badges.badges', listItems(badges)) : null,\n            ]),\n            controls.length ? m('.Form-group', controls) : null,\n            this.submission.attribute('canEdit') ? null : m('p', app.translator.trans(translationPrefix + 'edit-forbidden')),\n            m('div', {\n                className: isHorizontalLayout(this.submission.attribute('canEdit') ? 'StandaloneEdit' : 'SubmissionView') ? 'Formulaire-horizontal-layout' : '',\n            }, list.listView(!this.submission.attribute('canEdit'))),\n            m(SaveControls, {\n                dirty: this.dirty,\n                loading: this.loading,\n                savedAt: this.savedAt,\n                inError: Object.keys(this.validationErrors).length,\n                history: app.forum.attribute('formulaireShowHistoryControls') ? this.history : null,\n                onsave: () => {\n                    this.loading = true;\n\n                    this.submission!.save({\n                        data: this.history.value,\n                    }, {\n                        errorHandler: this.onerror.bind(this),\n                    }).then(() => {\n                        this.loading = false;\n                        this.dirty = false;\n                        this.savedAt = new Date();\n                        this.validationErrors = {};\n                        this.history.clear();\n                        m.redraw();\n                    });\n                },\n                floating: true,\n            }),\n        ]);\n    }\n\n    controls(submission: Submission) {\n        const items = new ItemList();\n\n        if (submission.attribute('canLock')) {\n            items.add('lock', Button.component({\n                className: 'Button',\n                loading: this.locking,\n                onclick: () => {\n                    this.locking = true;\n\n                    submission.save({\n                        isLocked: !submission.isLocked(),\n                    }).then(() => {\n                        this.locking = false;\n                        m.redraw();\n                    }).catch(err => {\n                        this.locking = false;\n                        m.redraw();\n                        throw err;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + (submission.isLocked() ? 'unlock' : 'lock'))));\n        }\n\n        if (submission.isHidden() && submission.attribute('canRestore')) {\n            items.add('hide', Button.component({\n                className: 'Button',\n                loading: this.restoring,\n                onclick: () => {\n                    this.restoring = true;\n\n                    submission.save({\n                        isHidden: false,\n                    }).then(() => {\n                        this.restoring = false;\n                        m.redraw();\n                    }).catch(err => {\n                        this.restoring = false;\n                        m.redraw();\n                        throw err;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'restore')));\n        }\n\n        if (!submission.isHidden() && submission.attribute('canHide')) {\n            items.add('hide', Button.component({\n                className: 'Button',\n                loading: this.deleting,\n                onclick: () => {\n                    this.deleting = true;\n\n                    submission.save({\n                        isHidden: true,\n                    }).then(() => {\n                        this.deleting = false;\n                        m.redraw();\n                    }).catch(err => {\n                        this.deleting = false;\n                        m.redraw();\n                        throw err;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'hide')));\n        }\n\n        if (submission.isHidden() && submission.attribute('canDelete')) {\n            items.add('delete', Button.component({\n                className: 'Button',\n                loading: this.deleting,\n                onclick: () => {\n                    if (confirm(extractText(app.translator.trans(translationPrefix + 'delete-confirmation', {\n                        date: submission.createdAt(),\n                    })))) {\n                        this.deleting = true;\n\n                        submission.delete().then(() => {\n                            this.deleting = false;\n                            m.redraw();\n\n                            const form = submission.form();\n\n                            if (form) {\n                                m.route.set(formulaireSubmissionIndex(form));\n                            }\n                        }).catch(err => {\n                            this.deleting = false;\n                            m.redraw();\n                            throw err;\n                        });\n                    }\n                },\n            }, app.translator.trans(translationPrefix + 'delete')));\n        }\n\n        return items;\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Switch from 'flarum/common/components/Switch';\nimport FieldList from '../fields/FieldList';\nimport ValueHistory from '../utils/ValueHistory';\nimport Uploader from '../utils/Uploader';\nimport SaveControls from '../components/SaveControls';\nimport {FormTemplate, SubmissionPayload, SubmissionValidationErrors} from '../models/JsonTypes';\n\nexport default class DebugPage extends Page {\n    configuration!: FormTemplate\n    submission!: SubmissionPayload\n    errors!: SubmissionValidationErrors\n    history: ValueHistory | null = null\n    horizontal: boolean = false\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        m.request({\n            url: app.forum.attribute('apiUrl') + '/formulaire/debug',\n            method: 'GET',\n        }).then((data: any) => {\n            this.configuration = data.configuration;\n            this.submission = data.submission;\n            this.errors = data.errors;\n            data.store.forEach((model: any) => {\n                app.store.pushObject(model);\n            });\n\n            this.history = new ValueHistory(this.configuration);\n        });\n    }\n\n    view() {\n        if (!this.history) {\n            return m('i', '...');\n        }\n\n        const list = new FieldList({\n            configs: this.history.value,\n            submission: this.submission,\n            uploader: { // Fake object so that the form can render\n                uploading: false,\n            } as Uploader,\n            onchange: () => {\n                this.history!.save();\n            },\n            expertMode: true,\n            validationErrors: this.errors,\n        });\n\n        return m('.FormulaireDebugPage', {\n            className: this.horizontal ? 'Formulaire-horizontal-layout' : '',\n        }, [\n            m('div', [\n                Switch.component({\n                    state: this.horizontal,\n                    onchange: (value: boolean) => {\n                        this.horizontal = value;\n                    },\n                }, 'Horizontal'),\n                m('pre', JSON.stringify(this.history.value, null, 4)),\n                m('pre', JSON.stringify(this.submission, null, 4)),\n            ]),\n            m('div', [\n                list.configureView(),\n                m(SaveControls, {\n                    history: this.history,\n                    floating: true,\n                }),\n            ]),\n            m('div', list.listView()),\n            m('div', list.listView(true)),\n        ]);\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport RequestError from 'flarum/common/utils/RequestError';\nimport FieldList from '../fields/FieldList';\nimport ValueHistory from '../utils/ValueHistory';\nimport SaveControls from '../components/SaveControls';\nimport parseValidationError from '../utils/parseValidationError';\nimport Uploader from '../utils/Uploader';\nimport Form from '../models/Form';\n\ninterface LinkedFormFillAttrs {\n    form: Form\n    linked: Model\n    floating?: boolean\n    className?: string\n}\n\nexport default class LinkedFormFill implements ClassComponent<LinkedFormFillAttrs> {\n    uploader!: Uploader\n    history!: ValueHistory\n    dirty: boolean = false\n    loading: boolean = false\n    savedAt: Date | null = null\n    validationErrors: any = {}\n\n    oninit(vnode: Vnode<LinkedFormFillAttrs, this>) {\n        const {form, linked} = vnode.attrs;\n\n        const submissions = linked.formulaireSubmissions(); // Use the relationship, that way we are certain all submissions in there are already for the correct linked resource\n        const submission = submissions ? submissions.find(submission => {\n            const thisForm = submission.form();\n\n            return thisForm && thisForm.id() === form.id();\n        }) : null;\n        this.uploader = new Uploader(form);\n\n        this.history = new ValueHistory(submission ? submission.formData() : {});\n    }\n\n    view(vnode: Vnode<LinkedFormFillAttrs, this>) {\n        const {form, linked} = vnode.attrs;\n\n        const list = new FieldList({\n            configs: form.template()!,\n            submission: this.history.value,\n            uploader: this.uploader,\n            onchange: () => {\n                this.history.save();\n                this.dirty = true;\n            },\n            disabled: this.loading || this.uploader.uploading,\n            validationErrors: (this.validationErrors.formulaireForms || {})[form.id()!],\n        });\n\n        const inReadOnly = !form.attribute('canSubmit');\n\n        return m('.FormulaireLinkedForm', {\n            className: vnode.attrs.className,\n        }, [\n            list.listView(inReadOnly),\n            m(SaveControls, {\n                dirty: this.dirty,\n                loading: this.loading,\n                savedAt: this.savedAt,\n                inError: Object.keys(this.validationErrors).length > 0,\n                history: app.forum.attribute('formulaireShowHistoryControls') ? this.history : null,\n                floating: typeof vnode.attrs.floating === 'undefined' ? true : vnode.attrs.floating,\n                onsave: () => {\n                    this.loading = true;\n\n                    linked.save({\n                        relationships: {\n                            formulaireForms: [\n                                {\n                                    verbatim: true, // Flarum workaround, handled in patchStore\n                                    type: 'formulaire-forms', // Not required for API, but required for save() which stores this info\n                                    id: form.id(),\n                                    attributes: {\n                                        data: this.history.value,\n                                    },\n                                } as any,\n                            ],\n                        },\n                    }, {\n                        errorHandler: this.onerror.bind(this),\n                    }).then(() => {\n                        this.loading = false;\n                        this.dirty = false;\n                        this.savedAt = new Date();\n                        this.validationErrors = {};\n                        this.history.clear();\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n            }),\n        ]);\n    }\n\n    onerror(error: RequestError) {\n        this.loading = false;\n\n        let wasHandled = false;\n\n        if (error.status === 422 && error.response?.errors) {\n            wasHandled = true;\n\n            this.validationErrors = parseValidationError(error);\n        }\n\n        m.redraw();\n\n        if (!wasHandled) {\n            throw error;\n        }\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport User from 'flarum/common/models/User';\nimport LinkedFormFill from '../components/LinkedFormFill';\nimport Form from '../models/Form';\nimport isHorizontalLayout from '../utils/isHorizontalLayout';\n\nexport default class ProfilePage extends UserPage {\n    form: Form | null = null\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    show(user: User) {\n        // The form should already be in the store because it's a user relation\n        // We can simply look by slug because the slug will contain the UID if there is no slug\n        // We need to do this in show() because the data will only be added to the store once the user was loaded by loadUser()\n        const seoId = m.route.param('form');\n        this.form = app.store.getBy<Form>('formulaire-forms', 'seoId', seoId) || null;\n\n        // Call super.show afterwards, since it will trigger a redraw\n        super.show(user);\n    }\n\n    content() {\n        return this.form ? m(LinkedFormFill, {\n            // Necessary to force the fields to re-render when switching between multiple forms in profile\n            key: this.form.id(),\n            form: this.form,\n            linked: this.user,\n            className: isHorizontalLayout(this.form.attribute('canSubmit') ? 'ProfileEdit' : 'ProfileView') ? 'Formulaire-horizontal-layout' : '',\n        }) : LoadingIndicator.component();\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","import {extend, override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport ComposerState from 'flarum/forum/states/ComposerState';\nimport Discussion from 'flarum/common/models/Discussion';\nimport FieldList from './fields/FieldList';\nimport Uploader from './utils/Uploader';\nimport Form from './models/Form';\nimport isHorizontalLayout from './utils/isHorizontalLayout';\nimport parseValidationError from './utils/parseValidationError';\n\nfunction applies(form: Form, composerState: ComposerState): boolean {\n    if (!form.link_id()) {\n        return true;\n    }\n\n    const selectedTags = composerState.fields.tags;\n\n    // If there's no valid tag selection, don't show any scoped form\n    if (!Array.isArray(selectedTags)) {\n        return false;\n    }\n\n    // Show forms for selected tags\n    return selectedTags.some(tag => {\n        return tag.id() == form.link_id();\n    });\n}\n\nexport default function () {\n    extend(DiscussionComposer.prototype, 'oninit', function () {\n        this.formulaireValidationErrors = {};\n        this.formulaireRequestErrorAlert = null;\n\n        // If clarkwinkelmann-composer-page is used, there could be new instances of ComposerBody initialized for a single composer session\n        if (this.composer.fields.formulaire) {\n            return;\n        }\n        this.composer.fields.formulaire = {};\n\n        const forms = app.forum.formulaireComposerForms() || [];\n\n        forms.forEach(form => {\n            this.composer.fields.formulaire[form.id()!] = {\n                value: {},\n                uploader: new Uploader(form),\n            };\n        });\n    });\n\n    extend(DiscussionComposer, 'initAttrs', function (returnValue, attrs) {\n        if (isHorizontalLayout('DiscussionComposer')) {\n            attrs.className += ' Formulaire-horizontal-layout';\n        }\n    });\n\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        const forms = app.forum.formulaireComposerForms() || [];\n\n        const template: any[] = [];\n\n        forms.forEach(form => {\n            if (!applies(form, this.composer)) {\n                return;\n            }\n\n            const state = this.composer.fields.formulaire[form.id()!];\n\n            const list = new FieldList({\n                configs: form.template()!,\n                submission: state.value,\n                uploader: state.uploader,\n                disabled: this.loading || state.uploader.uploading,\n                validationErrors: (this.formulaireValidationErrors.formulaireForms || {})[form.id()!],\n            });\n\n            template.push(list.listView());\n        });\n\n        if (template.length) {\n            items.add('formulaire', m('.FormulaireDiscussionComposer', template));\n        }\n    });\n\n    extend(DiscussionComposer.prototype, 'data', function (data: any) {\n        // Probably not the most descriptive hook to reset the validation errors,\n        // but we need to do it just before the next request and that's exactly when this hook runs\n        this.formulaireValidationErrors = {};\n\n        if (this.formulaireRequestErrorAlert !== null) {\n            app.alerts.dismiss(this.formulaireRequestErrorAlert);\n        }\n\n        const forms = app.forum.formulaireComposerForms() || [];\n\n        const formData: any[] = [];\n\n        forms.forEach(form => {\n            if (!applies(form, this.composer)) {\n                return;\n            }\n\n            formData.push({\n                verbatim: true, // Flarum workaround, handled in patchStore\n                id: form.id(),\n                attributes: {\n                    data: this.composer.fields.formulaire[form.id()!].value,\n                },\n            });\n        });\n\n        if (formData.length) {\n            data.relationships = data.relationships || {};\n            data.relationships.formulaireForms = formData;\n            data.formulaireSaveOptions = {\n                errorHandler: (error: any) => {\n                    if (error.status === 422 && error.response.errors) {\n                        this.formulaireValidationErrors = parseValidationError(error);\n                    }\n\n                    m.redraw();\n\n                    // Systematically show the error because otherwise it's not very obvious an error occurred\n                    // This also includes non-Formulaire error because we can't easily fallback to the default alert\n                    if (error.alert) {\n                        this.formulaireRequestErrorAlert = app.alerts.show(error.alert, error.alert.content);\n                    }\n                },\n            };\n        }\n    });\n\n    override(ComposerState.prototype, 'minimumHeight', function (original) {\n        const originalHeight = original();\n\n        if (!this.bodyMatches(DiscussionComposer)) {\n            return originalHeight;\n        }\n\n        const forms = app.forum.formulaireComposerForms() || [];\n\n        let formulaireHeight = 0;\n\n        forms.forEach(form => {\n            if (!applies(form, this)) {\n                return;\n            }\n\n            const template = form.template();\n\n            if (!template) {\n                return;\n            }\n\n            template.forEach(field => {\n                switch (field.type) {\n                    case 'items':\n                    case 'upload':\n                        // Items and Upload will change height as the user types into them, so we'll make a basic estimate\n                        // but not continually change the composer height during composing\n                        formulaireHeight += 120;\n                        break;\n                    case 'checkbox':\n                    case 'radio':\n                        formulaireHeight += (field.options || []).length * 36;\n\n                        if (field.other) {\n                            formulaireHeight += 36;\n                        }\n\n                        break;\n                    default:\n                        formulaireHeight += 36; // Standard input field height\n                }\n\n                if (!isHorizontalLayout('DiscussionComposer')) {\n                    formulaireHeight += 31; // label is 21px + 10px for margin bottom\n                }\n\n                formulaireHeight += 10; // .Form-group padding bottom\n            });\n        });\n\n        // This hard-coded maximum height is also hard-coded in the CSS to enable scrolling\n        return originalHeight + Math.min(formulaireHeight, 500);\n    });\n\n    // Flarum doesn't allow setting a custom error handler on ComposerBody.onsubmit\n    // We'll work around that by allowing to pass a special name in the save data which will be moved to the request options\n    override(Discussion.prototype, 'save', function (original, attributes, options = {}) {\n        const {\n            formulaireSaveOptions,\n            ...newAttributes\n        } = attributes;\n\n        const additionalOptions = (formulaireSaveOptions as { [key: string]: any }) || {};\n\n        return original(newAttributes, {\n            ...options,\n            ...additionalOptions\n        });\n    });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","import Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Discussion from 'flarum/common/models/Discussion';\nimport LinkedFormFill from '../components/LinkedFormFill';\nimport Form from '../models/Form';\nimport isHorizontalLayout from '../utils/isHorizontalLayout';\n\ninterface DiscussionFormModalAttrs extends IInternalModalAttrs {\n    form: Form\n    discussion: Discussion\n}\n\nexport default class DiscussionFormModal extends Modal<DiscussionFormModalAttrs> {\n    className() {\n        return 'FormulaireModal FormulaireTheme Modal--large';\n    }\n\n    title() {\n        return this.attrs.form.title();\n    }\n\n    content() {\n        return m('.Modal-body', m(LinkedFormFill, {\n            form: this.attrs.form,\n            linked: this.attrs.discussion,\n            floating: false,\n            className: isHorizontalLayout('DiscussionEdit') ? 'Formulaire-horizontal-layout' : '',\n        }));\n    }\n\n    onsubmit(event: Event) {\n        // Prevent the page refreshing when typing enter\n        // TODO: submit the actual Formulaire form when doing that\n        event.preventDefault();\n    }\n}\n","import {ClassComponent, Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Discussion from 'flarum/common/models/Discussion';\nimport extractText from 'flarum/common/utils/extractText';\nimport FieldList from '../fields/FieldList';\nimport DiscussionFormModal from '../modals/DiscussionFormModal';\nimport Form from '../models/Form';\nimport Submission from '../models/Submission';\nimport isHorizontalLayout from '../utils/isHorizontalLayout';\n\ninterface DiscussionSubmissionAttrs {\n    form: Form\n    discussion: Discussion\n}\n\nexport default class DiscussionSubmission implements ClassComponent<DiscussionSubmissionAttrs> {\n    view(vnode: Vnode<DiscussionSubmissionAttrs, this>) {\n        const {form, discussion} = vnode.attrs;\n\n        const submissions = discussion.formulaireSubmissions(); // Use the relationship, that way we are certain all submissions in there are already for the correct user\n        const submission = submissions ? submissions.find(submission => {\n            const thisForm = submission.form();\n            return thisForm && thisForm.id() === form.id();\n        }) : null;\n\n        return m('.FormulaireDiscussionForms', {\n            className: isHorizontalLayout('DiscussionView') ? 'Formulaire-horizontal-layout' : '',\n        }, [\n            m('h3', form.title()),\n            form.attribute('canSubmit') ? Button.component({\n                onclick: () => {\n                    app.modal.show(DiscussionFormModal, {\n                        form,\n                        discussion,\n                    });\n                },\n                className: 'Button Button--icon',\n                icon: 'fas fa-pen',\n                title: extractText(app.translator.trans('kilowhat-formulaire.forum.discussion-submission.edit')),\n            }) : null,\n            this.submissionView(form, submission),\n        ]);\n    }\n\n    submissionView(form: Form, submission: Submission | null | undefined) {\n        if (!submission) {\n            return m('p', app.translator.trans('kilowhat-formulaire.forum.discussion-submission.empty'));\n        }\n\n        const list = new FieldList({\n            configs: form.template()!,\n            submission: submission.formData()!,\n        });\n\n        return list.listView(true);\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Post from 'flarum/common/models/Post';\nimport DiscussionSubmission from './components/DiscussionSubmission';\n\nfunction showFieldsOnPost(post: Post) {\n    return post.number() === 1;\n}\n\nexport default function () {\n    extend(CommentPost.prototype, 'oninit', function (this: CommentPost) {\n        if (!showFieldsOnPost(this.attrs.post)) {\n            return;\n        }\n\n        this.subtree.check(() => {\n            const submissions = this.attrs.post.discussion().formulaireSubmissions();\n            // Create a string with the submission data to all fields\n            return submissions ? submissions.map(submission => JSON.stringify(submission.formData())).join(',') : '';\n        });\n    });\n\n    extend(CommentPost.prototype, 'content', function (this: CommentPost, content) {\n        const {post} = this.attrs;\n\n        if (!showFieldsOnPost(post)) {\n            return;\n        }\n\n        const forms = post.discussion().formulaireForms();\n\n        if (!forms) {\n            return;\n        }\n\n        const postHeaderIndex = content.findIndex((item: any) => item && item.attrs && item.attrs.className === 'Post-header');\n\n        // Insert the new content just after the header\n        // or at the very beginning if the header is not found\n        content.splice(postHeaderIndex === -1 ? 0 : postHeaderIndex + 1, 0, forms.map(form => m(DiscussionSubmission, {\n            form,\n            discussion: post.discussion(),\n        })));\n    });\n}\n","import app from 'flarum/forum/app';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nconst ACTIVE_ROUTES = [\n    'formulaireFormIndex',\n    'formulaireFormIndexDiscussion',\n    'formulaireFormIndexUser',\n    'formulaireFormEdit',\n    'formulaireSubmissionIndex',\n];\n\n// @ts-ignore Missing view() typings in Flarum\nexport default class SettingsLinkButton extends LinkButton {\n    static initAttrs(attrs: any) {\n        super.initAttrs(attrs);\n\n        attrs.active = this.isActive(attrs);\n        attrs.icon = 'fas fa-poll-h';\n        attrs.href = app.route('formulaireFormIndex');\n    }\n\n    getButtonContent() {\n        return super.getButtonContent(app.translator.trans('kilowhat-formulaire.forum.nav.forms'));\n    }\n\n    static isActive(attrs: any) {\n        return m.route.get() === attrs.href || ACTIVE_ROUTES.indexOf((app.current.data as any).routeName) !== -1;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SignUpModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/BasicEditorDriver'];","import DiscreetInput from './DiscreetInput';\nimport DiscussionSubmission from './DiscussionSubmission';\nimport ErrorPage from './ErrorPage';\nimport FormEditHeader from './FormEditHeader';\nimport FormGroup from './FormGroup';\nimport FormSortDropdown from './FormSortDropdown';\nimport FormTitle from './FormTitle';\nimport GlobalSettings from './GlobalSettings';\nimport LinkedFormFill from './LinkedFormFill';\nimport PageContainer from './PageContainer';\nimport PermissionDropdown from './PermissionDropdown';\nimport RichTextField from './RichTextField';\nimport SaveControls from './SaveControls';\nimport SettingsLinkButton from './SettingsLinkButton';\nimport Sortable from './Sortable';\nimport SortableHandle from './SortableHandle';\nimport SubmissionSortDropdown from './SubmissionSortDropdown';\nimport ValidationErrors from './ValidationErrors';\n\nexport const components = {\n    DiscreetInput,\n    DiscussionSubmission,\n    ErrorPage,\n    FormEditHeader,\n    FormGroup,\n    FormSortDropdown,\n    FormTitle,\n    GlobalSettings,\n    LinkedFormFill,\n    PageContainer,\n    PermissionDropdown,\n    RichTextField,\n    SaveControls,\n    SettingsLinkButton,\n    Sortable,\n    SortableHandle,\n    SubmissionSortDropdown,\n    ValidationErrors,\n};\n","import Content from './Content';\nimport Date from './Date';\nimport Field from './Field';\nimport FieldList from './FieldList';\nimport Items from './Items';\nimport LongAnswer from './LongAnswer';\nimport Number from './Number';\nimport ShortAnswer from './ShortAnswer';\nimport typeMap from './typeMap';\nimport Upload from './Upload';\n\nexport const fields = {\n    Content,\n    Date,\n    Field,\n    FieldList,\n    Items,\n    LongAnswer,\n    Number,\n    ShortAnswer,\n    typeMap,\n    Upload,\n};\n","import AbstractFormPage from './AbstractFormPage';\nimport AbstractProcessingPage from './AbstractProcessingPage';\nimport DebugPage from './DebugPage';\nimport FormEditPage from './FormEditPage';\nimport FormIndexPage from './FormIndexPage';\nimport FormShowPage from './FormShowPage';\nimport ProfilePage from './ProfilePage';\nimport SubmissionIndexPage from './SubmissionIndexPage';\nimport SubmissionPage from './SubmissionPage';\n\nexport const pages = {\n    AbstractFormPage,\n    AbstractProcessingPage,\n    DebugPage,\n    FormEditPage,\n    FormIndexPage,\n    FormShowPage,\n    ProfilePage,\n    SubmissionIndexPage,\n    SubmissionPage,\n};\n","import app from 'flarum/forum/app';\nimport {Extend} from '@flarum/core/forum';\nimport File from './models/File';\nimport Form from './models/Form';\nimport Submission from './models/Submission';\nimport FormIndexPage from './pages/FormIndexPage';\nimport FormShowPage from './pages/FormShowPage';\nimport FormEditPage from './pages/FormEditPage';\nimport SubmissionIndexPage from './pages/SubmissionIndexPage';\nimport SubmissionPage from './pages/SubmissionPage';\nimport DebugPage from './pages/DebugPage';\nimport ProfilePage from './pages/ProfilePage';\nimport addComposerFields from './addComposerFields';\nimport addFormOnDiscussionPost from './addFormOnDiscussionPost';\nimport addLinks from './addLinks';\nimport addRoutes from './addRoutes';\nimport addSignUpFields from './addSignUpFields';\nimport addUnifiedComposer from './addUnifiedComposer';\nimport patchStore from './patchStore';\n\nexport * from './components';\nexport * from './fields';\nexport * from './pages';\n\nexport const extend = [\n    new Extend.Model('formulaire-files', File),\n    new Extend.Model('formulaire-forms', Form),\n    new Extend.Model('formulaire-submissions', Submission),\n    new Extend.Model('forums')\n        .attribute('formulaireCanManage')\n        .hasMany('formulaireSignUpForms')\n        .hasMany('formulaireComposerForms'),\n    new Extend.Model('discussions')\n        .hasMany('formulaireForms')\n        .hasMany('formulaireSubmissions'),\n    new Extend.Model('users')\n        .hasMany('formulaireForms')\n        .hasMany('formulaireSubmissions'),\n\n    new Extend.Routes()\n        .add('formulaireFormIndex', '/formulaire', FormIndexPage)\n        .add('formulaireFormIndexDiscussion', '/formulaire/discussion', FormIndexPage)\n        .add('formulaireFormIndexUser', '/formulaire/user', FormIndexPage)\n        .add('formulaireFormShow', '/forms/:id', FormShowPage)\n        .add('formulaireFormEdit', '/formulaire/:id', FormEditPage)\n        .add('formulaireSubmissionIndex', '/formulaire/:id/submissions', SubmissionIndexPage)\n        .add('formulaireSubmission', '/submissions/:id', SubmissionPage)\n        .add('formulaireDebug', '/formulaire-debug', DebugPage)\n        .add('formulaireProfile', '/u/:username/forms/:form', ProfilePage),\n];\n\napp.initializers.add('kilowhat-formulaire', () => {\n    addLinks();\n    addComposerFields();\n    addFormOnDiscussionPost();\n    addRoutes();\n    addSignUpFields();\n    patchStore();\n});\n\n// The priority isn't super important, as long as it's below zero\n// This is to make sure that it works even if Flarum's optional extension dependencies are not resolving quite right\napp.initializers.add('kilowhat-formulaire-delayed', () => {\n    addUnifiedComposer();\n}, -100);\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SettingsLinkButton from './components/SettingsLinkButton';\nimport Form from './models/Form';\nimport {formulaireProfile} from './routes';\n\nexport default function () {\n    extend(IndexPage.prototype, 'navItems', function (items) {\n        if (app.forum.attribute('formulaireCanManage')) {\n            items.add('formulaire', SettingsLinkButton.component());\n        }\n    });\n\n    extend(UserPage.prototype, 'navItems', function (this: UserPage, items) {\n        const forms = this.user.formulaireForms();\n\n        if (forms) {\n            forms.forEach((form: Form) => {\n                items.add('formulaire-' + form.id(), LinkButton.component({\n                    icon: 'fas fa-poll-h',\n                    href: formulaireProfile(this.user, form),\n                }, form.title()));\n            });\n        }\n    });\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import app from 'flarum/forum/app';\nimport * as routes from './routes';\n\nexport default function () {\n    // The extension will not use the methods from app.route anymore, but we keep them for backward compatibility if other extensions use them\n    app.route.formulaireFormShow = routes.formulaireFormShow;\n    app.route.formulaireFormEdit = routes.formulaireFormEdit;\n    app.route.formulaireSubmissionIndex = routes.formulaireSubmissionIndex;\n    app.route.formulaireSubmission = routes.formulaireSubmission;\n    app.route.formulaireProfile = routes.formulaireProfile;\n}\n","import {extend, override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport SignUpModal from 'flarum/forum/components/SignUpModal';\nimport FieldList from './fields/FieldList';\nimport Uploader from './utils/Uploader';\nimport isHorizontalLayout from './utils/isHorizontalLayout';\nimport parseValidationError from './utils/parseValidationError';\n\nexport default function () {\n    extend(SignUpModal.prototype, 'oninit', function (this: SignUpModal) {\n        const forms = app.forum.formulaireSignUpForms() || [];\n\n        this.formulaire = {};\n        this.formulaireValidationErrors = {};\n\n        forms.forEach(form => {\n            this.formulaire[form.id()!] = {\n                value: {},\n                uploader: new Uploader(form),\n            };\n        });\n    });\n\n    extend(SignUpModal.prototype, 'fields', function (this: SignUpModal, items) {\n        const forms = app.forum.formulaireSignUpForms() || [];\n\n        forms.forEach(form => {\n            const state = this.formulaire[form.id()!];\n\n            const list = new FieldList({\n                configs: form.template()!,\n                submission: state.value,\n                uploader: state.uploader,\n                disabled: this.loading || state.uploader.uploading,\n                validationErrors: (this.formulaireValidationErrors.formulaireForms || {})[form.id()!],\n            });\n\n            items.add('formulaire-' + form.seoId(), m('.FormulaireSignUpForm', {\n                className: isHorizontalLayout('SignUp') ? 'Formulaire-horizontal-layout' : '',\n            }, list.listView()));\n        });\n    });\n\n    extend(SignUpModal.prototype, 'submitData', function (this: SignUpModal, data: any) {\n        const forms = app.forum.formulaireSignUpForms() || [];\n\n        forms.forEach(form => {\n            // We can't use a relationships object because the /register endpoint doesn't follow JSON:API\n            if (!data.formulaireForms) {\n                data.formulaireForms = [];\n            }\n\n            data.formulaireForms.push({\n                id: form.id(),\n                attributes: {\n                    data: this.formulaire[form.id()!].value,\n                },\n            });\n        });\n    });\n\n    // Use override so our code happens before the modal's redraw, so we don't have to redraw twice\n    // Also for some reason the code doesn't seem to be called at all when using extend()\n    override(SignUpModal.prototype, 'onerror', function (original, error) {\n        if (error.status === 422 && error.response?.errors) {\n            this.formulaireValidationErrors = parseValidationError(error);\n        }\n\n        return original(error);\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\n\nexport default function () {\n    /**\n     * The way Flarum parses relationships inside of the save() method prevents us from saving data alongside the relation\n     * To work around this, we override this method that will allow us to pass down raw objects directly in the model during save\n     * The same code is used in fof/taxonomies\n     */\n    override(Model, 'getIdentifier', function (original: any, model: any) {\n        if (model.verbatim) {\n            delete model.verbatim;\n\n            return model;\n        }\n\n        return original(model);\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport BasicEditorDriver from 'flarum/common/utils/BasicEditorDriver';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport FormGroup from './components/FormGroup';\n\n// Use a separate function from the main composer changes so we can change its priority\nexport default function () {\n    extend(DiscussionComposer, 'initAttrs', function (returnValue, attrs) {\n        if (app.forum.attribute('formulaireUniformComposerLayout')) {\n            attrs.className += ' Formulaire-uniform-layout';\n        }\n    });\n\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (!app.forum.attribute('formulaireUniformComposerLayout')) {\n            return;\n        }\n\n        if (items.has('tags')) {\n            const tagSelector = items.get('tags');\n\n            items.setContent('tags', m(FormGroup, {\n                label: m('label', app.translator.trans('kilowhat-formulaire.forum.discussion-composer.field.tags')),\n                validationErrors: this.formulaireValidationErrors.tags,\n            }, m('.FormControl.FormulaireTagFormControl', tagSelector)));\n        }\n\n        Object.keys(items.toObject()).forEach(key => {\n            if (key.indexOf('taxonomy-') !== 0) {\n                return;\n            }\n\n            const taxonomyInput = items.get(key);\n\n            items.setContent(key, m(FormGroup, {\n                label: m('label', (taxonomyInput && taxonomyInput.attrs['data-taxonomy-name']) || '?'),\n                validationErrors: this.formulaireValidationErrors.tags,\n            }, m('.FormControl.FormulaireTagFormControl', taxonomyInput)));\n        });\n\n        if (items.has('polls')) {\n            const tagSelector = items.get('polls');\n\n            items.setContent('polls', m(FormGroup, {\n                label: m('label', app.translator.trans('kilowhat-formulaire.forum.discussion-composer.field.poll')),\n            }, m('.FormControl.FormulaireTagFormControl', tagSelector)));\n        }\n\n        items.setContent('discussionTitle', m(FormGroup, {\n            label: m('label', {\n                for: 'discussionComposerTitle',\n            }, app.translator.trans('kilowhat-formulaire.forum.discussion-composer.field.title')),\n            validationErrors: this.formulaireValidationErrors.title,\n        }, m('input#discussionComposerTitle.FormControl', {\n            bidi: this.title,\n            placeholder: this.attrs.titlePlaceholder,\n            disabled: this.attrs.disabled,\n            onkeydown: this.onkeydown.bind(this),\n        })));\n\n        items.add('formulaireContentLabel', m(FormGroup, {\n            label: m('label', {\n                for: 'discussionComposerContent',\n            }, app.translator.trans('kilowhat-formulaire.forum.discussion-composer.field.content')),\n        }), -10000); // Must be at the very end since it's for the text editor which is outside of the header items\n    });\n\n    extend(BasicEditorDriver.prototype, 'build', function () {\n        if (!app.forum.attribute('formulaireUniformComposerLayout')) {\n            return;\n        }\n\n        // Only needed to connect the new label to the existing field\n        this.el.id = 'discussionComposerContent';\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","File","filename","Model","humanSize","url","Form","seoId","link_type","link_id","slug","title","private_title","template","accept_submissions","allow_modification","max_submissions","submission_count","send_confirmation_to_participants","notify_emails","web_confirmation_message","confirmationMessageHtml","email_confirmation_message","email_notification_message","email_confirmation_title","email_notification_title","automatic_discussion_options","permission_see_own","permission_see_any","permission_edit_own","permission_edit_any","show_on_creation","isHidden","user","type","computed","isAutoLink","options","enabled","badges","items","ItemList","this","add","Badge","icon","label","app","apiEndpoint","exists","data","id","Submission","formData","isLocked","createdAt","form","formulaireFormShow","formulaireFormEdit","formulaireSubmissionIndex","formulaireSubmission","submission","formulaireProfile","username","translationPrefix","NewFormModal","formTitle","dirty","className","content","m","oninput","withAttr","Button","loading","disabled","onsubmit","event","preventDefault","save","attrs","linkType","errorHandler","onerror","then","route","set","Modal","PageContainer","view","vnode","pageClass","noTheme","showSideNav","narrow","listItems","IndexPage","toArray","children","FormListState","params","forms","moreResults","requestParams","filter","sort","sortMap","q","map","clear","redraw","refresh","deferClear","loadResults","results","parseResults","offset","preloadedSubmissions","Promise","resolve","page","loadMore","length","push","payload","links","next","FormSortDropdown","sortOptions","forEach","extractText","activeValue","keys","Dropdown","buttonClassName","active","onclick","onchange","_extends","assign","target","i","arguments","source","apply","badgeForId","group","GroupBadge","PermissionDropdown","initAttrs","groupIds","inherit","everyone","indexOf","Group","members","adminGroup","showing","disallowInherit","allowGuest","isGroupDisabled","guestMeansDisabled","Separator","e","shiftKey","stopPropagation","namePlural","toggle","groupId","index","splice","GlobalSettings","globalPermissions","hidden","localStorage","getItem","isAdmin","removeItem","setItem","permission","component","method","body","SearchInput","debounce","oninit","initialValue","clearTimeout","setTimeout","placeholder","TABS","FormIndexPage","formType","formList","routeName","href","tab","LinkButton","list","state","LoadingIndicator","submissionCount","Placeholder","text","Page","Sortable","sortingIndex","showPlaceholderForIndex","dragoverenterhandler","drophandler","oncreate","dataTransfer","dropEffect","targetIndex","dom","childNodes","element","parseInt","dataset","isNaN","position","getBoundingClientRect","direction","width","middleX","left","pageX","window","scrollX","height","middleY","top","pageY","scrollY","document","addEventListener","origin","destination","onsort","onremove","removeEventListener","style","display","ondragstart","parent","parentNode","HTMLElement","classList","contains","handleClassName","Array","from","find","elem","effectAllowed","setData","setDragImage","containerTag","placeholderTag","colspan","ValidationErrors","errors","isArray","error","FormGroup","validationErrors","description","SortableHandle","draggable","elementTag","Field","config","uploader","onduplicate","ondelete","depth","expertMode","cleanFieldConfiguration","getConfig","defaultValue","uniqueFieldId","setConfig","getSubmission","property","entry","setSubmission","theKeyInValidationErrorTree","whiteListConfigProperties","configureView","validationErrorsForAllFieldsHere","whitelistedProperties","typeOptions","short","long","number","date","checkbox","radio","select","upload","Select","configure","Switch","choiceView","renderLabelAndInput","values","otherOnChange","allOptionKeys","option","otherValue","hasOtherValue","checked","isFillDisabled","valuesWithoutOther","input","getElementById","focus","fillView","validationErrorsForThisField","for","fill","hasSubmission","displayView","optionsRule","console","warn","showNewLine","otherRule","minMaxRules","step","undefined","min","Radio","concat","isFA","substr","RichTextField","updateInterval","preview","setInterval","querySelector","s9e","TextFormatter","createElement","innerText","previewElement","innerHTML","appendChild","clearInterval","Content","trust","Date","max","Items","FieldList","configs","submissions","field","typeMap","validationErrorsForThisRow","LongAnswer","html","ShortAnswer","name","Upload","allowsMultiple","existingFiles","file","download","thisId","uploading","files","JSON","parse","stringify","accept","multiple","Checkbox","Number","uniqueIncrement","wasDuplicated","unique","whitelisted","fields","mime","listView","history","historyIndex","unshift","canUndo","canRedo","undo","redo","IGNORE_FROM_POINTER_START","errorTree","response","lastLocationInTree","pointer","split","newLocation","detail","AbstractProcessingPage","errorPage","savedAt","pageLoadErrorHandler","status","wasHandled","parseValidationError","RequestError","xhr","groupEnd","alert","ErrorPage","AbstractFormPage","param","preloadedForm","show","formulaireFormId","SaveControls","previouslyPromptedForUser","inCooldownPeriod","updateOverlayWidth","inError","onsave","floating","promptForUser","message","ago","humanTime","overlay","rect","closest","FormTitle","Uploader","reject","FormData","append","serialize","raw","result","err","FormShowPage","bodyClass","ValueHistory","attribute","isHorizontalLayout","attributes","AutomaticDiscussionOptionsModal","tags","ConfirmationEmailOptionsModal","titleValue","DiscreetInput","editable","returnVnode","FormEditHeader","restoring","deleting","backButtonHref","controls","menuClassName","updateAttribute","changeTab","accessStatus","isSubmissionPage","confirm","edit","FormEditPage","windowOnbeforeunload","tagsLoading","tagsLoaded","copyData","loadTagsIfNecessary","returnValue","onbeforeremove","warnings","warning","templateTab","placementTab","linkIdOptions","all","extensions","tag","standalone","groups","fragment","rel","accessTab","showMaxSubmissions","notificationsTab","exportTab","pushAttributes","finalPermission","localAbility","globalAbility","local","doesntAllowOnly","permissionValue","seeOwnPermission","editOwnPermission","SubmissionListState","PictureSortDropdown","META_OPTIONS","DEFAULT_META_OPTIONS","numberedPre","line","join","ExportModal","format","heading","meta","showAllMeta","optionKeys","loadingPreview","updatePreview","metaOptions","generateUrl","xlsx","xls","ods","csv","json","none","f","fk","slice","thisMeta","every","viewPreview","table","String","fromCharCode","row","displayValue","Math","round","queryString","downloadQueryString","buildQueryString","request","extract","responseText","SubmissionIndexPage","submissionList","SubmissionSortDropdown","avatar","SubmissionPage","locking","preloadedSubmission","formulaireSubmissionId","DebugPage","configuration","horizontal","store","model","LinkedFormFill","linked","formulaireSubmissions","thisForm","formulaireForms","inReadOnly","relationships","verbatim","ProfilePage","loadUser","UserPage","applies","composerState","selectedTags","some","DiscussionFormModal","discussion","DiscussionSubmission","submissionView","showFieldsOnPost","post","ACTIVE_ROUTES","SettingsLinkButton","isActive","getButtonContent","components","pages","extend","Extend","hasMany","DiscussionComposer","formulaireValidationErrors","formulaireRequestErrorAlert","composer","formulaire","formulaireSaveOptions","override","ComposerState","original","originalHeight","bodyMatches","formulaireHeight","other","Discussion","excluded","sourceKeys","CommentPost","subtree","check","postHeaderIndex","findIndex","item","routes","SignUpModal","has","tagSelector","setContent","toObject","taxonomyInput","bidi","titlePlaceholder","onkeydown","BasicEditorDriver","el"],"sourceRoot":""}